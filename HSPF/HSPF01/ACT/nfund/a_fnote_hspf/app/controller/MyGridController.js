/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('A_FNOTE_HSPF.controller.MyGridController', {
	extend : 'Ext.app.Controller',

	control : {
		"#gridAddBtn" : {
			click : 'gridAddBtnClick'
		},
		"#gridDelBtn" : {
			click : 'gridDelBtnClick'
		},
		"#gridSaveBtn" : {
			click : 'gridSaveBtnClick'
		},
		"#createBtn" : {
			click : 'createBtnClick'
		},
		"#xlsxDown" : {
			click : 'xlsxDownClick'
		},
	},

	gridAddBtnClick : function(button, e, eOpts) {
		var popup = Ext.create("A_FNOTE_HSPF.view.WinAddRow");
		popup.show();
		Ext.getCmp('rowCount').setValue(1);
	},

	gridDelBtnClick : function(button, e, eOpts) {},

	gridSaveBtnClick : function(button, e, eOpts) {},
	
	createBtnClick : function(button, e, eOpts) {
    	var store = Ext.getStore('MyStore');
    	var myGrid = Ext.getCmp('myGrid').getSelectionModel().getSelection();
    	var msg = '';
    	var flag = 'T';
    	
    	if(myGrid.length < 1){
			msg = '선택된 행이 없습니다.';
			flag = 'F';
		} else {
			for(var i=0; i<myGrid.length; i++){
				var record = myGrid[i];
				if(record.get('FNOTE_YN') == 'Y'){
					msg = '이미 생성된 행이 선택되었습니다.';
					flag = 'F';
					return;
				} else {
					record.set('V_TYPE', 'I');
				}
			}
		}
    	
    	if(flag == 'F'){
    		Ext.Msg.alert('확인', msg);
			return;
    	} else {
    		Ext.Msg.confirm('확인', '어음 생성하시겠습니까?', function(button) {
    			if (button == 'yes') {
    				store.sync({
    	    			params: {
    	    				V_TYPE : 'SYNC',
    	    				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
    	    				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
    	    			},
    	    			callback: function(records, operation, success) {
    	    				var tbController = A_FNOTE_HSPF.app.getController("TbButtonController");
    	    		    	tbController.selBtnClick();
    	    			},
    	    			success: function(response) {
    	    				Ext.toast({
    							title : ' ',
    							timeout : 1000,
    							html : '생성완료',
    							style : 'text-align: center',
    							align : 't',
    							width : 130,
    						});
    					}
    	    		});
    			}
    		});
    		
    	}
	},
	
	xlsxDownClick : function(button, e, eOpts) {
		var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
		var grid = Ext.getCmp('myGrid');
		grid.saveDocumentAs({
			type : 'xlsx',
			title : '어음등록', // 엑셀내타이틀
			fileName : currentDate + '.xlsx' // 엑셀파일이름
		});
	},

});
