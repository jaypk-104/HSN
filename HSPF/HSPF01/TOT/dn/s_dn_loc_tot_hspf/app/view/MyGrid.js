/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_DN_LOC_TOT_HSPF.view.MyGrid', {
	extend : 'Ext.grid.Panel',
	alias : 'widget.myGrid',

	requires : [ 
		'S_DN_LOC_TOT_HSPF.view.MyGridViewModel', 
		'Ext.view.Table', 
		'Ext.grid.column.RowNumberer', 
		'Ext.grid.column.Number', 
		'Ext.grid.column.Date', 
		'Ext.selection.CheckboxModel', 
		'Ext.grid.plugin.Exporter', 
		'Ext.grid.plugin.CellEditing' 
	],

	viewModel : {
		type : 'mygrid'
	},

	id : 'myGrid',
	store : 'MyStore',
	style : 'border: 1px solid lightgray; padding: 5px;',
	title : 'My Grid Panel',
	header : false,

	config : {
		tbar : [ {
			id : 'gridAddBtn',
			text : '',
			margin : '0 3 0 0',
			glyph : 'xf055@FontAwesome',
			iconCls : 'grid-add-btn',
			hidden: true
		}, {
			id : 'gridDelBtn',
			text : '',
			margin : '0 3 0 0',
			glyph : 'xf056@FontAwesome',
			iconCls : 'grid-del-btn',
			hidden: true
		}, {
			id : 'gridSaveBtn',
			xtype : 'button',
			glyph : 'xf0c7@FontAwesome',
			iconCls : 'grid-save-btn',
			margin : '0 3 0 0',
			hidden: true
		}, {
			xtype : 'container',
			flex : 1
		}, {
        	xtype: 'button',
        	id: 'printBillRcptBtn',
        	margin: '0 3 0 0',
        	text: '거래명세서 출력',
        	style: 'background-color: white; border: 0.5px solid #3367d6;',
        	cls: 'blue-btn',
        }, {
			xtype : 'button',
			glyph : 'xf1c3@FontAwesome',
			id : 'xlsxDown',
			cfg : {
				type : 'excel07',
				ext : 'xlsx'
			},
			iconCls : 'grid-excel-btn',
			margin : '0 3 0 0',
		} ]
	},

	viewConfig : {
		enableTextSelection : true,
	},

	columns : [ {
		xtype : 'rownumberer',
		width : 40
	},{
		xtype : 'gridcolumn',
		text : 'V_TYPE',
		hidden : true,
	},{
		xtype : 'gridcolumn',
		dataIndex : 'ITS_NO',
		style : 'text-align: center; font-weight: bold;',
		text : 'ITS_NO',
		hidden : true,
	},{
		xtype : 'gridcolumn',
		dataIndex : 'M_BP_CD',
		style : 'text-align: center; font-weight: bold;',
		text : '매입처',
		width : 100,
		align : 'center',
		filter: { 
    		type : 'list',
        },
	},{
		xtype : 'gridcolumn',
		dataIndex : 'M_BP_NM',
		style : 'text-align: center; font-weight: bold;',
		text : '매입처명',
		width : 200,
		filter: { 
    		type : 'list',
        },
	},{
		xtype : 'datecolumn',
		dataIndex : 'MVMT_DT',
		style : 'text-align: center; font-weight: bold;',
		text : '입고일',
		align : 'center',
		format : 'Y-m-d',
		width : 100
	},{
		xtype : 'gridcolumn',
		dataIndex : 'S_BP_CD',
		style : 'text-align: center; font-weight: bold;',
		text : '출고처',
		width : 100,
		align : 'center',
		filter: { 
    		type : 'list',
        },
	},{
		xtype : 'gridcolumn',
		dataIndex : 'S_BP_NM',
		style : 'text-align: center; font-weight: bold;',
		text : '출고처명',
		width : 200,
		filter: { 
    		type : 'list',
        },
	},{
		xtype : 'gridcolumn',
		dataIndex : 'ITEM_CD',
		style : 'text-align: center; font-weight: bold;',
		text : '품목코드',
		width : 120,
	},{
		xtype : 'gridcolumn',
		dataIndex : 'ITEM_NM',
		style : 'text-align: center; font-weight: bold;',
		text : '품목명',
		width : 200,
	},{
		xtype : 'gridcolumn',
		dataIndex : 'BL_DOC_NO',
		style : 'text-align: center; font-weight: bold;',
		text : 'B/L번호',
		width : 150,
	},{
		xtype : 'gridcolumn',
		dataIndex : 'DN_NO',
		style : 'text-align: center; font-weight: bold;',
		text : '출고번호',
		width : 150,
	},{
		xtype : 'numbercolumn',
		dataIndex : 'DN_SEQ',
		style : 'text-align: center; font-weight: bold;',
		align : 'end',
		text : '출고순번',
		width : 100,
		format : '0,000',
	},{
		xtype : 'datecolumn',
		dataIndex : 'DN_DT',
		style : 'text-align: center; font-weight: bold;',
		text : '출고일',
		align : 'center',
		format : 'Y-m-d',
		width : 100
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'SALE_TYPE',
		style : 'text-align: center; font-weight: bold; color: #3367d6;',
		text : '출고유형',
		align : 'center',
		width : 120,
		filter: { 
    		type : 'list',
        },
        renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
            if(Ext.data.StoreManager.lookup('storeSC02').findRecord('DTL_CD',value) !==null)
            {
                return Ext.data.StoreManager.lookup('storeSC02').findRecord('DTL_CD',value).get('DTL_NM');
            }
            return value;
        },
        editor: {
    		xtype: 'combobox',
    		displayField: 'DTL_NM',
    		autoLoadOnValue: true,
    		valueField: 'DTL_CD',
    		editable: false,
    		store: Ext.create('Ext.data.Store',{
    			autoLoad: true,
    			storeId: 'storeSC02',
    			proxy: {
    		           type: 'ajax',
    		           extraParams: {
    		            	V_MAST_CD: 'SC02',
    		            	V_GRID: 'Y'
    		           },	
    		           api: {
    		               read: '/HSPF01/common/sql/Combobox.jsp'
    		           },
    		           reader: {
    		               type: 'json',
    		               rootProperty: 'resultList'
    		           }
    		       }
    		}),
    		listConfig: {
                itemTpl: [
                    '<div>{DTL_NM}</div>'
                ]
            },
    	}
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'VAT_TYPE',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		text : '부가세유형',
		align : 'center',
		width : 130,
		renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
            if(Ext.data.StoreManager.lookup('storeVAT').findRecord('DTL_CD',value) !==null)
            {
                return Ext.data.StoreManager.lookup('storeVAT').findRecord('DTL_CD',value).get('DTL_NM');
            }
            return value;
        },
        editor: {
    		xtype: 'combobox',
    		displayField: 'DTL_NM',
    		autoLoadOnValue: true,
    		valueField: 'DTL_CD',
    		editable: false,
    		store: Ext.create('Ext.data.Store',{
    			autoLoad: true,
    			storeId: 'storeVAT',
    			proxy: {
    		           type: 'ajax',
    		           extraParams: {
    		            	V_MAST_CD: 'VAT_RATE',
    		            	V_GRID: 'Y'
    		           },	
    		           api: {
    		               read: '/HSPF01/common/sql/Combobox.jsp'
    		           },
    		           reader: {
    		               type: 'json',
    		               rootProperty: 'resultList'
    		           }
    		       }
    		}),
    		listConfig: {
                itemTpl: [
                    '<div>{DTL_NM}</div>'
                ]
            },
    	}
	}, {
		xtype : 'numbercolumn',
		dataIndex : 'DN_QTY',
		style : 'text-align: center; font-weight: bold;',
		align : 'end',
		text : '출고수량',
		width : 120,
		format : '0,000.00',
		summaryType : 'sum',
		summaryRenderer : function(value, summaryData, dataIndex) {
			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
		},
		exportStyle: {
			 format : 'Qty',
			 alignment: {
				 horizontal: 'Right'
			 },
		},
	}, {
		xtype : 'numbercolumn',
		dataIndex : 'IV_PRC',
		style : 'text-align: center; font-weight: bold;',
		align : 'end',
		text : '매입단가',
		width : 120,
		format : '0,000.00000',
		exportRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
            return Ext.util.Format.number(value, '0,000.00000');
        },
        exportStyle: {
			 format : 'Price',
			 alignment: {
				 horizontal: 'Right'
			 },
		},
	}, {
		xtype : 'numbercolumn',
		dataIndex : 'DN_PRC',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		align : 'end',
		text : '출고단가',
		width : 120,
		format : '0,000.00000',
		editor : {
			xtype : 'numberfield',
			format : '0,000.00000',
			decimalPrecision : 5,
			align : 'right'
		},
		exportRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
            return Ext.util.Format.number(value, '0,000.00000');
        },
        exportStyle: {
			 format : 'Price',
			 alignment: {
				 horizontal: 'Right'
			 },
		},
	}, {
		xtype : 'numbercolumn',
		dataIndex : 'DN_AMT',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		align : 'end',
		text : '출고금액',
		width : 120,
		format : '0,000',
		editor : {
			xtype : 'numberfield',
			format : '0,000',
			align : 'right'
		},
		summaryType : 'sum',
		summaryRenderer : function(value, summaryData, dataIndex) {
			return "<font color='green'>" + Ext.util.Format.number(value, '0,000') + "<font>";
		},
		exportStyle: {
			 format : 'Number',
			 alignment: {
				 horizontal: 'Right'
			 },
		},
	}, {
		xtype : 'numbercolumn',
		dataIndex : 'VAT_AMT',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		align : 'end',
		text : '부가세금액',
		width : 120,
		format : '0,000',
		editor : {
			xtype : 'numberfield',
			format : '0,000',
			align : 'right'
		},
		summaryType : 'sum',
		summaryRenderer : function(value, summaryData, dataIndex) {
			return "<font color='green'>" + Ext.util.Format.number(value, '0,000') + "<font>";
		},
		exportStyle: {
			 format : 'Number',
			 alignment: {
				 horizontal: 'Right'
			 },
		},
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'BILL_YN',
		style : 'text-align: center; font-weight: bold;',
		text : '매출유무',
		align : 'center',
		width : 100,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'REMARK',
		style : 'text-align: center; font-weight: bold;',
		text : '비고',
		width : 200,
	}, ],
	selModel : {
		selType : 'checkboxmodel',
		listeners : {}
	},
	features : [ {
		ftype: 'summary',
        dock: 'bottom'
	} ],
	plugins : [ {
		ptype : 'gridexporter'
	}, {
		ptype : 'cellediting',
		clicksToEdit : 1,
		listeners :{
			afteredit : function(e) {
				var rec = e.context.record;
				var field = e.context.field;
				var val = e.context.value;
				
				if (field == 'DN_PRC') {
					if(val === 0){
						
					} else if(val != null){
						rec.set('DN_AMT', Math.round(rec.get('DN_QTY') * val).toFixed(4));
					}
				} else if (field == 'DN_AMT') {

				}
				
				if(field == 'SALE_TYPE' && val == 'LSO'){
					rec.set('VAT_TYPE', 'C');
				}
				
				if(!!rec.get('VAT_TYPE')){
					var storeVAT = Ext.getStore('storeVAT');
            		var match = storeVAT.findBy(function(record,id) {
            	        if(record.get('DTL_CD') == rec.get('VAT_TYPE')) {
            	            return true;
            	        }
            	    });
            		
            		var vatRecord = storeVAT.getData().getAt(match);
            		var VAT_RATE = vatRecord.get('VAT_RATE');
            		var DN_AMT = rec.get('DN_AMT');
        			var VAT_AMT = 0;
        			
        			if(DN_AMT > 0 && VAT_RATE > 0){
        				VAT_AMT = Math.floor(DN_AMT * VAT_RATE / 100); 
        			}
        			rec.set('VAT_AMT', VAT_AMT);
				}
				
			},
			beforeedit: function (e, editor) {
				var rec = editor.record.data;
				var field = editor.field;

				if(rec.BILL_YN == 'Y'){
			    	return false;
				}
		    	
		        return true;
		    },
		}
	}, {
        ptype: 'clipboard',
    }, {
		ptype: 'gridfilters' 
    }, ],
    listeners:
    {
    	cellkeydown: function(cell, td, cellIndex, record, tr, rowIndex, e, eOpts ) {
            if (e.ctrlKey && e.getKey() == e.V){
            	var task = new Ext.util.DelayedTask(function(){
            		var myGridController = S_DN_LOC_TOT_HSPF.app.getController("MyGridController");
            		myGridController.syncItem();
            	});

            	task.delay(1000);
            }
        }
    }

});