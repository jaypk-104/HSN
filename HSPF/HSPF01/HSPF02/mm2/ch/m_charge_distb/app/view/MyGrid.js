/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_CHARGE_DISTB.view.MyGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.myGrid',

    requires: [
        'M_CHARGE_DISTB.view.MyGridViewModel',
        'Ext.view.Table',
        'Ext.grid.column.RowNumberer',
        'Ext.grid.column.Number',
        'Ext.form.field.Number',
        'Ext.grid.column.Date',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.CellEditing',
        'Ext.grid.plugin.Clipboard',
    ],

    config: {
        tbar: [
            {
                id: 'gridAddBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf055@FontAwesome',
                iconCls: 'grid-add-btn'
            },
            {
                id: 'gridDelBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf056@FontAwesome',
                iconCls: 'grid-del-btn'
            },
            {
                id: 'distrBtn',
                text: '',
                margin: '0 3 0 0',
	           	style: 'background-color: white; border: 0.5px solid #3367d6;',
	           	cls: 'blue-btn',
	           	text: '경비배부',
	           	disabled: true
            },
            {
            	xtype: 'textfield',
            	id: 'V_APPROV_NM',
            	width: 500
            },
            {
                xtype: 'container',
                flex: 1
            },
            {
            	xtype: 'textfield',
            	id: 'V_MAST_CHARGE_NO',
            	hidden: true
            },
            {
            	xtype: 'textfield',
            	id: 'V_TEMP_GL_NO',
            	width: 160,
            	text: '전표번호',
            	emptyText: '전표번호 하단그리드확인',
            	editable: false,
//            	hidden: true
            },
            {
          	   xtype: 'button',
          	   id: 'tempGlCfmBtn',
          	   margin: '0 3 0 0',
          	   text: 'ERP전표생성',
          	   style: 'background-color: white; border: 0.5px solid #3367d6;',
          	   cls: 'blue-btn',
          	   listeners: {
          		   mouseover: function(button, e, eOpts) {
          		        var theTip = Ext.create('Ext.tip.ToolTip', {
          		            html: 'ERP 결의전표 생성',
          		            target: 'tempGlCfmBtn',
          		            showDelay: 0,
          		            mouseOffset:[5,5],
          		            trackMouse: true,
          		            shadow: false
          		        });
          		    }
          	   },
          	   disabled: true
             },
             {
          	   xtype: 'button',
          	   id: 'tempGlCancelBtn',
          	   margin: '0 3 0 0',
          	   text: 'ERP전표취소',
          	   style: 'background-color: white; border: 0.5px solid #3367d6;',
          	   cls: 'blue-btn',
          	   listeners: {
          		   mouseover: function(button, e, eOpts) {
          		        var theTip = Ext.create('Ext.tip.ToolTip', {
          		            html: 'ERP 결의전표 삭제',
          		            target: 'tempGlCancelBtn',
          		            showDelay: 0,
          		            mouseOffset:[5,5],
          		            trackMouse: true,
          		            shadow: false
          		        });
          		    }
          	   },
          	   disabled: true
             },
            {
              xtype: 'button',
              glyph: 'xf1c3@FontAwesome',
              id: 'xlsxDown',
              cfg: {
                  type: 'excel07',
                  ext: 'xlsx'
              },
              iconCls: 'grid-excel-btn',
              margin: '0 3 0 0'
    	  }
        ]
    },

    viewModel: {
        type: 'mygrid'
    },
    id: 'myGrid',
    style: 'border: 1px solid #659DDC; padding: 5px;',
    bodyBorder: false,
    header: false,
    store: 'MyStore',
    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            text: 'V_TYPE'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'CHARGE_NO',
            enableTextSelection: true,
            text: '경비관리번호',
            width: 170
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'MAST_CHARGE_NO',
        	enableTextSelection: true,
        	text: 'MAST_CHARGE_NO(h)',
            width: 170,
            hidden: true
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'PR_STEP',
        	enableTextSelection: true,
        	text: 'PR_STEP',
        	hidden: true
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'BAS_NO',
            enableTextSelection: true,
            text: '발생근거번호',
            width: 170
            
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            sortable: true,
            enableTextSelection: true,
            text: 'L/C번호',
            dataIndex: 'LC_DOC_NO',
            width: 170
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'BL_DOC_NO',
            enableTextSelection: true,
            text: 'B/L번호',
            width: 170
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            dataIndex: 'ID_NO',
            enableTextSelection: true,
            text: '통관신고번호',
            width: 170
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
            sortable: true,
            dataIndex: 'CHARGE_CD',
            enableTextSelection: true,
            text: '<span style=\'color:red\'>*</span>경비항목',
            locked: true,
            editor: {
        		xtype: 'combobox',
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
        		editable: false,
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'storec',
        			proxy: {
        		           type: 'ajax',
        		           extraParams: {
    		            	V_MAST_CD: 'MA13',
        		            	V_GRID: 'Y'
        		           },	
        		           api: {
        		               read: '/HSPF01/common/sql/Combobox.jsp'
        		           },
        		           reader: {
        		               type: 'json',
        		               rootProperty: 'resultList'
        		           }
        		       }
        		}),
	        	listConfig: {
                    itemTpl: [
                              '<div>{DTL_NM} ({DTL_CD}) </div>'
                              ],
                      }
        	},
        	renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
//                if(Ext.data.StoreManager.lookup('storec').findRecord('DTL_CD',value) !==null)
//                {
//                    return Ext.data.StoreManager.lookup('storec').findRecord('DTL_CD',value).get('DTL_NM');
//                }
        		
                if(Ext.data.StoreManager.lookup('storec').findExact('DTL_CD', value) >= 0)
                {
                	return Ext.data.StoreManager.lookup('storec').data.items[Ext.data.StoreManager.lookup('storec').findExact('DTL_CD', value)].get('DTL_NM')
                }
                
                return value;
            },
            width: 230
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'CHARGE_NM',
            enableTextSelection: true,
            text: '경비항목',
            hidden: true
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6 ',
            sortable: true,
            dataIndex: 'M_BP_CD',
            enableTextSelection: true,
            width: 120,
            text: '지급처코드',
    		editor : {
    			xtype : 'textfield',
    			allowBlank : false,
//    			editable : false,
    			emptyText: '(Double Click)',
    			listeners : {
    				afterrender : function(c) {
    					c.getEl().on('dblclick', function() {
    						var popup = Ext.create("Popup.view.WinBpPop");
    						popup.show();
    						
    						Ext.getCmp('fieldType').setValue('M_CHARGE_DISTB1');
    						var store = Ext.getStore('WinBpPopStore');
    						store.removeAll();
    					});
    				}
    			}
    		},
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'M_BP_NM',
        	enableTextSelection: true,
        	width: 150,
        	text: '지급처명',
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
            sortable: true,
            dataIndex: 'TAX_BP_CD',
            enableTextSelection: true,
            text: '세금계산서발행처',
            width: 170,
    		editor : {
    			xtype : 'textfield',
    			allowBlank : false,
    			emptyText: '(Double Click)',
    			listeners : {
    				afterrender : function(c) {
    					c.getEl().on('dblclick', function() {
    						var popup = Ext.create("Popup.view.WinBpPop");
    						popup.show();
    						
    						Ext.getCmp('fieldType').setValue('M_CHARGE_DISTB2');
    						var store = Ext.getStore('WinBpPopStore');
    						store.removeAll();
    					});
    				}
    			}
    		},
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'TAX_BP_NM',
            enableTextSelection: true,
            text: '세금계산서발행명',
            width: 170,
        },
        {
            xtype: 'datecolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
            dataIndex: 'CHARGE_DT',
            format: 'Y-m-d',
            text: '<span style=\'color:red\'>*</span>발생일',
            editor: {
                xtype: 'datefield',
                format: 'Y-m-d',
            },
            width: 120
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
            sortable: true,
            dataIndex: 'TAX_BIZ_CD',
            enableTextSelection: true,
            width: 170,
            text: '<span style=\'color:red\'>*</span>세금계산서신고사업장',
            editor: {
        		xtype: 'combobox',
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
        		editable: false,
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'storem',
        			proxy: {
        		           type: 'ajax',
        		           extraParams: {
        		            	V_MAST_CD: 'MA16',
        		            	V_GRID: 'Y'
        		           },	
        		           api: {
        		               read: '/HSPF01/common/sql/Combobox.jsp'
        		           },
        		           reader: {
        		               type: 'json',
        		               rootProperty: 'resultList'
        		           }
        		       }
        		}),
	        	listConfig: {
                    itemTpl: [
                              '<div>{DTL_NM} ({DTL_CD}) </div>'
                              ],
                      }
        	},
        	renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('storem').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('storem').findRecord('DTL_CD',value).get('DTL_NM');
                }
                return value;
            },
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
            sortable: true,
            dataIndex: 'DISTR_TYPE',
            enableTextSelection: true,
            text: '<span style=\'color:red\'>*</span>배부방식',
            editor: {
        		xtype: 'combobox',
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
        		editable: false,
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'stored',
        			proxy: {
        		           type: 'ajax',
        		           extraParams: {
        		            	V_MAST_CD: 'MA14',
        		            	V_GRID: 'Y'
        		           },	
        		           api: {
        		               read: '/HSPF01/common/sql/Combobox.jsp'
        		           },
        		           reader: {
        		               type: 'json',
        		               rootProperty: 'resultList'
        		           }
        		       }
        		}),
	        	listConfig: {
                    itemTpl: [
                              '<div>{DTL_NM} ({DTL_CD}) </div>'
                              ],
                      }
        	},
        	renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('stored').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('stored').findRecord('DTL_CD',value).get('DTL_NM');
                }
                return value;
            },
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
            align: 'end',
            text: '<span style=\'color:red\'>*</span>발생금액',
            format: '0,000',
            dataIndex: 'LOC_AMT',
            width: 110,
            editor: {
            	xtype: 'numberfield',
            	minValue: 0, 
            	format: '0,000'
            },
        	summaryType : 'sum',
        	summaryRenderer : function(value, summaryData, dataIndex) {
        		return "<font color='green'>" + Ext.util.Format.number(value, '0,000') + "<font>";
        	}
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
            align: 'end',
            text: '<span style=\'color:red\'>*</span>공급가액참조액',
            format: '0,000',
            dataIndex: 'VAT_REF_AMT',
            editor: {
            	xtype: 'numberfield',
            	minValue: 0, 
            	format: '0,000'
            },
            width: 110,
        	summaryType : 'sum',
        	summaryRenderer : function(value, summaryData, dataIndex) {
        		return "<font color='green'>" + Ext.util.Format.number(value, '0,000') + "<font>";
        	}
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
            sortable: true,
            dataIndex: 'VAT_TYPE',
            enableTextSelection: true,
            text: '부가세유형',
            width: 180,
            editor: {
        		xtype: 'combobox',
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
//        		editable: false,
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'storev',
        			proxy: {
        		           type: 'ajax',
        		           extraParams: {
        		            	V_MAST_CD: 'BA05',
        		            	V_GRID: 'Y'
        		           },	
        		           api: {
        		               read: '/HSPF01/common/sql/Combobox.jsp'
        		           },
        		           reader: {
        		               type: 'json',
        		               rootProperty: 'resultList'
        		           }
        		       }
        		}),
	        	listConfig: {
                    itemTpl: [
                              '<div>{DTL_NM} ({DTL_CD}) </div>'
                              ],
                      }
        	},
        	renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('storev').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('storev').findRecord('DTL_CD',value).get('DTL_NM');
                }
                return value;
            },
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            align: 'end',
            text: '부가세율',
            format: '0,000',
            dataIndex:'VAT_RATE',
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
            align: 'end',
            text: '부가세금액',
            dataIndex:'VAT_AMT',
            format: '0,000',
            editor: {
            	xtype: 'numberfield',
            	minValue: 0, 
            	format: '0,000'
            },
        	summaryType : 'sum',
        	summaryRenderer : function(value, summaryData, dataIndex) {
        		return "<font color='green'>" + Ext.util.Format.number(value, '0,000') + "<font>";
        	}
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
        	sortable: true,
        	dataIndex: 'VAT_FG',
        	enableTextSelection: true,
        	text: '부가세분류',
        	width: 150,
        	editor: {
        		xtype: 'textfield'
        	}
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
            sortable: true,
            dataIndex: 'PAY_TYPE',
            enableTextSelection: true,
            text: '지급유형',
            width: 200,
            editor: {
        		xtype: 'combobox',
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
//        		editable: false,
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'storep',
        			proxy: {
        		           type: 'ajax',
        		           extraParams: {
        		            	V_MAST_CD: 'MA18',
        		            	V_GRID: 'Y'
        		           },	
        		           api: {
        		               read: '/HSPF01/common/sql/Combobox.jsp'
        		           },
        		           reader: {
        		               type: 'json',
        		               rootProperty: 'resultList'
        		           }
        		       }
        		}),
	        	listConfig: {
                    itemTpl: [
                              '<div>{DTL_NM} ({DTL_CD}) </div>'
                              ],
                      }
        	},
        	renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('storep').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('storep').findRecord('DTL_CD',value).get('DTL_NM');
                }
                return value;
            },
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
            align: 'end',
            text: '지급금액',
            dataIndex: 'PAY_AMT',
            format: '0,000',
            editor: {
            	xtype: 'numberfield',
            	minValue: 0, 
            	format: '0,000'
            },
            width: 110,
        	summaryType : 'sum',
        	summaryRenderer : function(value, summaryData, dataIndex) {
        		return "<font color='green'>" + Ext.util.Format.number(value, '0,000') + "<font>";
        	}
        },
        {
            xtype: 'datecolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
            text: '납기일',
            format: 'Y-m-d',
            dataIndex: 'PAY_DUE_DT',
            editor: {
            	xtype: 'datefield',
            	format: 'Y-m-d'
            },
            width: 120
        },
        {
        	xtype: 'checkcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
            sortable: true,
            dataIndex: 'EXP_ITEM_FLG',
            enableTextSelection: true,
            text: '물대포함'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
            sortable: true,
            dataIndex: 'BANK_CD',
            enableTextSelection: true,
            text: '<span style=\'color:red\'>*</span>출금은행',
            width: 170,
            editor: {
        		xtype: 'combobox',
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
//        		editable: false,
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'store111',
        			proxy: {
        		           type: 'ajax',
        		           extraParams: {
	            				V_MAST_CD: 'BANK',
	            				V_GRID: 'Y'
        					},	
        		           api: {
        		               read: '/HSPF01/common/sql/Combobox.jsp'
        		           },
        		           reader: {
        		               type: 'json',
        		               rootProperty: 'resultList'
        		           }
        		       }
        		}),
	        	listConfig: {
                    itemTpl: [
                              '<div>{DTL_NM} ({DTL_CD}) </div>'
                              ],
                      }
        	
            },
        	renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('store111').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('store111').findRecord('DTL_CD',value).get('DTL_NM');
                }
                return value;
            },
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'BANK_NM',
            enableTextSelection: true,
            text: '출금은행명',
            hidden: true
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
            sortable: true,
            dataIndex: 'BANK_ACCT',
            enableTextSelection: true,
            text: '출금계좌',
            width: 200,
            editor: {
                xtype: 'textfield',
                allowBlank: false,
                emptyText: 'Double Click',
//                editable: false,
            },
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
        	sortable: true,
        	dataIndex: 'TEMP_GL_NO',
        	enableTextSelection: true,
        	text: '전표번호',
        	width: 200,
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
            align: 'end',
            text: '<span style=\'color:red\'>*</span>환율',
            format: '0,000',
            dataIndex:'XCHG_RT',
            editor: {
            	xtype: 'numberfield',
            	minValue: 0, 
            	format: '0,000'
            },
            width: 90
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
            sortable: true,
            dataIndex: 'CUR',
            enableTextSelection: true,
            text: '<span style=\'color:red\'>*</span>통화',
            width: 90,
            editor: {
        		xtype: 'combobox',
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
        		editable: false,
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'store1',
        			proxy: {
        		           type: 'ajax',
        		           extraParams: {
        		            	V_MAST_CD: 'BA04',
        		            	V_GRID: 'Y'
        		           },	
        		           api: {
        		               read: '/HSPF01/common/sql/Combobox.jsp'
        		           },
        		           reader: {
        		               type: 'json',
        		               rootProperty: 'resultList'
        		           }
        		       }
        		}),
        	},
        	renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('store1').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('store1').findRecord('DTL_CD',value).get('DTL_NM');
                }
                return value;
            },
        },
    ],
    selModel: {
        selType: 'checkboxmodel',
        listeners: {
        	select: function(rowmodel, record, index, eOpts) {
    			record.set('V_TYPE', 'V');
            },
            deselect: function(rowmodel, record, index, eOpts) {
    			record.set('V_TYPE', '');
            }
        }
    },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        {
            ptype: 'clipboard'
        },
        {
            ptype: 'cellediting',
            clicksToEdit: 1,
            listeners: {
            	edit: function(editor, context, eOpts) {
            		
            		var LOC_AMT = context.record.get('LOC_AMT'); //발생금액
            		var VAT_REF_AMT = context.record.get('VAT_REF_AMT'); //공급가액참조액
            		var VAT_AMT = context.record.get('VAT_AMT'); 
            		var VAT_RATE = context.record.get('VAT_RATE'); 
            		var VAT_TYPE = context.record.get('VAT_TYPE');
            		var store = Ext.data.StoreManager.lookup('MyStore');
            		
//            		console.log(context.column.dataIndex);
            		
            		//부가세
            		if (context.column.dataIndex == 'VAT_TYPE' && VAT_TYPE == 'A') { //부가세유형 - 일반세금계산서
            			context.record.set('VAT_AMT', LOC_AMT * 0.1);
            			context.record.set('VAT_RATE', 10);
            			context.record.set('PAY_AMT', LOC_AMT + (LOC_AMT * 0.1));
            		}
            		else if (context.column.dataIndex == 'VAT_TYPE' && VAT_TYPE == 'B') { //부가세유형 - 매입세액불공제
            			context.record.set('VAT_AMT', LOC_AMT * 0.1);
            			context.record.set('VAT_RATE', 0);
            			context.record.set('PAY_AMT', LOC_AMT + (LOC_AMT * 0.1));
            		}
            		else if (VAT_TYPE == 'A' && context.column.dataIndex == 'VAT_REF_AMT') {
    					context.record.set('VAT_AMT', VAT_REF_AMT * 0.1);
    					context.record.set('VAT_RATE', 10);
            			context.record.set('PAY_AMT', VAT_REF_AMT + (VAT_REF_AMT * 0.1));
        			}
        			else if (VAT_TYPE == 'A' && context.column.dataIndex == 'LOC_AMT') {
						context.record.set('VAT_AMT', LOC_AMT * 0.1);
						context.record.set('VAT_RATE', 10);
            			context.record.set('PAY_AMT', LOC_AMT + (LOC_AMT * 0.1));
        			}
        			else if (VAT_TYPE == 'B' && context.column.dataIndex == 'VAT_REF_AMT') {
        				context.record.set('VAT_AMT', VAT_REF_AMT * 0.1);
        				context.record.set('VAT_RATE', 0);
            			context.record.set('PAY_AMT', VAT_REF_AMT + (VAT_REF_AMT * 0.1));
        			}
        			else if (VAT_TYPE == 'B' && context.column.dataIndex == 'LOC_AMT') {
        				context.record.set('VAT_AMT', LOC_AMT * 0.1);
        				context.record.set('VAT_RATE', 0);
            			context.record.set('PAY_AMT', LOC_AMT + (LOC_AMT * 0.1));
    				} else {
//    					context.record.set('VAT_AMT', 0); //부가세금액
//    					context.record.set('VAT_RATE', 0); //부가세율
    					if(context.column.dataIndex != 'PAY_AMT') {
    						context.record.set('PAY_AMT', LOC_AMT + VAT_AMT);
    					}
    				}
            		
            			
            		if(context.column.dataIndex == 'M_BP_CD') { //지급처코드 = 세금계산서발행처코드
            			context.record.set('TAX_BP_CD', context.record.get('M_BP_CD')); 
            		}
            		
            		
            		if(context.column.dataIndex == 'CHARGE_DT') { //발생일 = 납기일
            			context.record.set('PAY_DUE_DT', context.record.get('CHARGE_DT')); 
            		}
            		
            		
            		if(context.column.dataIndex == 'PAY_TYPE') { //지급유형
            			if(context.record.get("PAY_TYPE") == 'NO') { //미지급
//            				context.record.set('PAY_AMT', '0'); //지급	금액0 
            				context.record.set('BANK_CD', '');  //은행코드 없음
            				context.record.set('BANK_NM', '');  //은행코드 없음
            				context.record.set('BANK_ACCT', '');  //은행코드 없음
            			}
            		}
            		
            		
            		if (context.column.dataIndex == 'TAX_BIZ_CD') {
            			store.each(function(record, idx) {
            				store.getAt(idx).set('TAX_BIZ_CD', context.record.get('TAX_BIZ_CD'));
            			})
            		}
            		
            		//발생금액 PAY_AMT  VAT_REF_AMT  LOC_AMT 
            		if (context.column.dataIndex == 'LOC_AMT') {
            			context.record.set('VAT_REF_AMT', context.record.get('LOC_AMT')); //공급가액
            		}
            		
            		//출금은행-계좌
            		if (context.column.dataIndex == 'BANK_CD') {
            			//산업은행
            			if(context.record.get('BANK_CD') == '02') {
            				context.record.set('BANK_ACCT', '022-3900-4698-783');
            			//국민은행
             			} else if(context.record.get('BANK_CD') == '19') {
             				context.record.set('BANK_ACCT', '954637-01-009974'); 
         				//부산은행
             			} else if(context.record.get('BANK_CD') == '32') {
             				context.record.set('BANK_ACCT', '168-01-000130-9'); 
         				//농협
             			} else if(context.record.get('BANK_CD') == '10') {
             				context.record.set('BANK_ACCT', '317-0000-2230-41'); 
             			//SC은행
             			} else if(context.record.get('BANK_CD') == '23') {
             				context.record.set('BANK_ACCT', '549-20-010424'); 
         				//경남은행
             			} else if(context.record.get('BANK_CD') == '39') {
             				context.record.set('BANK_ACCT', '588-07-0017311'); 
             			} else {
             				context.record.set('BANK_ACCT', ''); 
             			}
            		}
            	}
            	}
        }
    ],
	features : [ {
		ftype: 'summary',
        dock: 'bottom'
	} ],
	viewConfig : {
		enableTextSelection : true,
	},

});