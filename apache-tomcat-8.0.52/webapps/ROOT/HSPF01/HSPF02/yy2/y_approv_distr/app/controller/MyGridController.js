/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Y_APPROV_DISTR.controller.MyGridController', {
    extend: 'Ext.app.Controller',
	stores : [ 'MyStore', 'MyStore3'],
	control : {
		"#gridAddBtn" : {
			click : 'gridAddBtnClick'
		},
		'#gridDelBtn' : {
			click : 'gridDelBtnClick'
		},
		"#gridSaveBtn" : { // 
			click : 'gridSaveBtnClick'
		},
		"#gridSaveBtn4" : { // 
			click : 'gridSaveBtn4Click'
		},
		"#gridCopyBtn" : { // 
			click : 'gridCopyBtnClick'
		},
		"#calcBtn" : { // 
			click : 'calcBtnClick'
		},
		"#myGrid" : {
			cellclick: 'myGridCellClick'
		},
		"#xlsxDown1" : { // 
			click : 'xlsxDownClick'
		},
	},
	
	xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('myGrid');
    	grid.saveDocumentAs({
            type: 'xlsx',
            title: '품의등록', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
		});
},
	gridAddBtnClick: function() {
		var msg = '';
		var flag = 'T';

		if (Ext.getCmp('V_APPROV_MGM_NO').getValue() == '' || Ext.getCmp('V_APPROV_MGM_NO').getValue() == null) {
			flag = 'F';
			msg = '품의관리번호를 입력하세요.';
		} else {
			flag = 'T';
		}

		if (flag == 'T') {
			var popup = Ext.create("Y_APPROV_DISTR.view.WinAddRow");
			popup.show();
			Ext.getCmp('rowCount').setValue(1);
		} else {
			Ext.Msg.alert('확인', msg);
		}
	},
	
	gridDelBtnClick: function() {
		var store = this.getMyStoreStore();
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		
		Ext.MessageBox.confirm('확인', '삭제하시겠습니까?', function(btn) {
			if(btn == 'yes') {
				for(var i=0; i<gridRecord.length; i++) {
					if(gridRecord[i].data['V_TYPE'] == 'V' && gridRecord[i].phantom == true) {
						store.remove(gridRecord[i]);
						flag = 'F';
					} else if(gridRecord[i].data['V_TYPE'] == 'V' && gridRecord[i].phantom == false) {
						gridRecord[i].set('V_TYPE', 'D');
						flag = 'T';
					}
				}
				
				store.sync({
					params : {
						V_TAB_TYPE: 'T1',
						V_TYPE : 'SYNC',
						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
						V_APPROV_MGM_NO: Ext.getCmp('V_APPROV_MGM_NO').getValue(),
					},
					callback : function(records, operation, success) {
						var res = records.operations[0]._response.responseText;
						
						if(res.match('Exception')) {
							Ext.Msg.alert('확인', res);
						} else {
							if(flag == 'T') {
								store.reload();
							}
						}
					}, 
					success: function() {
					}
				});
			
			}
		});
		
	},
	
	gridSaveBtnClick: function() {
		var store = this.getMyStoreStore(); 
		var flag = '';
		var msg = '';
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		
		var strCont = new Array();
		var numberCont = 0;
		
			store.each(function(record, idx) {
				if(record.phantom == true) {
					record.set('V_TYPE', 'I');
				} else if (record.phantom == false) {
					record.set('V_TYPE', 'U');
				}
				
				if(record.get('CONT_QTY') == null || record.get('CONT_QTY') == undefined) {
					record.set('CONT_QTY', '');
				}
				
				if(record.get('BRAND') == null || record.get('BRAND') == '') {
					flag = 'F';
					msg = '브랜드를 입력하세요.'; 
					return false;
				} else if( Ext.getCmp('V_IV_TYPE').getValue() != 'L' && (((record.get('CONT_REMARK') == '') || (record.get('CONT_REMARK') == undefined)) && (record.get('CONT_QTY') == ''))) {
					flag = 'F';
					msg = '컨테이너 분류와 수량 중 한 가지를 필수 입력하세요.' + '(' + (idx+1) + ')';
					return false;
				} else if( Ext.getCmp('V_IV_TYPE').getValue() != 'L' && record.get('CONT_REMARK') != '') {
					
					if(record.get('CONT_QTY') != '') {
						flag = 'F';
						msg = '컨테이너 분류와 수량 중 한 가지만 입력하세요.' + '(' + (idx+1) + ')';
						return false;
					} else {
						flag = 'T';
						strCont.push(record.get('CONT_REMARK'));
					}
				} else if (record.get('PO_QTY') == 0) {
					flag = 'F';
					msg = '발주수량을 확인하세요.'; 
					return false;
				} else if (record.get('PO_AMT') == 0) {
					flag = 'F';
					msg = '발주금액을 확인하세요.'; 
					return false;
				} else {
					flag = 'T';
					numberCont += Number(record.get('CONT_QTY'));
				}
			});
			
			if( Ext.getCmp('V_IV_TYPE').getValue() != 'L' ) {
				//String 컨테이너 수량 계산
				var uniq = strCont.reduce(function(a,b){
					if (a.indexOf(b) < 0 ) a.push(b);
					return a;
				  },[]);
			}

			if( Ext.getCmp('V_IV_TYPE').getValue() != 'L' && ((uniq.length + numberCont) != Ext.getCmp('V_CONT_QTY').getValue())) {
				Ext.Msg.alert('확인', '상단의 컨테이너 수량('+Ext.getCmp('V_CONT_QTY').getValue()+')과 하단 컨테이너 구성수량('+(uniq.length + numberCont)+')이 일치하지 않습니다.');
			} else {
				if(flag == 'T') {
					store.sync({
						params : {
							V_TAB_TYPE: 'T1',
							V_TYPE : 'SYNC',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_APPROV_MGM_NO: Ext.getCmp('V_APPROV_MGM_NO').getValue(),
						},
						callback : function(records, operation, success) {
							var res = records.operations[0]._response.responseText;
							
							if(res.match('Exception')) {
								Ext.Msg.alert('확인', res);
							} else {
								Y_APPROV_DISTR.app.getController("TbButtonController").selBtnClick();
							}
						}, 
						success: function() {
						}
					});
				} else {
					Ext.Msg.alert('확인', msg);
				}
			}
	},
	gridSaveBtn4Click: function() {
		var store = this.getMyStore3Store(); 
		var flag = '';
		var msg = '';
		var gridRecord = Ext.getCmp('myGrid4').getSelectionModel().getSelection();
		
//		store.each(function(record, idx) {
//			
//		});
//		
		store.sync({
			params : {
				V_TYPE : 'SYNC',
				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				V_APPROV_MGM_NO: Ext.getCmp('V_APPROV_MGM_NO').getValue(),
			},
			callback : function(records, operation, success) {
				var res = records.operations[0]._response.responseText;
				
				if(res.match('Exception')) {
					Ext.Msg.alert('확인', res);
				} else {
					Y_APPROV_DISTR.app.getController("TbButtonController").selBtnClick();
				}
			}, 
			success: function() {
			}
		});
	},
	
	gridCopyBtnClick: function() {
		var store = this.getMyStoreStore(); 
		var flag = '';
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		
		
		for(var i=0; i < gridRecord.length; i++) {
			if(i > 0) {
				gridRecord[i].set('M_BP_CD', gridRecord[0].get('M_BP_CD'));
				gridRecord[i].set('M_BP_NM', gridRecord[0].get('M_BP_NM'));
				gridRecord[i].set('BF_TYPE', gridRecord[0].get('BF_TYPE'));
				gridRecord[i].set('ST_TYPE', gridRecord[0].get('ST_TYPE'));
				gridRecord[i].set('ST_TYPE_NM', gridRecord[0].get('ST_TYPE_NM'));
				gridRecord[i].set('ORIGIN', gridRecord[0].get('ORIGIN'));
				gridRecord[i].set('ORIGIN_NM', gridRecord[0].get('ORIGIN_NM'));
				gridRecord[i].set('GRADE', gridRecord[0].get('GRADE'));
				gridRecord[i].set('GRADE_NM', gridRecord[0].get('GRADE_NM'));
				gridRecord[i].set('LG_TYPE', gridRecord[0].get('LG_TYPE'));
				gridRecord[i].set('LG_NM', gridRecord[0].get('LG_NM'));
				gridRecord[i].set('SM_TYPE', gridRecord[0].get('SM_TYPE'));
				gridRecord[i].set('SM_NM', gridRecord[0].get('SM_NM'));
				gridRecord[i].set('CUR', gridRecord[0].get('CUR'));
				//추가
				gridRecord[i].set('BRAND', gridRecord[0].get('BRAND'));
				gridRecord[i].set('LC_RT', gridRecord[0].get('LC_RT'));
				gridRecord[i].set('REC_RT', gridRecord[0].get('REC_RT'));
				gridRecord[i].set('USANCE_RT', gridRecord[0].get('USANCE_RT'));
				gridRecord[i].set('PAY_METH', gridRecord[0].get('PAY_METH'));
			}
			
		}
	},
	
	myGridCellClick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
		
		
	},
	
	calcBtnClick: function() {
		
		Ext.Msg.confirm('확인', '계산하시겠습니까?', function(btn) {
			if (btn == 'yes') {
				Ext.Ajax.request({
					url: 'sql/Y_APPROV_DISTR4.jsp',
					method: 'post',
					params: {
						V_TYPE: 'I',
		    			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
						V_APPROV_MGM_NO: Ext.getCmp('V_APPROV_MGM_NO').getValue(),
						V_APPROV_DT4: Ext.getCmp('V_APPROV_DT4').getValue(),
					},
					success: function(response) {
						var tbController = Y_APPROV_DISTR.app.getController("TbButtonController");
			    		tbController.selBtnClick();
					}
				});
			}
		})
	}

});
