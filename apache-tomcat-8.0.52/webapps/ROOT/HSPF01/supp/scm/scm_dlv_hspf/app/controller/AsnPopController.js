/*
 * File: app/controller/MyGridController2.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SCM_DLVY_HSPF.controller.AsnPopController', {
    extend: 'Ext.app.Controller',

    stores: [
        'MyStore', 'MyStore1', 'MyStore2', 'MyStore3'
    ],

    control: {
        "#creBcdBtn": { /*바코드생성*/
            click: 'creBcdBtnClick'
        },
        "#pubBcdBtn": { /*바코드출력*/
        	click: 'pubBcdBtnClick'
        },
        "#pubBcd4Btn": { /*4장출력*/
        	click: 'pubBcd4BtnClick'
        },
        "#cfmBcdBtn": { /*바코드확정*/
        	click: 'cfmBcdBtnClick'
        },
        "#canBacdBtn": { /*바코드확정취소요청*/
        	click: 'canBacdBtnClick'
        },
        "#canBacdBtn2": { /*바코드확정취소요청*/
        	click: 'canBacdBtn2Click'
        },
        "#lotSaveBtn": { /*로트저장*/
        	click: 'lotSaveBtnClick'
        },
        "#delAsnBtn": { /*ASN삭제*/
        	click: 'delAsnBtnClick'
        },
        "#stsPrtBtn": { /*거래명세서*/
        	click: 'stsPrtBtnClick'
        },
        "#xlsxDown3": { /*엑셀다운*/
            click: 'xlsxDownClick'
        },
        "#fileAddBtn" : { /*파일첨부*/
        	click : 'fileAddBtnClick'
        },
        "#fileDelBtn" : { /*파일삭제*/
        	click : 'fileDelBtnClick'
        },
		"#myGrid2" : { /*하단바코드색상변경*/
			cellclick : 'myGrid2CellClick'
		},
		'#fileGrid' : { /*파일다운더블클릭*/
			celldblclick : 'fileGridDblClick',
		},
		'#chk' : { /*로트정보일괄등록*/
    		change: 'chkChange',
    		click: 'chkClick'
		},
		'#LOT_CHECK' : { /*로트정보일괄등록(일부)*/
			checkchange: 'lotChkChange'
		},
		'#refreshBtn' : { /*그리드새로고침*/
			click: 'refreshBtnClick'
		},
		'#gridAddBtn_W' : {
			click: 'gridAddBtn_W_Click'
		},
		'#gridDelBtn_W' : {
			click: 'gridDelBtn_W_Click'
		},
		'#bacdSaveBtn' : {
			click: 'bacdSaveBtnClick'
		},
		'#divBacdBtn2' : {
			click: 'divBacdBtn2Click'
		},
		'#grdnBtn' : {
			click: 'grdnBtnClick'
		},
		'#ww_btn' : {
			click: 'ww_btnClick'
		},
		'#fileRegRequestBtn' : {
			click: 'fileRegRequestBtnClick'
		}
    },
    
    /* 납기현황등록 팝업 */
	/* MyStore : [ SCM_DLVY_HSPF_H ] */
	/* MyStore1 : [ SCM_DLVY_HSPF_H ] */
    /* MyStore2 : [ SCM_DLVY_HSPF_D ] */
    /* MyStore3 : [ SCM_DLVY_HSPF_D ] */
    
    /* [바코드생성] 버튼 */
    creBcdBtnClick: function() {
    	var store2 = this.getMyStore2Store();
    	var store3 = this.getMyStore3Store();
    	var flag = '';
    	var msg = '';
    	
    	//바코드 대기에서 생성가능
    	store2.each(function(record,idx){
    		if(record.get('ASN_STS') == 'A') {
    			flag = 'T';
    		} else {
    			flag = 'F';
    		}
    	});
    	
    	if(flag == 'T') {
	    	Ext.Ajax.request({
	    		url: 'sql/SCM_DLVY_HSPF_D.jsp',
	    		method: 'post',
	    		params: {
	    			V_TYPE: 'CB',
					V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
					V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
					V_ASN_NO: Ext.getCmp('W_ASN_NO').getValue(),
					V_PO_NO: Ext.getCmp('W_PO_NO').getValue(),
					V_PO_SEQ: Ext.getCmp('W_PO_SEQ').getValue(),
	    		},
	    		callback : function(records,operations,success){
	    			
	    	    },
	    	    success : function(response) {
	    	    	store2.reload();
	    			store3.reload();
	    	    },
	    		scope: this
	    	});
    	} else {
    		Ext.Msg.alert('확인', '바코드대기 상태에서 생성가능합니다.');
    	}
    },
    
    /* [바코드분할] */
    divBacdBtn2Click: function(button, e, eOpts) {
	    
        var store3 = this.getMyStore3Store();
        var flag = '';
        store3.each(function(record,idx){
        	
    		if(record.get('DN_QTY') <= 0 && record.get('GR_QTY') <= 0) {
				flag = 'T';
			} else {
				flag = 'F';
				msg = '출고 또는 입고 수량이 존재합니다. 분할할 수 없습니다.';
				return false;
			}
    	});
        
        if(flag == 'T') {
        	var popup = Ext.create("SCM_DLVY_HSPF.view.WinAddRow");
            popup.show();
        } else {
        	Ext.Msg.alert('확인', msg);
        }
    },
    
    /* [바코드발행] */
    pubBcdBtnClick: function() {
    	var store2 = this.getMyStore2Store();
    	var store3 = this.getMyStore3Store();
    	var flag = '';
    	var msg = '';
    	var ASN_NO = Ext.getCmp('W_ASN_NO').getValue();
    	
    	//바코드 생성 && 확정 상태에서 발행가능
    	store2.each(function(record,idx){
			if(record.get('CFM_YN') == 'Y') {
				flag = 'T';
			} else {
				flag = 'F';
				msg = '바코드확정 시 발행가능합니다.';
				return false;
			}
    	});
    	
//    	if(parent.Ext.getCmp('GBP_CD').getValue()=='00000') {
//    		flag = 'T';
//    	}
    	
    	if(flag == 'T') {
    		Ext.Ajax.request({
    			url: 'sql/SCM_DLVY_HSPF_D.jsp',
    			method: 'post',
    			params: {
    				V_TYPE: 'MP',
    				V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    				V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    				V_ASN_NO: Ext.getCmp('W_ASN_NO').getValue(),
    				V_PO_NO: Ext.getCmp('W_PO_NO').getValue(),
    				V_PO_SEQ: Ext.getCmp('W_PO_SEQ').getValue(),
    			},
    			callback : function(records,operations,success){
    				store2.reload();
    				store3.reload();
    				var myWin=new Ext.Window(
						{
							title : '바코드발행',
							html : '<iframe name="xxx" border =0 src="http://123.142.124.170:8080/aireport/TOT_HSPF/HSPF_BAR_CODE.jsp?V_ASN_NO='+ASN_NO+'" width="100%" height="100%"></iframe>',
							width :1000,
							height:768,
							modal: true
						});
    				myWin.show();
    				myWin.setSize(Ext.getBody().getViewSize());
					myWin.setPagePosition(0, 0);
    				
    			},
    			success : function(response) {},
    			scope: this
    		});
    	} else {
    		Ext.Msg.alert('확인', msg);
    	}
    	
    
    },
    
    /* [바코드4장] 버튼 */
    pubBcd4BtnClick: function() {
    	var store2 = this.getMyStore2Store();
    	var store3 = this.getMyStore3Store();
    	var flag = '';
    	var msg = '';
    	var ASN_NO = Ext.getCmp('W_ASN_NO').getValue();
    	

    	//바코드 생성 && 확정 상태에서 발행가능
    	store2.each(function(record,idx){
			if(record.get('CFM_YN') == 'Y') {
				flag = 'T';
			} else {
				flag = 'F';
				msg = '바코드확정 시 발행가능합니다.';
				return false;
			}
    	});
    	
    	if(parent.Ext.getCmp('GBP_CD').getValue()=='00000') {
    		flag = 'T';
    	}
    	
    	if(flag == 'T') {
    		Ext.Ajax.request({
    			url: 'sql/SCM_DLVY_HSPF_D.jsp',
    			method: 'post',
    			params: {
    				V_TYPE: 'MP',
    				V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    				V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    				V_ASN_NO: Ext.getCmp('W_ASN_NO').getValue(),
    				V_PO_NO: Ext.getCmp('W_PO_NO').getValue(),
    				V_PO_SEQ: Ext.getCmp('W_PO_SEQ').getValue(),
    			},
    			callback : function(records,operations,success){
    				store2.reload();
    				store3.reload();
    				var myWin=new Ext.Window(
    						{
    							title : '바코드발행(4장)',
    							html : '<iframe name="xxx" border =0 src="http://123.142.124.170:8080/aireport/TOT_HSPF/HSPF_BAR_CODEX4.jsp?V_ASN_NO='+ASN_NO+'" width="100%" height="100%"></iframe>',
    							width :1000,
    							height:768,
    							modal: true
    						});
    				myWin.show();
    				myWin.setSize(Ext.getBody().getViewSize());
					myWin.setPagePosition(0, 0);
    				
    			},
    			success : function(response) {},
    			scope: this
    		});
    	} else {
    		Ext.Msg.alert('확인', msg);
    	}
    },
    
    /* [바코드확정] */
    cfmBcdBtnClick: function() {
    	var store2 = this.getMyStore2Store();
    	var store3 = this.getMyStore3Store();
    	var flag1 = '';
    	var flag2 = '';
    	var msg = '';
    	
    	//바코드 생성상태 에서 확정가능
    	store2.each(function(record,idx){
    		if(record.get('ASN_STS') == 'B' || (record.get('ASN_STS') == 'C')) {
    			if(record.get('CFM_YN') == 'N') {
    				flag1 = 'T';
    			} else {
    				flag1 = 'F';
    				msg = '이미 확정된 바코드입니다.';
					return false;
    			}
    		} else {
    			flag1 = 'F';
    			msg = '바코드생성 상태에서 확정가능합니다.';
    			return false;
    		}
    	});
    	
    	//로트번호 필수입력확인
    	store3.each(function(record,idx){
    		if(record.get('LOT_NO')==null || record.get('MAKE_DT')==null || record.get('VALID_DT')==null ||
    				record.get('LOT_NO')=='' || record.get('MAKE_DT')=='' || record.get('VALID_DT')=='' ||
    				Ext.String.trim(record.get('LOT_NO')).length == 0 || Ext.String.trim(record.get('MAKE_DT')).length == 0 || Ext.String.trim(record.get('VALID_DT')).length == 0 
    		) {
    			flag2 = 'F';
    			msg = '로트정보를 입력하세요.';
    			return false;
    		} else {
    			flag2 = 'T'
    		}
    	});
    	
    	if(flag1 == 'T' && flag2 == 'T') {
    		Ext.Msg.confirm('확인', '확정하시겠습니까? 확정 후 취소가 불가합니다.<br>확정취소가 필요한 경우 관리자에게 \'바코드확정취소요청\' 하세요.', function(btn) {
    			if(btn == 'yes') {
    				Ext.Ajax.request({
    	    			url: 'sql/SCM_DLVY_HSPF_D.jsp',
    	    			method: 'post',
    	    			params: {
    	    				V_TYPE: 'BC',
    	    				V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    	    				V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    	    				V_ASN_NO: Ext.getCmp('W_ASN_NO').getValue(),
    	    				V_PO_NO: Ext.getCmp('W_PO_NO').getValue(),
    	    				V_PO_SEQ: Ext.getCmp('W_PO_SEQ').getValue(),
    	    			},
    	    			callback : function(records,operations,success){
    	    				store2.reload();
    	    				store3.reload();
    	    			},
    	    			success : function(response) {
    	    				if(response.responseText == 'F') {
    	    					Ext.Msg.alert('확정불가', '유효하지 않은 로트정보가 존재합니다.<br> 동일한 로트번호에 대한 제조일과 유효일이 각각 일치해야합니다.')
    	    				}
    	    			},
    	    			scope: this
    	    		});
    			}
    		});
    	} else {
    		Ext.Msg.alert('확인', msg)
    	}
    },
    
    /* [확정취소(사용자)] */
    canBacdBtnClick: function() {
    	var store2 = this.getMyStore2Store();
    	var store3 = this.getMyStore3Store();
    	var flag = '';
    	var msg = '';
    	
    	var myMask = new Ext.LoadMask(Ext.getCmp('asnpop') , {msg:"Please wait..."});
    	
    	store2.each(function(record,idx){
	    	if(record.get('CFM_YN') == 'Y') {
	    		if(record.get('GR_QTY') == 0) {
					flag = 'T';
				} else  {
					flag = 'F';
					msg = '입고수량이 존재합니다. 취소요청 할 수 없습니다.';
					return false;
				}
			} else if(record.get('CFM_YN') == 'N') {
				flag = 'F';
				msg = '미확정 상태입니다.';
				return false;
			}
    	});
    	
    	if(flag == 'T') {
        	myMask.show();
    		//메일보내기.
    		Ext.Ajax.request({
    			url : '/HSPF01/common/MailingService_ASN.jsp',
    			method : 'post',
    			params : {
    				V_TYPE: 'EMAIL_SEND',
    				V_ASN_NO : Ext.getCmp('W_ASN_NO').getValue(),
    				V_PO_NO : Ext.getCmp('W_PO_NO').getValue(),
    				V_PO_SEQ : Ext.getCmp('W_PO_SEQ').getValue(),
    				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
    			},
    			success: function(response) {
    				myMask.hide();
    				Ext.Msg.alert('확인', '관리자에게 확정취소 요청메일을 발송하였습니다.');
    			},
    			scope : this
    		});
    	
    	} else {
    		myMask.hide();
    		Ext.Msg.alert('확인', msg);
    	}
		
    },
    /* [확정취소(관리자)] */
    canBacdBtn2Click: function() {
    	var store2 = this.getMyStore2Store();
    	var store3 = this.getMyStore3Store();
    	var flag = '';
    	var msg = '';
    	
//    	입고수량이 0인경우 수행
    	store2.each(function(record,idx){
	    	if(Number(record.get('GR_QTY')) == 0) {
				flag = 'T';
			} else  {
				flag = 'F';
				msg = '입고수량이 존재합니다. 취소할 수 없습니다.';
				return false;
			}
    	});
    	
//    	flag = 'T';
    	if(flag == 'T') {
    		Ext.Ajax.request({
    			url: 'sql/SCM_DLVY_HSPF_D.jsp',
    			method: 'post',
    			params: {
    				V_TYPE: 'BD',
    				V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    				V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    				V_ASN_NO: Ext.getCmp('W_ASN_NO').getValue(),
    				V_PO_NO: Ext.getCmp('W_PO_NO').getValue(),
    				V_PO_SEQ: Ext.getCmp('W_PO_SEQ').getValue(),
    			},
    			callback : function(records,operations,success){
    				store2.reload();
    				store3.reload();
    			},
    			success : function(response) {},
    			scope: this
    		});
    	} else {
    		Ext.Msg.alert('확인', msg);
    	}
    },
    
    /*[로트저장]*/
    lotSaveBtnClick: function() {
    	var store = this.getMyStoreStore();
    	var store1 = this.getMyStore1Store();
    	var store2 = this.getMyStore2Store();
    	var store3 = this.getMyStore3Store();
    	var flag1 = '';
    	var flag2 = '';
    	var flag_hsnetw = '';
    	var msg1 = '';
    	var msg2 = '';
    	var lot0 = '';
    	
    	var gridRecord3 = Ext.getCmp('myGrid3').getSelectionModel().getSelection();

    	//바코드 확정상태 에서 로트정보변경 불가능
    	store2.each(function(record,idx){
			if(record.get('CFM_YN') == 'N') {
				flag1 = 'T';
			} else {
				flag1 = 'F';
				msg1 = '바코드확정 상태에서는 로트정보변경이 불가합니다.';
				return false;
			}
    	});
    	
    	
    	if(parent.Ext.getCmp('GBP_CD').getValue() == '00000') { //네트웍스이면
    		flag_hsnetw = 'Y';
    	}
    	//혜경씨 요청. 로트번호 입력안하면 출고가 안되어 문제가 생긴다고함. 따라서 위치를 옮김
    	
    	store3.each(function(record,idx){
    		record.set('V_TYPE', 'LOT');
			if(record.get('LOT_NO') == undefined || record.get('LOT_NO') == '' || Ext.String.trim(record.get('LOT_NO')).length == 0) {
				msg2 = '로트번호를 입력하세요.';
				flag2 = 'F';
				flag_hsnetw = 'F'; //혜경씨 요청. 로트번호 입력안하면 출고가 안되어 문제가 생긴다고함.
				return false;
			}
			else if(record.get('MAKE_DT') == undefined  || record.get('MAKE_DT').length == 0) {
				msg2 = '제조일을 입력하세요.';
				flag2 = 'F';
				flag_hsnetw = 'F'; //혜경씨 요청. 로트번호 입력안하면 출고가 안되어 문제가 생긴다고함.
				return false;
			}
			else if(record.get('VALID_DT') == undefined || record.get('VALID_DT').length == 0 ) {
				msg2 = '유효일을 입력하세요.';
				flag2 = 'F';
				flag_hsnetw = 'F'; //혜경씨 요청. 로트번호 입력안하면 출고가 안되어 문제가 생긴다고함.
				return false;
			}
			else if(record.get('LOT_QTY') == undefined || record.get('LOT_QTY') == 0) {
				msg2 = '납품수량을 확인하세요.';
				flag2 = 'F';
				flag_hsnetw = 'F'; //혜경씨 요청. 로트번호 입력안하면 출고가 안되어 문제가 생긴다고함.
				return false;
			} else {
				flag2 = 'T';
			}
    	});
    	
    	
    	
    	
//    	
    	if(flag1 == 'T' && flag2 =='T') { //바코드미확정, 로트정보입력완료
    		store3.sync({
    			params: {
    				V_TYPE: 'LOT',
    				V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    				V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    				V_ASN_NO: Ext.getCmp('W_ASN_NO').getValue(),
    				V_PO_NO: Ext.getCmp('W_PO_NO').getValue(),
    				V_PO_SEQ: Ext.getCmp('W_PO_SEQ').getValue(),
    			},
    			callback: function(records,operations,success){
    				store.reload();
    				store1.reload();
    				store2.reload();
    				store3.reload();
    			}
    		});
    	} else if(flag_hsnetw == 'Y') { //네트웍스관리자
    		
    		
    		
//    		store2.each(function(record,idx){
//    			if(record.get('GR_QTY') == 0) {
//    				flag = 'T';
//    			} else  {
//    				flag = 'F';
//    				msg = '입고된 ASN입니다. 수정할 수 없습니다.';
//    			}
//        	});
    		
//    		if(flag == 'T') {
    			//납품수량 0
        		if(lot0 == 'T') {
        			Ext.MessageBox.confirm('확인', '납품수량이 0인 항목이 있습니다.<br> 바코드정보가 삭제됩니다. 삭제하시겠습니까?', function(btn) {
            			if(btn == 'yes') {
            				store3.sync({
            	    			params: {
            	    				V_TYPE: 'LOT',
            	    				V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
            	    				V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
            	    				V_ASN_NO: Ext.getCmp('W_ASN_NO').getValue(),
            	    				V_PO_NO: Ext.getCmp('W_PO_NO').getValue(),
            	    				V_PO_SEQ: Ext.getCmp('W_PO_SEQ').getValue(),
            	    			},
            	    			callback: function(records,operations,success){
            	    				store.reload();
            	    				store1.reload();
            	    				store2.reload();
            	    				store3.reload();
            	    			}
            	    		});
            			}
        			});
        		} else {
        			store3.sync({
            			params: {
            				V_TYPE: 'LOT',
            				V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
            				V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
            				V_ASN_NO: Ext.getCmp('W_ASN_NO').getValue(),
            				V_PO_NO: Ext.getCmp('W_PO_NO').getValue(),
            				V_PO_SEQ: Ext.getCmp('W_PO_SEQ').getValue(),
            			},
            			callback: function(records,operations,success){
            				store.reload();
            				store1.reload();
            				store2.reload();
            				store3.reload();
            			}
            		});
        		}
//    		} else {
//    			Ext.Msg.alert('확인', msg);
//    		}
    		
    		
    	} else {
    		if(flag1 == 'F' && flag_hsnetw != 'Y') {
    			Ext.Msg.alert('확인', msg1);
    		} else if (flag2 == 'F') {
    			Ext.Msg.alert('확인', msg2);
    		}    		
    	}
    	
    },
    
    /* [ASN삭제] */
    delAsnBtnClick: function() {
    	var store0 = this.getMyStoreStore();
    	var store1 = this.getMyStore1Store();
    	var store2 = this.getMyStore2Store();
    	var flag = '';
    	var msg = '';
    	
    	//미확정 상태에서 삭제가능
    	store2.each(function(record,idx){
    		if(record.get('CFM_YN') == 'N') {
    			flag = 'T';
    		} else {
    			flag = 'F';
    			return false;
    		}
    	});
    	
    	if(flag == 'T') {
    		Ext.MessageBox.confirm('확인', '삭제하시겠습니까?', function(btn) {
    			if(btn == 'yes') {
    				Ext.Ajax.request({
    					url: 'sql/SCM_DLVY_HSPF_D.jsp',
    					method: 'post',
    					params: {
    						V_TYPE: 'MD',
    						V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    						V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    						V_ASN_NO: Ext.getCmp('W_ASN_NO').getValue(),
    						V_PO_NO: Ext.getCmp('W_PO_NO').getValue(),
    						V_PO_SEQ: Ext.getCmp('W_PO_SEQ').getValue(),
    					},
    					callback : function(records,operations,success){
    					},
    					success : function(response) {
    						store0.reload();
    						store1.reload();
    						var win = Ext.WindowManager.getActive();
    						if(win){
    							win.close();
    						}
    					},
    					scope: this
    				});
    			}
    		});
    	} else {
    		Ext.Msg.alert('확인', '바코드확정 상태에서는 삭제할 수 없습니다.');
    	}
    	
    },
    
    /* [거래명세표] */
    stsPrtBtnClick: function() {
    	var ASN_NO = Ext.getCmp('W_ASN_NO').getValue();
    	var myWin=new Ext.Window(
			{
				title : '거래명세표',
				html : '<iframe name="xxx" border =0 src="http://123.142.124.170:8080/aireport/on_server/RECEIPT.jsp?V_ASN_NO='+ASN_NO+'" width="100%" height="100%"></iframe>',
				width :1000,
				height:768,
				modal: true
			});
		myWin.show();
		myWin.setSize(Ext.getBody().getViewSize());
		myWin.setPagePosition(0, 0);
    	
    },
    

    /* [파일첨부] */
    fileAddBtnClick: function() {
    	var popup = Ext.create("SCM_DLVY_HSPF.view.MyWindow");
		popup.show();
		
		var width = Ext.getBody().getViewSize().width - 200;
	    var height = Ext.getBody().getViewSize().height - 200;
	    popup.setSize(width, height);
	    popup.center();
		
		var fileStore = Ext.getStore('FileStore');
		fileStore.removeAll();
	   	fileStore.load({
				params : {
					V_TYPE : 'S',
					V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
					V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
					V_ASN_NO: Ext.getCmp('W_ASN_NO').getValue(),
				},
				callback : function(records, operations, success) {
				}
			});
    },
    /* [파일다운] */
    fileGridDblClick:  function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
		var gridObj = Ext.getCmp('fileGrid');
		var gridRecord = gridObj.getSelectionModel().getSelection();
		var V_FILE_NM = gridRecord[0].data['FILE_NM'];
		var V_FILE_IN_SYSTEM_NM = gridRecord[0].data['FILE_IN_SYSTEM_NM'];
		V_FILE_NM = encodeURIComponent(V_FILE_NM);
		V_FILE_IN_SYSTEM_NM = encodeURIComponent(V_FILE_IN_SYSTEM_NM);
		
		var myWin=new Ext.Window(
				{
					title : '파일다운로드',
					html : '<iframe name="xxx" border =0 src="sql/SCM_DLVY_HSPF_FILE.jsp?V_TYPE=D&V_FILE_NM='+V_FILE_NM+'&V_FILE_IN_SYSTEM_NM='+V_FILE_IN_SYSTEM_NM+'" width="1%" height="1%"></iframe>',
					width :500,
					height:500
				});
		myWin.show();
		myWin.hide();
	},
    /* [파일삭제] */
	fileDelBtnClick: function() {
    	var fileStore = Ext.getStore('FileStore');
    	var gridRecord = Ext.getCmp('fileGrid').getSelectionModel().getSelection();
    	
    	if(gridRecord.length > 0) {
    		Ext.MessageBox.confirm('확인', '삭제하시겠습니까?', function(btn) {
    			if(btn == 'yes') {
    				fileStore.sync({
    					params: {
    						V_TYPE: 'SYNC',
    						V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    						V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    					},
    					callback: function(records,operations,success){
    						
    						fileStore.load({
    							params : {
    								V_TYPE : 'S',
    								V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    								V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    								V_ASN_NO: Ext.getCmp('W_ASN_NO').getValue(),
    							},
    							callback : function(records, operations, success) {
    								var filePreview = '';
    			   					for(var i=0; i<records.length; i++) {
    			   						filePreview += records[i].get('FILE_NM') + '<br>';
    			   					}
    			   					
    			   					var qText = '';
    			   					if(filePreview.length == 0) {
    			   						qText = '없음';
    			   					} else {
    			   						qText = filePreview;
    			   					}
    			   					
				                	Ext.tip.QuickTipManager.register({
				                          target: 'fileAddBtn', // Target button's ID
				                          title : '<span style=\'color:#9CFFFA\'>첨부파일현황</span>',  // QuickTip Header
				                          text  : qText,
				                          dismissDelay: 10000 // Hide after 10 seconds hover
				                    });
				                	
				                	Ext.getCmp('fileAddBtn').setText('[ ' + records.length + ' ]');
    							}
    						});
    						
							
						}
    				});
    			}
    		})
    	}
    	
    },

    xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('myGrid3');
    	grid.saveDocumentAs({
            type: 'xlsx',
            title: 'ASN상세정보', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
		});
    },
    
    gridAddBtn_W_Click: function(button, e, eOpts) {
        var store = Ext.getStore('MyStore3');
    	var gridRecord = Ext.getCmp('myGrid3').getSelectionModel().getSelection();
    	var rowIndex = store.indexOf(gridRecord[0]);
    	var selModel= Ext.getCmp('myGrid3').getSelectionModel();

    	
    	var store2 = this.getMyStore2Store();
		var store3 = Ext.getStore('MyStore3');
		
		var msg = '';
		var flag = '';
		
		store2.each(function(record,idx){
    		if(record.get('GR_QTY') == 0) {
				flag = 'T';
			} else  {
				flag = 'F';
				msg = '입고수량이 존재합니다. 취소할 수 없습니다.';
				return false;
			}
    	});
		
		flag = 'T';
		if(flag == 'T') {
	    	if(gridRecord.length == 1) {
	    		Ext.Ajax.request({
	    			url:'sql/SCM_DLVY_HSPF_D.jsp',
	    			method: 'post',
	    			params: {
	    				V_TYPE: 'A', //생성 
	    				V_LOT_BC_NO: gridRecord[0].data['LOT_BC_NO'], //로트바코드정보 
	    				V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
	    			},
	    			callback : function(records,operations,success){
	    		    },
	    		    success : function(response) {
	    		    	Ext.getCmp('W_LOT_BC_NO').setValue(gridRecord[0].data['LOT_BC_NO']);
	    		    	
	    		    	var jsonResult = Ext.JSON.decode(response.responseText);
	    		    	var rec = Ext.create('SCM_DLVY_HSPF.model.MyModel', {
	    		    		ITEM_CD: gridRecord[0].data['ITEM_CD'],
	    		    		ITEM_NM: gridRecord[0].data['ITEM_NM'],
	    	    			PAL_BC_NO: jsonResult.resultList["0"].V_PAL_TEXT,
	    	    			BOX_BC_NO: jsonResult.resultList["0"].V_BOX_TEXT,
	    	    			LOT_BC_NO: jsonResult.resultList["0"].V_LOT_BC_NO,
	    	    			PAL_QTY: gridRecord[0].data['PAL_QTY'],
	    	    			BOX_QTY: gridRecord[0].data['BOX_QTY'],
	    	    		});
	    	    		store.insert(rowIndex + 1, rec);
	    		    },
	    			scope: this
	    		});
	    		
	    		/* COMPLETE */
	    		
	
	    		/* COMPLETE */
	    	} else {
	    		Ext.Msg.alert('확인', '참조하여 추가할 바코드를 1개 선택하세요');
	    	}
		} else {
			Ext.Msg.alert('확인', msg);
		}
    },

	gridDelBtn_W_Click: function(button, e, eOpts) {
		var store = Ext.getStore('MyStore3');
		var gridRecord = Ext.getCmp('myGrid3').getSelectionModel().getSelection();
		var rowIndex = store.indexOf(gridRecord[0]);
		var selModel= Ext.getCmp('myGrid3').getSelectionModel();
		
		if(gridRecord.length == 1) {
			
			/*나중사용
	    		Ext.Ajax.request({
	    			url:'sql/SCM_DLVY_HSPF_D.jsp'
	    			method: 'post',
	    			params: {
	//    				V_TYPE: 'I', //생성 
	    			},
	    			callback : function(records,operations,success){
	    				console.log(records[0].data.BP_CD);
	    				console.log(records[0].get('DEPT_NM'));
	    		    },
	    		    success : function(response) {
	//    		    	var PO_NO = response.responseText;
	//    		    	var jsonResult = Ext.JSON.decode(response.responseText);
	//    				var result = jsonResult.APP_NO;
	//    				jsonResult.resultList[0].PO_AMT, '0,000');
	    		    },
	    			scope: this
	    		});
	    		
			 */
			
			/* COMPLETE */
			if (gridRecord[0].phantom == true) {
				store.removeAt(rowIndex);
			} else {
				Ext.Msg.alert('확인', '기존 존재하는 바코드는 납품수량을 조정하여 삭제하세요.');
			}
			/* COMPLETE */
		} else {
			Ext.Msg.alert('확인', '바코드는 1개씩 삭제가능합니다.');
		}
	},
	bacdSaveBtnClick: function(button, e, eOpts) {
    	var store = this.getMyStoreStore();
    	var store1 = this.getMyStore1Store();
    	var store2 = this.getMyStore2Store();
		var store3 = Ext.getStore('MyStore3');
		
		var msg = '';
		var flag = '';
		
		flag = 'T';
		
		if(flag == 'T') {
			store3.each(function(record,idx){
				if(Number(record.get('LOT_QTY')) == 0) {
					flag = 'F';
					msg = '납품수량을 입력하세요.';
					return false;
				} else  {
					flag = 'T';
				}
	    	});
		}
		
		if(flag == 'T') {
			var gridRecord = Ext.getCmp('myGrid3').getSelectionModel().getSelection();
			store3.each(function( record, idx) {
				if(record.phantom == true) {
					record.set('V_TYPE', 'I');
				}
			});
			store3.sync({
				params: {
					V_TYPE: 'SYNC2',
					V_LOT_BC_NO: Ext.getCmp('W_LOT_BC_NO').getValue(),
					V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
					V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
				},
				callback: function(records,operations,success){
					store.reload();
					store1.reload();
					store2.reload();
					store3.reload();
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}
			
	},
	
	/* [ 입/출고등록 ] */
	grdnBtnClick: function(button, e, eOpts) {
		var popup = Ext.create("SCM_DLVY_HSPF.view.WinGrDn");
		popup.show();
		
		
	},
	ww_btnClick: function(button, e, eOpts) {
		var store = this.getMyStoreStore();
		var store1 = this.getMyStore1Store();
		var store2 = this.getMyStore2Store();
		var store3 = Ext.getStore('MyStore3');
		
		store3.sync({
			params: {
				V_TYPE: 'GRDN',
				V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
				V_GR_DT: Ext.getCmp('V_GR_DT').getValue(),
				V_DN_DT: Ext.getCmp('V_DN_DT').getValue(),
				V_DD_NO: Ext.getCmp('V_DD_NO').getValue(),
			},
			callback: function(records,operations,success){
				store.reload();
				store1.reload();
				store2.reload();
				store3.reload();
				var popWin=  Ext.getCmp('WinGrDn');
				popWin.destroy();
			}
		});
		
	},

    /*그리드새로고침*/
    refreshBtnClick: function(button, e, eOpts) {
    	var store3 = this.getMyStore3Store();
    	store3.reload();
    	var store2 = this.getMyStore2Store();
    	store2.reload();
    },
    
    
    //상위그리드 클릭시 하위 그리드 동일 아이템 BG컬러 변경
	myGrid2CellClick : function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
		var store2 = this.getMyStore2Store();
		var store3 = this.getMyStore3Store();
		var gridRecord2 = Ext.getCmp('myGrid2').getSelectionModel().getSelection();
		var V_PO_NO1 = gridRecord2[0].data['PO_NO'];
		var V_PO_SEQ1 = gridRecord2[0].data['PO_SEQ'];
		var selModel = Ext.getCmp('myGrid3').getSelectionModel();
		
		store3.each(function(record, idx) {
			if((record.get('PO_NO') == V_PO_NO1) && (record.get('PO_SEQ') == V_PO_SEQ1)) {
        		selModel.select(record, true);
			} else {
				selModel.deselect(record, true);
			}
		});
	},
	
	//첨부파일 등록 요청 메일 보내기
	fileRegRequestBtnClick: function(button, e, eOpts) {
		
		var ASN_NO = Ext.getCmp('W_ASN_NO').getValue();
		
		Ext.Msg.confirm('확인', '첨부파일 등록 요청 메일을 발송하시겠습니까?', function(button) {
    		if(button == 'yes') {
    			Ext.Ajax.request({
    	    		url:'sql/FILE_REG_REQUEST_MAIL.jsp',
    	    		method: 'post',
//    	    		dataType: 'jsonp',
    	    		params: {
    	    			V_ASN_NO : ASN_NO,
    	    		},
    	    	    success : function(response) {
    	    	    	Ext.Msg.alert('확인', response.responseText);
    	    	    },
    	    		scope: this
    	    	});
    		}
    	});
		
	},
	

});
