/*
 * File: app/controller/TbButtonController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('PoMgmSurvey.controller.TbButtonController', {
    extend: 'Ext.app.Controller',

    stores: [
        'MyStore'
    ],

    control: {
        "#selBtn": {
            click: 'selBtnClick'
        },
        "#cfmBtn": {
            click: 'cfmBtnClick'
        },
        "#clsBtn": {
            click: 'clsBtnClick'
        },
        "mysearchform textfield[name=search_field]": {
            specialkey: 'tfEnter'
        }
    },

    selBtnClick: function(button, e, eOpts) {
         var store=this.getMyStoreStore();
                store.load({
                	params: {
                		u_cus_from_dt: Ext.getCmp('u_cus_from_dt').getValue(), // 고객사 발주일자
                		u_cus_to_dt: Ext.getCmp('u_cus_to_dt').getValue(), // 고객사 발주일자
                		u_cus_pay_from_dt: Ext.getCmp('u_cus_pay_from_dt').getValue(), // 고객사 납기요청일
                		u_cus_pay_to_dt: Ext.getCmp('u_cus_pay_to_dt').getValue(), // 고객사 납기요청일
                		u_pay_from_dt: Ext.getCmp('u_pay_from_dt').getValue(), // 납기요청일
                		u_pay_to_dt: Ext.getCmp('u_pay_to_dt').getValue(), // 납기요청일
                		u_cus_po_no: Ext.getCmp('u_cus_po_no').getValue(), // 고객사발주번호
                		u_po_from_dt: Ext.getCmp('u_po_from_dt').getValue(), // 발주일자
                		u_po_to_dt: Ext.getCmp('u_po_to_dt').getValue(), // 발주일자
                		poradio: Ext.ComponentQuery.query('[name=poradio]')[0].getGroupValue(), //발주확정유무
                		po_no: Ext.getCmp('po_no').getValue(), // 본사발주요청번호
                		item_cd: Ext.getCmp('item_cd').getValue(), // 품목코드
                		bp_cdORnm: Ext.getCmp('bp_cdORnm').getValue() // 공급사조회(공급사코드, 공급사명)
                	},
                    callback: function (records, operation, success){
                   },
                   scope: this
                 });
    },

    cfmBtnClick: function(button, e, eOpts) {
        var store=this.getMyStoreStore();
            	var gridObj = Ext.getCmp('myGrid');
            	var gridRecord = gridObj.getSelectionModel().getSelection();
            	var flag = 'N';

            	for(var i = 0 ; i < gridRecord.length ; i ++){
                    		if(gridRecord[i].data['PO_CFM'] == 'N' && gridRecord[i].data['V_TYPE'] == 'V'){
                    			 gridRecord[i].set('V_TYPE','C');//추가
                    			flag = 'Y';
                    		}

                    	}
            	if(flag == 'Y'){
            		store.sync({
                		params: {
                			V_MAST_PO_DT : Ext.getCmp('u_po_dt').getValue(), //본사발주일자
                			V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue()	// 유저ID
            	        	},
            			 callback: function(){
            				//console.log("sync callback");
            				store.reload();
            			 },
            			 success: function(){
            				//console.log("sync success");
            			 },
            			 failure: function(){
            				 //console.log("sync fail");
            			 }
            		 });
            	}
            	else{
            		Ext.Msg.alert('확인','이미 확정된 발주가 포함되어있습니다.');
            	}
    },

    clsBtnClick: function(button, e, eOpts) {
        	var store=this.getMyStoreStore();
                    	var gridObj = Ext.getCmp('myGrid');
                    	var gridRecord = gridObj.getSelectionModel().getSelection();

                    	var flag = '';
                    	var msg = '';

                    	for(var i = 0; i < gridRecord.length; i++){
                    		var temp = gridRecord[i].data['ASN_NO'];

                    		if(gridRecord[i].data['ASN_NO'] != null && gridRecord[i].data['V_TYPE'] != ''  ){//수정

                    			flag = 'N';
                    			msg = 'ASN번호가 생성된 발주가 포함되어 발주확정을 취소할 수 없습니다.';
                    			Ext.Msg.alert('확인', msg);

                    			break;
                    		}
                    		else{

                    			flag = 'Y';
                    			gridRecord[i].set('V_TYPE','N');//추가
                    		}

                    	}
                    	if(flag == 'Y'){

                    	store.sync({
                    		params: {
                    			V_MAST_PO_DT : Ext.getCmp('u_po_dt').getValue(), //본사발주일자
                    			V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue()	// 유저ID
                	        	},
                			 callback: function(){
                				//console.log("sync callback");
                				store.reload();
                			 },
                			 success: function(){
                				//console.log("sync success");
                			 },
                			 failure: function(){
                				 //console.log("sync fail");
                			 }
                		 });
                    	}



    },

    tfEnter: function(field, e, eOpts) {
        	if (e.getKey() == e.ENTER) {
        		this.selBtnClick();
        	}
    },

    onLaunch: function(application) {

    }

});
