/*
 * File: app/controller/RPoRegController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_PO_HSPF.controller.RPoRegController', {
	extend : 'Ext.app.Controller',

	stores : [ 'MyStore', 'MyStore1' ],
	control : {
		"#gridAddBtn1" : {
			click : 'gridAddBtn1Click'
		},
		'#gridDelBtn1' : {
			click : 'gridDelBtn1Click'
		},
		"#gridPoBtn1" : { // '발주생성'
			click : 'gridPoBtn1Click'
		},
		"#gridPoSave" : { // '발주저장'
			click : 'gridPoSaveClick'
		},
		"#gridPoConfBtn" : { // '확정/취소'
			click : 'gridPoConfBtnClick'
		},
	},

	/* 발주등록 우측 */
	/* MyStore : [ M_PO_HSPF_H, M_PO_HSPF_D ] */
	/* MyStore1 : [ M_PO_HSPF_D ] */
	
	/* ['+'] 버튼 */
	gridAddBtn1Click : function() {
		var msg = '';
		var flag = 'T';

		if (Ext.getCmp('V_PO_TYPE').getValue() == '' || Ext.getCmp('V_PO_TYPE').getValue() == null || Ext.getCmp('V_PO_TYPE').getValue() == 'null') {
			msg = '발주유형';
			flag = 'F';
		} else if (Ext.getCmp('V_M_BP_CD2').getValue() == '' || Ext.getCmp('V_M_BP_CD2').getValue() == null || Ext.getCmp('V_M_BP_CD2').getValue() == 'null') {
			msg = '공급사';
			flag = 'F';
		} else if (Ext.getCmp('V_PO_DT').getValue() == '' || Ext.getCmp('V_PO_DT').getValue() == null || Ext.getCmp('V_PO_DT').getValue() == 'null') {
			msg = '발주일자';
			flag = 'F';
		} else if (Ext.getCmp('V_CUR').getValue() == '' || Ext.getCmp('V_CUR').getValue() == null || Ext.getCmp('V_CUR').getValue() == 'null') {
			msg = '화폐단위';
			flag = 'F';
		} else if (Ext.getCmp('V_RATE').getValue() == '' || Ext.getCmp('V_RATE').getValue() == null || Ext.getCmp('V_RATE').getValue() == 'null') {
			msg = '환율';
			flag = 'F';
		} else if (Ext.getCmp('V_PAY').getValue() == '' || Ext.getCmp('V_PAY').getValue() == null || Ext.getCmp('V_PAY').getValue() == 'null') {
			msg = '결제방법';
			flag = 'F';
		} else if (Ext.getCmp('V_IN_TERMS').getValue() == '' || Ext.getCmp('V_IN_TERMS').getValue() == null || Ext.getCmp('V_IN_TERMS').getValue() == 'null') {
			msg = '가격조건';
			flag = 'F';
		} else if (Ext.getCmp('V_DLV_TYPE').getValue() == '' || Ext.getCmp('V_DLV_TYPE').getValue() == null || Ext.getCmp('V_DLV_TYPE').getValue() == 'null') {
			msg = '입고구분';
			flag = 'F';
		}

		if (flag == 'T') {
			var popup = Ext.create("M_PO_HSPF.view.WinAddRow");
			popup.show();
			Ext.getCmp('rowCount').setValue(1);
		} else {
			Ext.Msg.alert('확인', '상단 발주헤더 정보를 입력하세요. (' + msg + ')');
		}

	},

	/* ['-'] 버튼 */
	gridDelBtn1Click : function() {
		var store= this.getMyStoreStore();
		var store1 = this.getMyStore1Store();
		var gridRecord1 = Ext.getCmp('myGrid2').getSelectionModel().getSelection();
		var flag = '';
		
		if(gridRecord1.length > 0) {
			Ext.MessageBox.confirm('확인', '삭제하시겠습니까?', function(btn) {
				if (btn == 'yes') {
					for (var i = 0; i < gridRecord1.length; i++) {
						if (gridRecord1[i].data['PO_NO'] == null) { 	// 발주번호가 없으면 단순 스토어 행삭제
							store1.remove(gridRecord1[i]);
							flag = 'F';
						} else {										// 발주번호가 있으면 DB에서 삭제
							gridRecord1[i].set('V_TYPE', 'D');
							if(i == gridRecord1.length-1) { //마지막에 좌측발주요청 reload
								store.reload();
							}
							flag = 'T';
						}
						
						if(flag == 'T') {
							store1.sync({
								params : {
									V_TYPE : 'SYNC',
									V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
									V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
								},
								callback : function(records, operation, success) {
									store1.reload({
										callback: function() {
											// 발주상세내역이 없으면, 발주헤더부분 삭제
											if(store1.getCount() == 0) {
												Ext.getCmp('gridPoBtn').setDisabled(false); //좌측발주 ON
												Ext.getCmp('gridAddBtn1').setDisabled(false); //발주+ ON
												Ext.getCmp('gridDelBtn1').setDisabled(false); //발주- ON
												Ext.getCmp('gridPoBtn1').setDisabled(false); // 발주생성 ON
												Ext.getCmp('gridPoSave').setDisabled(true);  //발주저장 OFF
												Ext.getCmp('gridPoConfBtn').setDisabled(true);  //발주확정 OFF
												
												Ext.getCmp('V_M_BP_NM').setValue(''); // 공급사
												Ext.getCmp('V_M_BP_CD').setValue(''); // 공급사
												Ext.getCmp('V_ITEM_CD').setValue(''); // 품목코드
												
												Ext.getCmp('V_PO_NO').setValue(''); // 발주유형
												Ext.getCmp('V_PO_TYPE').setValue(''); // 발주유형
												Ext.getCmp('V_PO_TYPE_N').setValue(''); // 발주유형
												Ext.getCmp('V_PO_DT').setValue(new Date()); // 발주일자
												Ext.getCmp('V_PO_DT_N').setValue(''); // 발주일자
												Ext.getCmp('V_M_BP_CD2').setValue(''); // 공급사코드
												Ext.getCmp('V_M_BP_NM2').setValue(''); // 공급사이름
												Ext.getCmp('V_CUR').setValue('KRW');// 화폐단위
												Ext.getCmp('V_CUR_N').setValue(''); // 화폐단위
												Ext.getCmp('V_RATE').setValue('1'); // 환율
												Ext.getCmp('V_RATE_N').setValue(''); // 환율
												Ext.getCmp('V_COMM_NO').setValue(''); // 품의번호
												Ext.getCmp('V_PAY').setValue(''); // 결제방법
												Ext.getCmp('V_PAY_N').setValue('');// 결제방법
												Ext.getCmp('V_IN_TERMS').setValue('AON'); // 가격조건
												Ext.getCmp('V_IN_TERMS_N').setValue(''); // 가격조건
												Ext.getCmp('V_DLV_TYPE').setValue(''); // 입고구분
												Ext.getCmp('V_DLV_TYPE_N').setValue(''); // 입고구분
												Ext.getCmp('V_PO_CFM').setValue(''); // 발주확정유무
												Ext.getCmp('V_REMARK').setValue(''); // 비고
												Ext.getCmp('V_COMM_NO').setValue(''); // BL_NO
												Ext.getCmp('V_S_BP_CD').setValue(''); // S_BP_CD
												
												Ext.getCmp('V_PO_NO').setEditable(true);
												Ext.getCmp('V_PO_TYPE').show();
												Ext.getCmp('V_PO_TYPE_N').hide();
												Ext.getCmp('V_PO_DT').show();
												Ext.getCmp('V_PO_DT_N').hide();
												Ext.getCmp('V_M_BP_CD2').setEditable(true);
												Ext.getCmp('V_M_BP_NM2').setEditable(true);
												Ext.getCmp('V_CUR').show();
												Ext.getCmp('V_CUR_N').hide();
												Ext.getCmp('V_RATE').show();
												Ext.getCmp('V_RATE_N').hide();
												Ext.getCmp('V_COMM_NO').setEditable(true);
												Ext.getCmp('V_PAY').show();
												Ext.getCmp('V_PAY_N').hide();
												Ext.getCmp('V_IN_TERMS').show();
												Ext.getCmp('V_IN_TERMS_N').hide();
												Ext.getCmp('V_DLV_TYPE').show();
												Ext.getCmp('V_DLV_TYPE_N').hide();
											}
										}
									});
								}
							});
						}
						// 발주상세가 DB에 존재할 때 아래 루틴 수행
						
					}
					
				}
			})
		} else {
			if(store1.count() > 0) {
				Ext.Msg.alert('확인', '삭제할 내역을 선택하세요.');
			} else {
				
				Ext.MessageBox.confirm('확인', '삭제하시겠습니까?', function(btn) {
					Ext.Ajax.request({
						url:'sql/M_PO_HSPF_D.jsp',
						method: 'post',
						params: {
							V_TYPE: 'DH', //헤더삭제 
							V_PO_NO: Ext.getCmp('V_PO_NO').getValue()
						},
						callback : function(records,operations,success){
					    },
					    success : function(response) {
	
							Ext.getCmp('gridPoBtn').setDisabled(false); //좌측발주 ON
							Ext.getCmp('gridAddBtn1').setDisabled(false); //발주+ ON
							Ext.getCmp('gridDelBtn1').setDisabled(false); //발주- ON
							Ext.getCmp('gridPoBtn1').setDisabled(false); // 발주생성 ON
							Ext.getCmp('gridPoSave').setDisabled(true);  //발주저장 OFF
							Ext.getCmp('gridPoConfBtn').setDisabled(true);  //발주확정 OFF
							
							Ext.getCmp('V_M_BP_NM').setValue(''); // 공급사
							Ext.getCmp('V_M_BP_CD').setValue(''); // 공급사
							Ext.getCmp('V_ITEM_CD').setValue(''); // 품목코드
							
							Ext.getCmp('V_PO_NO').setValue(''); // 발주유형
							Ext.getCmp('V_PO_TYPE').setValue(''); // 발주유형
							Ext.getCmp('V_PO_TYPE_N').setValue(''); // 발주유형
							Ext.getCmp('V_PO_DT').setValue(new Date()); // 발주일자
							Ext.getCmp('V_PO_DT_N').setValue(''); // 발주일자
							Ext.getCmp('V_M_BP_CD2').setValue(''); // 공급사코드
							Ext.getCmp('V_M_BP_NM2').setValue(''); // 공급사이름
							Ext.getCmp('V_CUR').setValue('KRW');// 화폐단위
							Ext.getCmp('V_CUR_N').setValue(''); // 화폐단위
							Ext.getCmp('V_RATE').setValue('1'); // 환율
							Ext.getCmp('V_RATE_N').setValue(''); // 환율
							Ext.getCmp('V_COMM_NO').setValue(''); // 품의번호
							Ext.getCmp('V_PAY').setValue(''); // 결제방법
							Ext.getCmp('V_PAY_N').setValue('');// 결제방법
							Ext.getCmp('V_IN_TERMS').setValue('AON'); // 가격조건
							Ext.getCmp('V_IN_TERMS_N').setValue(''); // 가격조건
							Ext.getCmp('V_DLV_TYPE').setValue(''); // 입고구분
							Ext.getCmp('V_DLV_TYPE_N').setValue(''); // 입고구분
							Ext.getCmp('V_PO_CFM').setValue(''); // 발주확정유무
							Ext.getCmp('V_REMARK').setValue(''); // 비고
							Ext.getCmp('V_COMM_NO').setValue(''); // BL_NO
							Ext.getCmp('V_S_BP_CD').setValue(''); // 고객사
							
							Ext.getCmp('V_PO_NO').setEditable(true);
							Ext.getCmp('V_PO_TYPE').show();
							Ext.getCmp('V_PO_TYPE_N').hide();
							Ext.getCmp('V_PO_DT').show();
							Ext.getCmp('V_PO_DT_N').hide();
							Ext.getCmp('V_M_BP_CD2').setEditable(true);
							Ext.getCmp('V_M_BP_NM2').setEditable(true);
							Ext.getCmp('V_CUR').show();
							Ext.getCmp('V_CUR_N').hide();
							Ext.getCmp('V_RATE').show();
							Ext.getCmp('V_RATE_N').hide();
							Ext.getCmp('V_COMM_NO').setEditable(true);
							Ext.getCmp('V_PAY').show();
							Ext.getCmp('V_PAY_N').hide();
							Ext.getCmp('V_IN_TERMS').show();
							Ext.getCmp('V_IN_TERMS_N').hide();
							Ext.getCmp('V_DLV_TYPE').show();
							Ext.getCmp('V_DLV_TYPE_N').hide();
						
					    },
						scope: this
					});
				});

			}
		}
	},

	/* [발주생성]버튼 */
	gridPoBtn1Click : function(b, e, o) {
		var store = this.getMyStoreStore(); // M_PO_HSPF_H
		var store1 = this.getMyStore1Store(); // M_PO_HSPF_D
		var flag = '';
		var gridRecord = Ext.getCmp('myGrid2').getSelectionModel().getSelection();
		

		if (Ext.getCmp('V_PO_TYPE').getValue() == '' || Ext.getCmp('V_PO_TYPE').getValue() == null || Ext.getCmp('V_PO_TYPE').getValue() == 'null') {
			Ext.Msg.alert('확인', '발주유형을 선택하세요.');
			flag = 'F';
		} else if (Ext.getCmp('V_M_BP_CD2').getValue() == '' || Ext.getCmp('V_M_BP_CD2').getValue() == null || Ext.getCmp('V_M_BP_CD2').getValue() == 'null') {
			Ext.Msg.alert('확인', '공급사를 입력하세요.');
			flag = 'F';
		} else if (Ext.getCmp('V_PO_DT').getValue() == '' || Ext.getCmp('V_PO_DT').getValue() == null || Ext.getCmp('V_PO_DT').getValue() == 'null') {
			Ext.Msg.alert('확인', '발주일자를 입력하세요.');
			flag = 'F';
		} else if (Ext.getCmp('V_CUR').getValue() == '' || Ext.getCmp('V_CUR').getValue() == null || Ext.getCmp('V_CUR').getValue() == 'null') {
			Ext.Msg.alert('확인', '화폐단위를 선택하세요.');
			flag = 'F';
		} else if (Ext.getCmp('V_RATE').getValue() == '' || Ext.getCmp('V_RATE').getValue() == null || Ext.getCmp('V_RATE').getValue() == 'null') {
			Ext.Msg.alert('확인', '환율을 입력하세요.');
			flag = 'F';
		} else if (Ext.getCmp('V_PAY').getValue() == '' || Ext.getCmp('V_PAY').getValue() == null || Ext.getCmp('V_PAY').getValue() == 'null') {
			Ext.Msg.alert('확인', '결제방법을 선택하세요.');
			flag = 'F';
		} else if (Ext.getCmp('V_IN_TERMS').getValue() == '' || Ext.getCmp('V_IN_TERMS').getValue() == null || Ext.getCmp('V_IN_TERMS').getValue() == 'null') {
			Ext.Msg.alert('확인', '가격조건을 선택하세요.');
			flag = 'F';
		} else if (Ext.getCmp('V_DLV_TYPE').getValue() == '' || Ext.getCmp('V_DLV_TYPE').getValue() == null || Ext.getCmp('V_DLV_TYPE').getValue() == 'null') {
			Ext.Msg.alert('확인', '입고구분을 선택하세요.');
			flag = 'F'; 
		} else if (Ext.getCmp('V_PO_TYPE').getValue() == 'PO' && (Ext.getCmp('V_COMM_NO').getValue() == null || Ext.getCmp('V_COMM_NO').getValue() == undefined || Ext.getCmp('V_COMM_NO').getValue()== '' ) ) {
			Ext.Msg.alert('확인', '[ 발주유형 : 수입 ] 의 경우, B/L번호를 반드시 입력해야 합니다.');
			flag = 'F';
		} else {
			if (store1.getCount() > 0) {
				store1.each(function(record, idx) {
					if (store1.getAt(idx).get('ITEM_CD') == undefined) {
						Ext.Msg.alert('확인', '세부내역에서 품목코드를 입력하세요.(' + (idx+1) + ')');
						flag = 'F';
						return false;
					} else if (store1.getAt(idx).get('PO_QTY') == undefined) {
						Ext.Msg.alert('확인', '세부내역에서 수량을 입력하세요.(' + (idx+1) + ')');
						flag = 'F';
						return false;
					} else if (store1.getAt(idx).get('VAT_TYPE') == undefined) {
						Ext.Msg.alert('확인', '세부내역에서 부가세유형을 선택하세요.');
						flag = 'F';
						return false;
					} else if (store1.getAt(idx).get('HOPE_SL_CD') == undefined) {
						Ext.Msg.alert('확인', '세부내역에서 납기요청창고를 선택하세요.');
						flag = 'F';
						return false;
					} else {
						if ((Ext.getCmp('V_DLV_TYPE').getValue() == 'B' || Ext.getCmp('V_DLV_TYPE').getValue() == 'E') 
								&& (Ext.getCmp('V_S_BP_CD').getValue() == '' || Ext.getCmp('V_S_BP_CD').getValue() == null || Ext.getCmp('V_S_BP_CD').getValue() == 'null')) {
							Ext.Msg.alert('확인', '고객사(출고처)를 선택하세요. <br> (직입고, CY입고는 고객사 필수입니다.)');
							flag = 'F';
						} else {
							flag = 'T';
						}
						
						if (flag == 'T') {
						// 발주세부내역존재
							Ext.Msg.confirm('확인', '발주등록 하시겠습니까?', function(button) {
								if (button == 'yes') {
									Ext.Ajax.request({
										url : 'sql/M_PO_HSPF_H.jsp',
										method : 'post',
										params : {
											V_TYPE : 'I',
											V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
											V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
											V_M_BP_CD2 : Ext.getCmp('V_M_BP_CD2').getValue(),
											V_PO_TYPE : Ext.getCmp('V_PO_TYPE').getValue(),
											V_PO_DT : Ext.getCmp('V_PO_DT').getValue(),
											V_CUR : Ext.getCmp('V_CUR').getValue(),
											V_XCHG_RATE : Ext.getCmp('V_RATE').getValue(),
											V_PAY : Ext.getCmp('V_PAY').getValue(),
											V_IN_TERMS : Ext.getCmp('V_IN_TERMS').getValue(),
											V_DLV_TYPE : Ext.getCmp('V_DLV_TYPE').getValue(),
											V_REMARK : Ext.getCmp('V_REMARK').getValue(),
											V_COMM_NO : Ext.getCmp('V_COMM_NO').getValue(),
											V_S_BP_CD : Ext.getCmp('V_S_BP_CD').getValue()
										},
										success : function(response) {
											var PO_NO = response.responseText;
	
											// 발주세부내역의 발주는 한번에 등록한다.
											// 강제싱크!
											store1.each(function(record, idx) {
												store1.data.items[idx].crudState = 'U';
												record.set('V_TYPE', 'I');
											});
	
											store1.sync({
												params : {
													V_TYPE : 'SYNC',
													V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
													V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
													V_PO_NO : PO_NO,
													V_M_BP_CD : Ext.getCmp('V_M_BP_CD2').getValue()
												},
												callback : function(records, operation, success) {
													Ext.getCmp('V_PO_NO').setValue(PO_NO);
	
													Ext.getCmp('gridPoBtn').setDisabled(true); // 화살표발주 OFF
													Ext.getCmp('gridPoBtn1').setDisabled(true); // 발주생성 OFF
													Ext.getCmp('gridPoSave').setDisabled(false); // 발주저장 ON
													Ext.getCmp('gridPoConfBtn').setDisabled(false); // 확정취소 ON
	
													store.reload();
													store1.reload({
														params : {
															V_TYPE : 'S',
															V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
															V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
															V_PO_NO : PO_NO,
														}
													});
													Ext.toast({
														title : ' ',
														timeout : 1000,
														html : '발주등록완료',
														style : 'text-align: center',
														align : 't',
														width : 130,
													});
												}
											});
										},
										scope : this
									});
								}
							});
						}
							
					}
				});
			} else {
				Ext.Msg.alert('확인', '발주상세내역이 없습니다.');
			}
		}
	},

	/* [발주저장]버튼 */
	gridPoSaveClick : function(button, e, eOpts) {
		var store = this.getMyStoreStore(); // M_PO_HSPF_H
		var store1 = this.getMyStore1Store(); // M_PO_HSPF_D
		var flag = '';
		var gridRecord1 = Ext.getCmp('myGrid2').getSelectionModel().getSelection();

		if (Ext.getCmp('V_PO_TYPE').getValue() == '' || Ext.getCmp('V_PO_TYPE').getValue() == null || Ext.getCmp('V_PO_TYPE').getValue() == 'null') {
			Ext.Msg.alert('확인', '발주유형을 선택하세요.');
			flag = 'F';
		} else if (Ext.getCmp('V_M_BP_CD2').getValue() == '' || Ext.getCmp('V_M_BP_CD2').getValue() == null || Ext.getCmp('V_M_BP_CD2').getValue() == 'null') {
			Ext.Msg.alert('확인', '공급사를 입력하세요.');
			flag = 'F';
		} else if (Ext.getCmp('V_PO_DT').getValue() == '' || Ext.getCmp('V_PO_DT').getValue() == null || Ext.getCmp('V_PO_DT').getValue() == 'null') {
			Ext.Msg.alert('확인', '발주일자를 입력하세요.');
			flag = 'F';
		} else if (Ext.getCmp('V_CUR').getValue() == '' || Ext.getCmp('V_CUR').getValue() == null || Ext.getCmp('V_CUR').getValue() == 'null' || Ext.getCmp('V_CUR').getValue() == 'N') {
			Ext.Msg.alert('확인', '화폐단위를 선택하세요.');
			flag = 'F';
		} else if (Ext.getCmp('V_RATE').getValue() == '' || Ext.getCmp('V_RATE').getValue() == null || Ext.getCmp('V_RATE').getValue() == 'null') {
			Ext.Msg.alert('확인', '환율을 입력하세요.');
			flag = 'F';
		} else if (Ext.getCmp('V_PAY').getValue() == '' || Ext.getCmp('V_PAY').getValue() == null || Ext.getCmp('V_PAY').getValue() == 'null' || Ext.getCmp('V_PAY').getValue() == 'N') {
			Ext.Msg.alert('확인', '결제방법을 선택하세요.');
			flag = 'F';
		} else if (Ext.getCmp('V_IN_TERMS').getValue() == '' || Ext.getCmp('V_IN_TERMS').getValue() == null || Ext.getCmp('V_IN_TERMS').getValue() == 'null') {
			Ext.Msg.alert('확인', '가격조건을 선택하세요.');
			flag = 'F';
		} else if (Ext.getCmp('V_DLV_TYPE').getValue() == '' || Ext.getCmp('V_DLV_TYPE').getValue() == null || Ext.getCmp('V_DLV_TYPE').getValue() == 'null') {
			Ext.Msg.alert('확인', '입고구분 선택하세요.');
			flag = 'F';
		} else {
			store1.each(function(record, idx) {
				if (store1.getAt(idx).get('PO_QTY') == null || store1.getAt(idx).get('PO_QTY') == 0) {
					Ext.Msg.alert('확인', '수량을 확인하세요.');
					flag = 'F';
					return false;
				} else if ((parseInt(store1.getAt(idx).get('MIN_PO_QTY')) != 0) && (parseInt(store1.getAt(idx).get('MIN_PO_QTY')) > parseInt(store1.getAt(idx).get('PO_QTY')))) {
					Ext.Msg.alert('확인', '최소발주수량을 확인하세요.');
					flag = 'F';
					return false;
				} else if (store1.getAt(idx).get('VAT_TYPE') == null || store1.getAt(idx).get('VAT_TYPE') == "") {
					Ext.Msg.alert('확인', '세부내역에서 부가세유형을 선택하세요.');
					flag = 'F';
					return false;
				} else if (store1.getAt(idx).get('HOPE_SL_CD') == null || store1.getAt(idx).get('HOPE_SL_CD') == "" || store1.getAt(idx).get('HOPE_SL_CD') == "N" ) {
					Ext.Msg.alert('확인', '납기요청창고를 선택하세요');
					flag = 'F';
					return false;
				} else {
					flag = 'T';
				}
			});
		}

		if( flag == 'T') {
			
			if ((Ext.getCmp('V_DLV_TYPE').getValue() == 'B' || Ext.getCmp('V_DLV_TYPE').getValue() == 'E') 
					&& (Ext.getCmp('V_S_BP_CD').getValue() == '' || Ext.getCmp('V_S_BP_CD').getValue() == null || Ext.getCmp('V_S_BP_CD').getValue() == 'null')) {
				Ext.Msg.alert('확인', '고객사(출고처)를 선택하세요. <br> (직입고, CY입고는 고객사 필수입니다.)');
				flag = 'F';
			} else {
				flag = 'T';
			}
		}
		
		if (flag == 'T') {
			// 발주헤더저장
			Ext.Ajax.request({
				url : 'sql/M_PO_HSPF_H.jsp',
				method : 'post',
				params : {
					V_TYPE : 'U',
					V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
					V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
					V_PO_NO : Ext.getCmp('V_PO_NO').getValue(),
					V_M_BP_CD2 : Ext.getCmp('V_M_BP_CD2').getValue(),
					V_PO_TYPE : Ext.getCmp('V_PO_TYPE').getValue(),
					V_PO_DT : Ext.getCmp('V_PO_DT').getValue(),
					V_CUR : Ext.getCmp('V_CUR').getValue(),
					V_XCHG_RATE : Ext.getCmp('V_RATE').getValue(),
					V_PAY : Ext.getCmp('V_PAY').getValue(),
					V_IN_TERMS : Ext.getCmp('V_IN_TERMS').getValue(),
					V_DLV_TYPE : Ext.getCmp('V_DLV_TYPE').getValue(),
					V_REMARK : Ext.getCmp('V_REMARK').getValue(),
					V_COMM_NO : Ext.getCmp('V_COMM_NO').getValue(),
					V_S_BP_CD : Ext.getCmp('V_S_BP_CD').getValue()
				},

				// 발주상세저장
				callback : function() {
					store1.each(function(record, idx) {
						// // 발주번호가 없으면
						store1.data.items[idx].crudState = 'U';
						if (record.get('PO_NO') == undefined) {
							record.set('V_TYPE', 'I');
						} else {
							record.set('V_TYPE', 'U');
						}
					});
					store1.sync({
						params : {
							V_TYPE : 'SYNC',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_M_BP_CD : Ext.getCmp('V_M_BP_CD2').getValue(),
							V_PO_NO : Ext.getCmp('V_PO_NO').getValue()
						},
						callback : function(records, operation, success) {
						}
					});

					store.reload();
					store1.reload();

					Ext.toast({
						title : ' ',
						timeout : 1500,
						html : '저장완료',
						style : 'text-align: center',
						align : 't',
						width : 130,
					});
				}
			});

		}

	},
	
	
	/* [발주확정/취소] 버튼 */
	gridPoConfBtnClick : function() {
		var store1 = this.getMyStore1Store();
		var PO_NO = Ext.getCmp('V_PO_NO').getValue();
		var msg = '';
		var cm = Ext.getCmp('myGrid2').getView().getHeaderCt().getGridColumns();

		if (PO_NO == '') {
			Ext.Msg.alert('확인', '발주번호를 입력하세요.');
		} else if (store1.getCount() == 0) {
			Ext.Msg.alert('확인', '발주내역이 없습니다.');

			// 발주취소
		} else if (Ext.getCmp('V_PO_CFM').getValue() == 'Y') {
			var store1 = this.getMyStore1Store();
			var PO_NO = Ext.getCmp('V_PO_NO').getValue();
			var msg = '';
			if (PO_NO == '') {
				Ext.Msg.alert('확인', '발주번호를 입력하세요.');
			} else if (store1.getCount() == 0) {
				Ext.Msg.alert('확인', '발주내역이 없습니다.');
			} else if (Ext.getCmp('V_PO_CFM').getValue() == 'N') {
				Ext.Msg.alert('확인', '미확정 발주입니다.');
			} else {
			//	/*
				Ext.Msg.confirm('확인', '발주확정취소 하시겠습니까?', function(button) {
					if (button == 'yes') {
						var myMask = new Ext.LoadMask(Ext.getCmp('myGrid2') , {msg:"인터페이스 중"});
						myMask.show();
						
						Ext.Ajax.request({
							url : 'sql/m_po_hspf_cancel_anylink_hspf.jsp',
							method : 'post',
							params : {
								V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
								V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
								V_PO_NO : Ext.getCmp('V_PO_NO').getValue(),
							},
							success : function(response) {
								var jsonResult = Ext.JSON.decode(response.responseText);
								var resMSG = jsonResult.resMSG;
								var finCnt = jsonResult.finCnt;
								var resDATE = jsonResult.resDATE;
								var resString = jsonResult.resString;
								
								if(resString == 'OK') {
									Ext.Ajax.request({
										url : 'sql/M_PO_HSPF_H.jsp',
										method : 'post',
										params : {
											V_TYPE : 'CN', // 확정취소
											V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
											V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
											V_PO_NO : Ext.getCmp('V_PO_NO').getValue(),
										},
										success : function(response) {
											Ext.getCmp('gridPoBtn').setDisabled(true); // 화살표발주 OFF
											Ext.getCmp('gridAddBtn1').setDisabled(false); // 발주+ ON
											Ext.getCmp('gridDelBtn1').setDisabled(false); // 발주- ON
											Ext.getCmp('gridPoSave').setDisabled(false); // 발주저장 ON

											M_PO_HSPF.app.getController('TbButtonController').selBtnClick();

											Ext.toast({
												title : ' ',
												timeout : 1500,
												html : '확정취소완료',
												style : 'text-align: center',
												align : 't',
												width : 130,
											});
											Ext.Msg.alert('확인', '총 [ ' + finCnt + ' ] 건 발주확정취소 완료');
										},
										scope : this
									});
									myMask.hide();
								} else if(resString == 'GR') {
									Ext.Msg.alert('확인', '입고내역이 존재합니다. 취소할 수 없습니다');
									myMask.hide();
								} else if(resString == 'LC') {
									Ext.Msg.alert('확인', 'LC내역이 존재합니다. 취소할 수 없습니다');
									myMask.hide();
								} else if(resString == 'BL') {
									Ext.Msg.alert('확인', 'BL내역이 존재합니다. 취소할 수 없습니다');
									myMask.hide();
								} else if(resString == 'NO DATA') {
									Ext.Msg.alert('확인', '해당 발주가 ERP발주확정 데이터에 존재하지 않습니다.');
									myMask.hide();
								} else if(resMSG == 'ERROR') {
									Ext.Msg.alert('확인', '발주확정 인터페이스 오류(관리자 문의요망)<br>' + resString + '<br>' + resDATE);
									myMask.hide();
								} else {
									Ext.Msg.alert('확인', '관리자 문의요망<br>');
									myMask.hide();
								}
							}, 
							failure: function(fp, o) { 
								Ext.Msg.alert('확인', '발주확정 인터페이스 오류(관리자 문의요망)<br>');
								myMask.hide();
							},
							scope : this
						});
					}
				});
			}
			// 발주확정
		} else {
			Ext.Msg.confirm('확인', '발주확정 하시겠습니까?', function(button) {
				if (button == 'yes') {
					
				//	/*
					var myMask = new Ext.LoadMask(Ext.getCmp('myGrid2') , {msg:"인터페이스 중"});
					myMask.show();
					Ext.Ajax.request({
						url : 'sql/m_po_hspf_anylink_hspf.jsp',
						method : 'post',
						params : {
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_PO_NO : Ext.getCmp('V_PO_NO').getValue(),
						},
						success : function(response) {
							var jsonResult = Ext.JSON.decode(response.responseText);
							var resMSG = jsonResult.resMSG;
							var resDATE = jsonResult.resDATE;
							var finCnt = jsonResult.finCnt;
							var resString = jsonResult.resString;
							
							if(resMSG == 'SUCCESS') {
								
								Ext.Ajax.request({
									url : 'sql/M_PO_HSPF_H.jsp',
									method : 'post',
									params : {
										V_TYPE : 'CF', // 확정
										V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
										V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
										V_PO_NO : Ext.getCmp('V_PO_NO').getValue(),
									},
									success : function(response) {
											
										Ext.getCmp('gridPoBtn').setDisabled(true); // 화살표발주 OFF
										Ext.getCmp('gridPoBtn1').setDisabled(true); // 발주생성 OFF
										Ext.getCmp('gridAddBtn1').setDisabled(true); // 발주+ OFF
										Ext.getCmp('gridDelBtn1').setDisabled(true); // 발주- OFF
										Ext.getCmp('gridPoSave').setDisabled(true); // 발주저장 OFF

										M_PO_HSPF.app.getController('TbButtonController').selBtnClick();

										Ext.Msg.alert('확인', '총 [ ' + finCnt + ' ] 건 발주확정 완료');
										
										//메일보내기.
										Ext.Ajax.request({
											url : '/HSPF01/common/MailingService_PO.jsp',
											method : 'post',
											params : {
												V_TYPE: 'EMAIL_YN',
												V_PO_NO : Ext.getCmp('V_PO_NO').getValue(),
											},
											success: function(response) {
												var jsonResult = Ext.JSON.decode(response.responseText);
												var length = jsonResult.resultList.length;
												for(var i = 0; i < length; i++) {
													// 이메일 수신여부가 Y이면
													if(jsonResult.resultList[i].EMAIL_YN == 'Y') {
														var email = jsonResult.resultList[i].EMAIL;
														Ext.Ajax.request({
															url : '/HSPF01/common/MailingService_PO.jsp',
															method : 'post',
															params : {
																V_TYPE: 'EMAIL_SEND',
																V_EMAIL: email,
																V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
																V_PO_NO : Ext.getCmp('V_PO_NO').getValue(),
															},
															success: function(response) {
															},
															scope : this
														});
													}
												}
											},
											scope : this
										});
										
									},
									scope : this
								});
								myMask.hide();
								
							} else {
								Ext.Msg.alert('확인', '발주확정 인터페이스 오류(관리자 문의요망)<br>' + resString + '<br>' + resDATE);
								myMask.hide();
							}
						}, 
						failure: function(fp, o) { 
							Ext.Msg.alert('확인', '발주확정 인터페이스 오류(관리자 문의요망)<br>');
							myMask.hide();
						},
						scope : this
					});
					
				}
			});
		}
	},


});
