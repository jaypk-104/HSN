/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('B_PR_USR_DISTR.view.MyGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.myGrid',

    requires: [
        'B_PR_USR_DISTR.view.MyGridViewModel',
        'Ext.grid.column.RowNumberer',
        'Ext.view.Table',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.CellEditing'
    ],

    config: {
        tbar: [
            {
                id: 'gridAddBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf055@FontAwesome',
                iconCls: 'grid-add-btn',
//                disabled: true
            },
            {
                id: 'gridDelBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf056@FontAwesome',
                iconCls: 'grid-del-btn',
                //                disabled: true
            },
            {
                xtype: 'container',
                flex: 1
            },
            {
                xtype: 'button',
                glyph: 'xf1c3@FontAwesome',
                id: 'xlsxDown',
                cfg: {
                    type: 'excel07',
                    ext: 'xlsx'
                },
                iconCls: 'grid-excel-btn',
                margin: '0 3 0 0',
                
            }
        ]
    },

    viewModel: {
        type: 'mygrid'
    },
    style: 'border: 1px solid lightgray; padding: 5px;',
    header: false,
    title: 'My Grid Panel',
    store: 'MyStore',
    id: 'myGrid',
    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 114,
            dataIndex: 'V_TYPE',
            text: 'V_TYPE',
            hidden: true
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 114,
            dataIndex: 'USR_ID',
            text: '사용자아이디',
            editor: {
            	xtype: 'textfield'
            }
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	width: 114,
        	dataIndex: 'NAME1',
        	text: '사용자명',
        	editor: {
        		xtype: 'textfield'
        	}
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 114,
            dataIndex: 'EMP_NO',
            text: '사번',
            editor: {
            	xtype: 'textfield'
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 114,
            dataIndex: 'ROLL_NM',
            text: '직급',
            editor: {
            	xtype: 'textfield'
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 114,
            dataIndex: 'REQ_USR_YN',
            text: '출고요청자유무',
            editor: {
            	xtype: 'combobox',
    			storeId: 'store1',
    			store : Ext.create('Ext.data.Store',
						{
							fields : [ 'value' ],
							data : [['Y'], ['N'] ]
				}),
				displayField : 'value',
				valueField : 'value',
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 114,
            dataIndex: 'CFM_USR_YN',
            text: '출고승인자유무',
            editor: {
            	xtype: 'combobox'
            },
            editor: {
            	xtype: 'combobox',
    			storeId: 'store2',
    			store : Ext.create('Ext.data.Store',
						{
							fields : [ 'value' ],
							data : [['Y'], ['N'] ]
				}),
				displayField : 'value',
				valueField : 'value',
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 150,
            dataIndex: 'EMAIL',
            text: 'E-mail',
            editor: {
            	xtype: 'textfield'
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 114,
            dataIndex: 'TEL_NO',
            text: '전화번호',
            editor: {
            	xtype: 'textfield'
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 114,
            dataIndex: 'BIZ_TYPE',
            text: '출고부서유형',
            editor: {
        		xtype: 'combobox',
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
        		editable: false,
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'store3',
        			proxy: {
        		           type: 'ajax',
        		           extraParams: {
        		            	V_MAST_CD: 'BA35',
        		            	V_GRID: 'Y'
        		           },	
        		           api: {
        		               read: '/HSPF01/common/sql/Combobox.jsp'
        		           },
        		           reader: {
        		               type: 'json',
        		               rootProperty: 'resultList'
        		           }
        		       }
        		}),
            },
        	renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('store3').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('store3').findRecord('DTL_CD',value).get('DTL_NM');
                }
                return value;
            },
        },
    ],
    viewConfig: {
    	enableTextSelection: true,
    },
    selModel: {
        selType: 'checkboxmodel',
        checkOnly: true,
        listeners: {
      		  select: function(rowmodel, record, index, eOpts) {
	          	record.set('V_TYPE', 'V');
	          },
	          deselect: function(rowmodel, record, index, eOpts) {
	          	record.set('V_TYPE', '');
	          }
      }
  },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        {
            ptype: 'cellediting',
            listeners: {
            	edit: function(editor, context, eOpts) {
            		var selModel= Ext.getCmp('myGrid').getSelectionModel();
            		selModel.select(context.record);
            	}
            }
        }
    ]

});