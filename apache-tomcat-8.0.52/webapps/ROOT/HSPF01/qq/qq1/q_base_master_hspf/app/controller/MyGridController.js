/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Q_BASE_MASTER.controller.MyGridController', {
    extend: 'Ext.app.Controller',

    stores: [
        'MyStore'
    ],

    control: {
        "#gridAddBtn": {
            click: 'gridAddBtnClick'
        },
        "#gridDelBtn": {
            click: 'gridDelBtnClick'
        },
        "#xlsxDown": {
            click: 'xlsxDownClick'
        },
        "#xmlDown": {
            click: 'xmlDownClick'
        },
        '#myGrid': {
    		celldblclick: 'gridDblClick'
    	},
    	"#addNew": {
    		click: 'addNewClick'
    	},
    },

    gridAddBtnClick: function(button, e, eOpts) {
        //var popup = Ext.create("B_COMP_HSPF.view.WinAddRow");
        //popup.show();
        //Ext.getCmp('rowCount').setValue(1);
    },

    gridDelBtnClick: function(button, e, eOpts) {
        var store = Ext.getStore('MyStore');
            	var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();

            	if(gridRecord.length > 0) {
            		Ext.Msg.confirm('확인','삭제하시겠습니까?', function(button){
            			if(button == 'yes') {
            				for(var i=0; i<gridRecord.length; i++) {
            		    		if(gridRecord[i].data['V_TYPE']=='V') {
            		    			gridRecord[i].data['V_TYPE'] = 'D';
            		    		}
            		    	}
            		    	store.sync({
            					params: {
            						V_USR_ID : 'admin',//parent.Ext.getCmp('GUSER_ID').getValue(),
            					},
            		    		callback: function(records, operation, success) {
            		    			store.reload();
            					}
            		    	});
            			}
            		});
            	}
    },

    xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
            	var grid = Ext.getCmp('myGrid');
            	grid.saveDocumentAs({
                    type: 'xlsx',
                    title: 'test', //엑셀내타이틀
                    fileName: currentDate+'.xlsx' //엑셀파일이름
        		});
    },

    xmlDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
            	var grid = Ext.getCmp('myGrid');
            	grid.saveDocumentAs({
                    type: 'xml',
                    title: 'test', //엑셀내타이틀
                    fileName: currentDate+'.xml' //엑셀파일이름
        		});
    },
    
    gridDblClick:  function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
//    	console.log(cellIndex);
    	if(record.data['REV_NO'] == null){
    		Ext.Msg.alert('확인', '신규 등록부터 해주세요');
    	}
    	else{
    		var popup = Ext.create("Q_BASE_MASTER.view.Popup");
            popup.show();
            var store1 = Ext.getCmp('myGrid1').getStore();
            store1.removeAll();
            store1.load({
            	params:{
            		V_TYPE : 'DS',
            		V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
                    V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
                    V_Q_ID : record.data['Q_ID'],
            	}
            });
            Ext.getCmp('W_BP_NM').setValue(record.data['BP_NM']);
            Ext.getCmp('W_ITEM_CD').setValue(record.data['ITEM_CD']);
            Ext.getCmp('W_REV_NO').setValue(record.data['REV_NO']);
    	}
		

    },
    
    addNewClick: function(button, e, eOpts) {
    	var grid = Ext.getCmp('myGrid');
    	var record = grid.getSelectionModel().getSelection();
    	var store = grid.getStore();
    	var startMsg = '';
    	var endMsg = '';
    	if(record.length > 0){
    		if(record[0].data['REV_NO'] == null || record[0].data['REV_NO'] == '' ){
    			startMsg = '신규 생성 하시겠습니까?';
    			endMsg = '신규생성 되었습니다.';
    		}
    		else{
    			startMsg = '개정 하시겠습니까?';
    			endMsg = '개정 되었습니다.';
    		}
    		Ext.Msg.confirm('확인',startMsg,
    			function(button){
        	    	if(button=='yes') {
        	    		for( var i = 0 ; i < record.length ; i ++){
        	    			if(record[i].data['V_TYPE'] == 'V'){
        	    				record[i].set('V_TYPE', 'HI');
        	    			}
        	    		}
        	    		store.sync({
        	    			params: {
        	    				V_TYPE : 'HI',
        	    				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
            					V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
        	    			},
        	    			callback: function(records, operation, success) {
        		    			store.reload();
//        		    			var popup = Ext.create("Q_BASE_MASTER.view.Popup");
//        		    			var store1 = Ext.getCmp('myGrid1').getStore();
//                	            store1.removeAll();
//                	            popup.show();
        		    			Ext.Msg.alert('확인', endMsg);
                	            // HI타고 Q_ID를 채번하는데 바로 팝업띄우면 Q_ID를 못불러오는 문제 발생.
                	            //바로 팝업띄우지말고 직접 더블클릭하도록 함. 20180528 김장운.
                	            
        					}
        	    		});
        	    	}
    		});
    	}
    	else{
    		Ext.Msg.alert('확인', '항목을 선택해주세요.');
    	}
    },

});
