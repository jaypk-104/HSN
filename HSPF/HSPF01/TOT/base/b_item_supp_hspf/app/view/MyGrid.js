/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('B_ITEM_SUPP_HSPF.view.MyGrid', {
	extend : 'Ext.grid.Panel',
	alias : 'widget.myGrid',

	requires : [ 'B_ITEM_SUPP_HSPF.view.MyGridViewModel', 'B_ITEM_SUPP_HSPF.view.MyGridViewController', 'Ext.view.Table', 'Ext.grid.column.RowNumberer', 'Ext.form.field.Date', 'Ext.form.field.Number', 'Ext.selection.CheckboxModel', 'Ext.grid.plugin.Exporter', 'Ext.grid.plugin.RowEditing',
	             'Ext.grid.plugin.CellEditing',
	             'Ext.grid.plugin.Clipboard', ],

	config : {
		tbar : [ {
			id : 'gridAddBtn',
			text : '',
			margin : '0 3 0 0',
			glyph : 'xf055@FontAwesome',
			iconCls : 'grid-add-btn'
		}, {
			id : 'gridDelBtn',
			text : '',
			margin : '0 3 0 0',
			glyph : 'xf056@FontAwesome',
			iconCls : 'grid-del-btn'
		}, {
			xtype : 'container',
			flex : 1
		}, {
			xtype : 'button',
			glyph : 'xf1c3@FontAwesome',
			id : 'xlsxDown',
			cfg : {
				type : 'excel07',
				ext : 'xlsx'
			},
			iconCls : 'grid-excel-btn',
		} ]
	},

	controller : 'mygrid',
	viewModel : {
		type : 'mygrid'
	},
	id : 'myGrid',
	style : 'border: 1px solid #659DDC; padding: 5px;',
	bodyBorder : false,
	header : false,
	store : 'MyStore',

	columns : [ {
		xtype : 'rownumberer',
		width : 40
	}, {
		xtype : 'gridcolumn',
		hidden : true,
		text : 'V_TYPE'
	}, {
		xtype : 'gridcolumn',
		hidden : true,
		width : 100,
		dataIndex : 'COMP_ID',
		text : ''
	}, {
		xtype : 'gridcolumn',
		id : 'string',
		style : 'text-align: center; font-weight: bold;',
		width : 120,
		sortable : true,
		dataIndex : 'ITEM_CD',
		enableTextSelection : true,
		text : '품목코드',
		editor : {
			xtype : 'textfield',
			allowBlank : false,
			emptyText : 'Double Click',
			editable : false,
			listeners : {
				afterrender : function(c) {
					c.getEl().on('dblclick', function() {
						var popup = Ext.create("Popup.view.WinItemPop");
						popup.show();

						Ext.getCmp('W_TYPE').setValue('B_ITEM_SUPP_HSPF');
						var store = Ext.getStore('WinItemPopStore');
						store.removeAll();
					});
				}
			}
		},
		emptyCellText: '(Double Click)'
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 250,
		dataIndex : 'ITEM_NM',
		text : '품목명',
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		dataIndex : 'BP_CD',
		text : '거래처코드',
		editor : {
			xtype : 'textfield',
			allowBlank : false,
			emptyText : 'Double Click',
			editable : false,
			listeners : {
				afterrender : function(c) {
					c.getEl().on('dblclick', function() {
						var popup = Ext.create("Popup.view.WinMBpPop");
						popup.show();
						
						Ext.getCmp('fieldType').setValue('B_ITEM_SUPP_HSPF');
						var store = Ext.getStore('WinMBpPopStore');
						store.removeAll();
					});
				}
			}
		},
		emptyCellText: '(Double Click)'
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 200,
		dataIndex : 'BP_NM',
		text : '거래처명',
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		align : 'center',
		dataIndex : 'VALID_DT',
		text : '기준일',
//		format : 'Y-m-d',
		editor : {
			xtype : 'datefield',
			allowBlank : false,
			align : 'center',
			format : 'Y-m-d',
		},
		renderer: function(value) {
			return Ext.util.Format.date(value, 'Y-m-d')
		},
		emptyCellText: '(입력)'
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 100,
		align : 'right',
		dataIndex : 'M_PRICE',
		text : '단가',
		editor : {
			xtype : 'numberfield',
			allowBlank : false,
			align : 'right',
			minValue : 0
		},
		renderer: function(value) {
			return Ext.util.Format.number(value, '0,000.00');
		},
		emptyCellText: '(입력)',
        tdCls: 'x-change-cell',
	}, 
	{
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 100,
		dataIndex : 'PO_TYPE',
		text : '발주유형(코드)',
        editor: {
            xtype: 'combobox',
            allowBlank: false,
            displayField: 'DTL_CD',
            valueField: 'DTL_CD',
            store: Ext.create('Ext.data.Store',{
          		autoLoad: true,
          		storeId: 'store1',
          		proxy: {
                      type: 'ajax',
                      extraParams: {
                       	V_MAST_CD: 'MA02',
                       	V_GRID: 'Y'
                      },	
                      api: {
                          read: '/HSPF01/common/sql/Combobox.jsp'
                      },
                      reader: {
                          type: 'json',
                          rootProperty: 'resultList'
                      }
                  }
          	}),
          	listConfig: {
                itemTpl: [
                    '<div>{DTL_NM} ({DTL_CD})</div>'
                ]
            }
        },
	},
	{
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		dataIndex : 'PO_TYPE_NM',
		text : '발주유형',
	},
	{
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 200,
		dataIndex : 'PAY_METH',
		text : '결제방법(코드)',
		editor : {
            xtype: 'combobox',
            allowBlank: false,
            displayField: 'DTL_CD',
            valueField: 'DTL_CD',
            store: Ext.create('Ext.data.Store',{
          		autoLoad: true,
          		storeId: 'store2',
          		proxy: {
                      type: 'ajax',
                      extraParams: {
                       	V_MAST_CD: 'MA03',
                       	V_GRID: 'Y'
                      },	
                      api: {
                          read: '/HSPF01/common/sql/Combobox.jsp'
                      },
                      reader: {
                          type: 'json',
                          rootProperty: 'resultList'
                      }
                  }
          	}),
          	listConfig: {
                itemTpl: [
                    '<div>{DTL_NM} ({DTL_CD})</div>'
                ]
            }
        },
	},
	{
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 200,
		dataIndex : 'PAY_METH_NM',
		text : '결제방법',
	},
	{
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 200,
		dataIndex : 'IN_TERMS',
		text : '가격조건(코드)',
		editor : {
            xtype: 'combobox',
            allowBlank: false,
            displayField: 'DTL_CD',
            valueField: 'DTL_CD',
            store: Ext.create('Ext.data.Store',{
          		autoLoad: true,
          		storeId: 'store3',
          		proxy: {
                      type: 'ajax',
                      extraParams: {
                       	V_MAST_CD: 'MA04',
                       	V_GRID: 'Y'
                      },	
                      api: {
                          read: '/HSPF01/common/sql/Combobox.jsp'
                      },
                      reader: {
                          type: 'json',
                          rootProperty: 'resultList'
                      }
                  }
          	}),
          	listConfig: {
                itemTpl: [
                    '<div>{DTL_NM} ({DTL_CD})</div>'
                ]
            }
        },
	},
	{
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 200,
		dataIndex : 'IN_TERMS_NM',
		text : '가격조건',
	},
	{
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 100,
		dataIndex : 'CUR',
		text : '화폐(코드)',
		editor : {
            xtype: 'combobox',
            allowBlank: false,
            displayField: 'DTL_CD',
            valueField: 'DTL_CD',
            store: Ext.create('Ext.data.Store',{
          		autoLoad: true,
          		storeId: 'store4',
          		proxy: {
                      type: 'ajax',
                      extraParams: {
                       	V_MAST_CD: 'BA04',
                       	V_GRID: 'Y'
                      },	
                      api: {
                          read: '/HSPF01/common/sql/Combobox.jsp'
                      },
                      reader: {
                          type: 'json',
                          rootProperty: 'resultList'
                      }
                  }
          	}),
          	listConfig: {
                itemTpl: [
                    '<div>{DTL_NM} ({DTL_CD})</div>'
                ]
            }
        },
	},
	{
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		dataIndex : 'CUR_NM',
		text : '화폐',
	},
	{
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 150,
		dataIndex : 'VAT_TYPE',
		text : '부가세유형(코드)',
		editor : {
            xtype: 'combobox',
            allowBlank: false,
            displayField: 'DTL_CD',
            valueField: 'DTL_CD',
            store: Ext.create('Ext.data.Store',{
          		autoLoad: true,
          		storeId: 'store5',
          		proxy: {
                      type: 'ajax',
                      extraParams: {
                       	V_MAST_CD: 'BA05',
                       	V_GRID: 'Y'
                      },	
                      api: {
                          read: '/HSPF01/common/sql/Combobox.jsp'
                      },
                      reader: {
                          type: 'json',
                          rootProperty: 'resultList'
                      }
                  }
          	}),
          	listConfig: {
                itemTpl: [
                    '<div>{DTL_NM} ({DTL_CD})</div>'
                ]
            }
        },
	},
	{
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 150,
		dataIndex : 'VAT_TYPE_NM',
		text : '부가세유형',
	}
	
	
	
	],
	selModel : {
		selType : 'checkboxmodel',
		checkOnly: true,
		listeners : {
			select : 'onCheckboxModelSelect',
			deselect : 'onCheckboxModelDeselect'
		}
	},
	plugins : [ {
		ptype : 'gridexporter'
	}, {
		ptype : 'cellediting',
		clicksToEdit : 2,
		listeners : {
			edit : function(editor, context, eOpts) {
				var selModel = Ext.getCmp('myGrid').getSelectionModel();
				selModel.select(context.record, true);
			},
			beforeedit : function(editor, context, eOpts) {
			//기존 등록된 아이템은 단가만 변경할 수 있다.
				if((context.record.phantom == false) 
					     && (context.field == 'ITEM_CD' || context.field == 'BP_CD' || context.field == 'VALID_DT')) {
					context.cancel = true; 
				} else {
					context.cancel = false; 
				}
			},
		}
	},
    {
        ptype: 'clipboard'
    },
	],
    viewConfig: {
    	enableTextSelection: true,
        getRowClass: function(record, index) {
        	return 'color-change';
        },
    },

});