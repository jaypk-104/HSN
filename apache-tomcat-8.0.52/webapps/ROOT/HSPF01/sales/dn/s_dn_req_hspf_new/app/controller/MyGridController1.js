/*
 * File: app/controller/MyGridController1.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_DN_REQ_HSPF_NEW.controller.MyGridController1', {
	extend : 'Ext.app.Controller',

	stores : [ 'MyStore', 'MyStore1', 'WinGrStore' ],

	control : {
		"#grid1AddBtn" : {
			click : 'grid1AddBtnClick'
		},
		"#grid1DelBtn" : {
			click : 'grid1DelBtnClick'
		},
		"#xlsxDown1" : {
			click : 'xlsxDown1Click'
		},
		"#grid1SaveBtn" : {
			click : 'grid1SaveBtnClick'
		},
		"#grid1PrintBtn" : {
			click : 'grid1PrintBtnClick'
		},
		"#reqPrtBtn" : {
			click : 'reqPrtBtnClick'
		},
		"#closePrtBtn" : {
			click : 'closePrtBtnClick'
		},
		"#reqListCombo" : {
			select : 'reqListComboSelect'
		},
		'#grid1EditBtn' : {
			click: 'grid1EditBtnClick',
		},
		"#saveFavorBtn" : {
			click : 'saveFavorBtnClick'
		},
		"#delFavorBtn" : {
			click : 'delFavorBtnClick'
		},
		"#dnIfBtn": {
	        click: 'dnIfBtnClick'
        },
        
        "#myGrid1": {
        	cellDblClick: 'myGrid1CellDblClick'
        }
	},

	grid1AddBtnClick : function(button, e, eOpts) {
		var store1 = this.getMyStore1Store();
		var count = store1.getCount();
		
		var rec = Ext.create('S_DN_REQ_HSPF_NEW.model.MyModel1', {
			DR_DT: new Date(),
			DR_SL_CD: 'A103',
			SL_NM: 'A103',
			DR_REQ_YN: 'N'
		});
		
		store1.insert(0, rec);
		
	},
	
	myGrid1CellDblClick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
		var selModel= Ext.getCmp('myGrid1').getSelectionModel();
		var gridRecord = selModel.getSelection();
		
		
		if(cellIndex == 8) { //고객사
			selModel.select(record, true);
				
			var popup = Ext.create("Popup.view.WinSBpPop");
	        popup.show();
	        var store = Ext.getStore('WinSBpPopStore');
	  		store.removeAll();
	  		Ext.getCmp('fieldType').setValue('S_DN_REQ_HSPF');
	  		Ext.getCmp('rowIndex').setValue(rowIndex);
		}
		
		if(cellIndex == 11) { //품목코드
			selModel.select(record, true);
			
			var popup = Ext.create("Popup.view.WinItemPop");
	        popup.show();
	        var store = Ext.getStore('WinItemPopStore');
			store.removeAll();
			Ext.getCmp('W_TYPE').setValue('S_DN_REQ_HSPF_GRID');
			Ext.getCmp('rowIndex').setValue(rowIndex);
		}
		
		if(cellIndex == 14) { //입고일
			selModel.deselectAll();
			selModel.select(record, true);
			
			var popup = Ext.create("S_DN_REQ_HSPF_NEW.view.WinGrPop");

			var width = Ext.getBody().getViewSize().width;
			var height = Ext.getBody().getViewSize().height - 500;
			popup.setSize(width, height);
			popup.center();
	        popup.show();
	        
			Ext.getCmp('W_GR_ITEM_CD').setValue(record.get('ITEM_CD'));
			Ext.getCmp('W_DR_NO').setValue(record.get('DR_NO'));
			Ext.getCmp('W_DR_SEQ').setValue(record.get('DR_SEQ'));
			
			var grStore = Ext.getStore('WinGrStore');
			grStore.removeAll();
			
			grStore.load({
	    		params: {
	    			V_TYPE: 'GR',
	    			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
					V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
					V_ITEM_CD: Ext.getCmp('W_GR_ITEM_CD').getValue(),
	    		},
	    		callback: function(records,operations,success){
	    		}
	    	});
		}
		
	},

	grid1DelBtnClick : function(button, e, eOpts) {
		var store = this.getMyStoreStore();
		var store1 = this.getMyStore1Store();
		var gridRecord = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		var flag = '';
		var flag1 = '';
		
		if(gridRecord.length > 0) {
			for (var i = 0; i < gridRecord.length; i++) {
				if(gridRecord[i].phantom == true) {
					store1.remove(gridRecord[i]);
					flag1 = 'T';
				} else {
					if (gridRecord[i].data['V_TYPE'] == 'V') {
						if(gridRecord[i].data['DR_REQ_YN'] == 'N') {
							gridRecord[i].set('V_TYPE', 'DD');
						} else if(gridRecord[i].data['DR_REQ_YN'] == 'Y') { //출고지시 생성 후 출고지시삭제
							gridRecord[i].set('V_TYPE', 'DD_Y');
						} 
						
						if(gridRecord[i].data['DN_QTY'] != 0) {
							flag = 'DN';
							break;
						} else {
							msg = '출고요청을 삭제하시겠습니까?<br>(기출력 건의 경우 출고지시서 삭제)';
						}
					}
				}
			}
			
			if(flag1 != 'T') {
				if(flag != 'DN') {
					Ext.MessageBox.confirm('확인', msg, function(btn) {
						if(btn == 'yes') {
							store1.sync({
								params : {
									V_TYPE : 'SYNC',
									V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
									V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
								},
								callback : function(records, operation, success) {
									store.reload();
									store1.reload();
									Ext.toast({
										title : ' ',
										timeout : 1000,
										html : '삭제완료',
										style : 'text-align: center',
										align : 't',
										width : 130,
									});
								}
							});
						}
					});
				} else {
					Ext.Msg.alert('확인', '이미 출고된 지시서입니다. 취소할 수 없습니다.');
				}
			}
			
			
		} else {
			Ext.Msg.alert('확인', '삭제할 내역을 선택하세요.');
		}
		
	},

	xlsxDown1Click : function(button, e, eOpts) {
		var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
		var grid = Ext.getCmp('myGrid1');
		grid.saveDocumentAs({
			type : 'xlsx',
			title : '입고등록', // 엑셀내타이틀
			fileName : currentDate + '.xlsx' // 엑셀파일이름
		});
	},

	grid1SaveBtnClick : function(button, e, eOpts) {
		var store = this.getMyStoreStore();
		var store1 = this.getMyStore1Store();
		var gridRecord = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		var flag = '';
		var flag1 = '';
		
		for (var i = 0; i < gridRecord.length; i++) {
			if (gridRecord[i].phantom == false && gridRecord[i].get('V_TYPE') == 'V') { // 요청수량변경
				gridRecord[i].set('V_TYPE', 'DU');
				flag = 'DU';
			} else if (gridRecord[i].phantom == true) { // 출고지시추가
				gridRecord[i].set('V_TYPE', 'DA');
				flag = 'DA';
			}
		}
		
		if(gridRecord.length > 0) {
			if(flag == 'DU') {
				Ext.MessageBox.confirm('확인', '요청수량,비고,입고일을 변경하시겠습니까?<br>총 [ '+gridRecord.length + ' ] 건', function(btn) {
					if(btn == 'yes') {
						store1.sync({
							params : {
								V_TYPE : 'SYNC',
								V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
								V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							},
							callback : function(records, operation, success) {
								store1.reload();
								Ext.toast({
									title : ' ',
									timeout : 1000,
									html : '저장완료',
									style : 'text-align: center',
									align : 't',
									width : 130,
								});
							}
						});
					}
				});
			} else if(flag == 'DA') {
				for (var i = 0; i < gridRecord.length; i++) {
					if(gridRecord[i].data['S_BP_NM'] == undefined) {
						flag1 = 'F';
						msg = '고객사를 입력하세요.';
						break;
					}
					else if(gridRecord[i].data['ITEM_CD'] == undefined) {
						flag1 = 'F';
						msg = '품목코드를 입력하세요.';
						break;
					}
					else if(gridRecord[i].data['DR_QTY'] == undefined) {
						flag1 = 'F';
						msg = '요청수량을 입력하세요.';
						break;
					}
					else if(gridRecord[i].data['SL_NM'] == undefined) {
						flag1 = 'F';
						msg = '요청창고(TO)를 선택하세요.';
						break;
					}
					else {
						flag1 = 'T';
					}
 				}
				
				if(flag1 == 'T') {
					Ext.MessageBox.confirm('확인', '출고지시정보를 추가하시겠습니까?<br>총 [ '+gridRecord.length + ' ] 건<br><br> (요청창고는 미선택 시 수입물류창고입니다.) ', function(btn) {
						if(btn == 'yes') {
							store1.sync({
								params : {
									V_TYPE : 'SYNC2',
									V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
									V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
								},
								callback : function(records, operation, success) {
									var response = records.operations[0]._response.responseText; //출고요청번호
									
									if(Ext.getCmp('chk').getValue() == true) { //출고지시완료 내역 숨기기
										store1.load({
											params: {
												V_TYPE : 'RS_N',
												V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
												V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
												V_CUST_ORDER_NO: Ext.getCmp('V_CUST_ORDER_NO').getValue(),
												V_DR_DT_FROM: '1999-01-01',
												V_DR_DT_TO: '2999-01-01',
												V_BP_NM_RIGHT: Ext.getCmp('V_BP_NM_RIGHT').getValue(),
												V_SL_CD: Ext.getCmp('V_SL_CD').getValue(),
												V_ITEM_CD: Ext.getCmp('V_ITEM_CD_RIGHT').getValue(),
												V_DD_NO: Ext.getCmp('V_DD_NO_H').getValue(),
												V_DR_NO: response,
											},
											callback: function() {
												
											}
										})
									} else {
										store1.load({
											params: {
												V_TYPE : 'RS',
												V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
												V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
												V_CUST_ORDER_NO: Ext.getCmp('V_CUST_ORDER_NO').getValue(),
												V_DR_DT_FROM: '1999-01-01',
												V_DR_DT_TO: '2999-01-01',
												V_BP_NM_RIGHT: Ext.getCmp('V_BP_NM_RIGHT').getValue(),
												V_SL_CD: Ext.getCmp('V_SL_CD').getValue(),
												V_ITEM_CD: Ext.getCmp('V_ITEM_CD_RIGHT').getValue(),
												V_DD_NO: Ext.getCmp('V_DD_NO_H').getValue(),
												V_DR_NO: response,
											},
											callback: function() {
												
											}
										})
									}
									Ext.toast({
										title : ' ',
										timeout : 1000,
										html : '저장완료',
										style : 'text-align: center',
										align : 't',
										width : 130,
									});
								}, 
							});
						}
					});
				} else {
					Ext.Msg.alert('확인', msg);
				}
			}
		} 
	},
	
	/* 출고지시서 생성정보 팝업의 '출력' 버튼 */
	reqPrtBtnClick : function(button, e, eOpts) {
		var store = this.getMyStoreStore();
		var store1 = this.getMyStore1Store();
		var gridRecord = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		var V_DD_NO = Ext.getCmp('V_DD_NO').getValue();
		var flag = '';
		
		if( Ext.getCmp('V_TO_NM').getValue() == '') {
			flag ='F';
			msg = '수신처를 입력하세요.';
		} else if (Ext.getCmp('V_TO_USR_NM').getValue() == '') {
			flag ='F';
			msg = '수신처 담당자를 입력하세요';
		} else if (Ext.getCmp('V_FROM_NM').getValue() == '') {
			flag ='F';
			msg = '발신처를 입력하세요';
		} else if (Ext.getCmp('V_FROM_USR_NM').getValue() == '') {
			flag ='F';
			msg = '발신처 담당자를 입력하세요';
		} else if (Ext.getCmp('V_FROM_USR_TEL').getValue() == '') {
			flag ='F';
			msg = '발신처 담당자 연락처를 입력하세요';
		} else if (Ext.getCmp('V_DLV_IND_NM').getValue() == '') {
			flag ='F';
			msg = '화주를 입력하세요';
		} else if (Ext.getCmp('V_ARRV_COMP_ADDR').getValue() == '') {
			flag ='F';
			msg = '도착지주소를 입력하세요';
		} else {
			flag ='T';
		} 
		
		if(flag == 'T') {
			if(Ext.getCmp('crudField').getValue() == 'C') {
				for (var i = 0; i < gridRecord.length; i++) {
					if (gridRecord[i].data['V_TYPE'] == 'V') {
						gridRecord[i].set('V_TYPE', 'DI');
					}
				}
				store1.sync({
					params : {
						V_TYPE : 'SYNC',
						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
						V_DD_DT : Ext.getCmp('V_DD_DT').getValue(),
						V_S_REQ_NO : Ext.getCmp('V_S_REQ_NO').getValue(),
						V_TO_NM : Ext.getCmp('V_TO_NM').getValue(),
						V_TO_USR_NM : Ext.getCmp('V_TO_USR_NM').getValue(),
						V_FROM_NM : Ext.getCmp('V_FROM_NM').getValue(),
						V_FROM_USR_NM : Ext.getCmp('V_FROM_USR_NM').getValue(),
						V_FROM_USR_TEL : Ext.getCmp('V_FROM_USR_TEL').getValue(),
						V_TO_USR_TEL : Ext.getCmp('V_TO_USR_TEL').getValue(),
						V_DLV_IND_NM : Ext.getCmp('V_DLV_IND_NM').getValue(),
						V_ARRV_COMP_NM : Ext.getCmp('V_ARRV_COMP_NM').getValue(),
						V_ARRV_COMP_ADDR : Ext.getCmp('V_ARRV_COMP_ADDR').getValue(),
						V_REQ_TEXT : Ext.getCmp('V_REQ_TEXT').getValue(),
					},
					callback : function(records, operation, success) {
						var V_DD_NO = records.operations[0]._response.responseText;

						var myMask = new Ext.LoadMask(Ext.getCmp('myWin') , {msg:"출고지시서 생성중"});
				    	myMask.show();
				    	
						setTimeout(function() {
							
							var win = Ext.getCmp('myWin');
							win.destroy();
							
							var myWin = new Ext.Window({
								title : '출고지시서',
								html : '<iframe name="xxx" border =0 src="http://123.142.124.170:8080/aireport/on_server/DN_DIRECT_PRINT.jsp?V_TYPE=S&V_DD_NO='+V_DD_NO+'&V_REQ_TEXT='+V_DD_NO+'" width="100%" height="100%"></iframe>',
								width : 1000,
								height : 768,
								modal : true
							});
							myWin.show();
							myWin.setSize(Ext.getBody().getViewSize());
							myWin.setPagePosition(0, 0);

							store1.reload();
							
							
						}, 3000);
					},
					success: function(response) {
					}
				});
			} else if (Ext.getCmp('crudField').getValue() == 'U') {
				Ext.Ajax.request({
					url : 'sql/s_dd_make_hspf.jsp',
					method : 'post',
					params : {
						V_TYPE : 'U', // 수정
						V_DD_NO : gridRecord[0].data['DD_NO'],
						V_DD_SEQ : gridRecord[0].data['DD_SEQ'],
						V_DD_DT : Ext.getCmp('V_DD_DT').getValue(),
						V_S_REQ_NO : Ext.getCmp('V_S_REQ_NO').getValue(),
						V_TO_NM : Ext.getCmp('V_TO_NM').getValue(),
						V_TO_USR_NM : Ext.getCmp('V_TO_USR_NM').getValue(),
						V_FROM_NM : Ext.getCmp('V_FROM_NM').getValue(),
						V_FROM_USR_NM : Ext.getCmp('V_FROM_USR_NM').getValue(),
						V_FROM_USR_TEL : Ext.getCmp('V_FROM_USR_TEL').getValue(),
						V_TO_USR_TEL : Ext.getCmp('V_TO_USR_TEL').getValue(),
						V_DLV_IND_NM : Ext.getCmp('V_DLV_IND_NM').getValue(),
						V_ARRV_COMP_NM : Ext.getCmp('V_ARRV_COMP_NM').getValue(),
						V_ARRV_COMP_ADDR : Ext.getCmp('V_ARRV_COMP_ADDR').getValue(),
						V_REQ_TEXT : Ext.getCmp('V_REQ_TEXT').getValue(),
						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
					},
					callback : function(records, operations, success) {
						var myMask = new Ext.LoadMask(Ext.getCmp('myWin') , {msg:"출고지시서 생성중"});
				    	myMask.show();
				    	
						setTimeout(function() {
							
							var win = Ext.getCmp('myWin');
							win.destroy();
							
							var myWin = new Ext.Window({
								title : '출고지시서',
								html : '<iframe name="xxx" border =0 src="http://123.142.124.170:8080/aireport/on_server/DN_DIRECT_PRINT.jsp?V_TYPE=S&V_DD_NO='+V_DD_NO+'&V_REQ_TEXT='+V_DD_NO+'" width="100%" height="100%"></iframe>',
								width : 1000,
								height : 768,
								modal : true
							});
							myWin.show();
							myWin.setSize(Ext.getBody().getViewSize());
							myWin.setPagePosition(0, 0);

							store1.reload();
							
						}, 1500);
					},
					success : function(response) {
						
					},
					scope : this
				});

			}
		} else {
			Ext.Msg.alert('확인', msg);
		}
		
		
	},
	
	/* 프린트 버튼 (주황색) */
	grid1PrintBtnClick : function(button, e, eOpts) {
		var store = this.getMyStoreStore();
		var store1 = this.getMyStore1Store();
		var gridRecord = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		var V_DD_NO = gridRecord[0].data['DD_NO'];
		var myMask = new Ext.LoadMask(Ext.getCmp('myGrid1') , {msg:"출고지시서 생성중"});
    	
		if(gridRecord.length > 0) {
			if(gridRecord[0].data['ITEM_CD'].substring(0,1) == 'B') {
				// 출고지시서 출력만하기
				if (gridRecord[0].get('DR_REQ_YN') == 'Y') {
					for(var i=0; i<gridRecord.length; i++) {
						if(gridRecord[i].data['V_TYPE'] == 'V') {
							gridRecord[i].set('V_TYPE', 'RD');
							if(i > 0) {
								if(gridRecord[i].data['DD_NO'] != gridRecord[i-1].data['DD_NO']) {
									V_DD_NO += '<>'+gridRecord[i].data['DD_NO'];
								} 
							}
						}
					}
					store1.sync({
						params : {
							V_TYPE : 'SYNC',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
						},
						callback : function(records, operation, success) {
							var V_DD_NO = records.operations[0]._response.responseText;
							var myWin = new Ext.Window({
								title : '출고지시서',
								html : '<iframe name="xxx" border =0 src="http://123.142.124.170:8080/aireport/on_server/DN_DIRECT_PRINT.jsp?V_TYPE=S&V_DD_NO='+V_DD_NO+'&V_REQ_TEXT='+V_DD_NO+'" width="100%" height="100%"></iframe>',
								width : 1000,
								height : 768,
								modal : true
							});
							myWin.show();
							myWin.setSize(Ext.getBody().getViewSize());
							myWin.setPagePosition(0, 0);

							store1.reload();
						},
						success: function(response) {
							
						}
					});
					
				} else if (gridRecord[0].get('DR_REQ_YN') == 'N') { // 처음출력
					Ext.MessageBox.confirm('확인', '총 [ '+ gridRecord.length + ' ] 건 출고요청하시겠습니까?', function(btn) {
						if(btn == 'yes') {
							var popup = Ext.create("S_DN_REQ_HSPF_NEW.view.MyWindow");
							popup.show();
							Ext.getCmp('crudField').setValue('C');
						}
					});
				}
					
			} else {
				Ext.Msg.alert('확인', '해당 품목정보가 화승플랫폼 시스템에 존재하지 않습니다. <br>관리자문의 바랍니다.');
			}
		} else {
			Ext.Msg.alert('확인', '출력할 내역을 선택하세요.');
		}
		
	},
	

	grid1EditBtnClick :  function(button, e, eOpts) {
		var store = this.getMyStoreStore();
		var store1 = this.getMyStore1Store();
		var gridRecord = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		var V_DD_NO = gridRecord[0].data['DD_NO'];
		var V_DD_SEQ = gridRecord[0].data['DD_SEQ'];
		
		if(gridRecord.length > 0) {
			if(gridRecord[0].data['DR_REQ_YN'] == 'Y') {
				Ext.Ajax.request({
					url : 'sql/s_dd_make_hspf.jsp',
					method : 'post',
					params : {
						V_TYPE : 'S', // 생성
						V_DD_NO : V_DD_NO,
						V_DD_SEQ : V_DD_SEQ,
						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
					},
					callback : function(records, operations, success) {
					},
					success : function(response) {
						var result = response.responseText;
						var jsonResult = Ext.JSON.decode(response.responseText);
						var popup = Ext.create("S_DN_REQ_HSPF_NEW.view.MyWindow");
						popup.show();
						
						Ext.getCmp('crudField').setValue('U');
						Ext.getCmp('saveFavorBtn').setDisabled(true);
						Ext.getCmp('delFavorBtn').setDisabled(true);
						Ext.getCmp('V_DD_NO').setValue(V_DD_NO);
						
						Ext.getCmp('V_DD_NO').setValue(V_DD_NO);
						Ext.getCmp('V_S_REQ_NO').setValue(jsonResult.resultList["0"].S_REQ_NO);
						Ext.getCmp('V_TO_NM').setValue(jsonResult.resultList["0"].TO_NM);
						Ext.getCmp('V_FROM_NM').setValue(jsonResult.resultList["0"].FROM_NM);
						Ext.getCmp('V_TO_USR_NM').setValue(jsonResult.resultList["0"].TO_USR_NM);
						Ext.getCmp('V_FROM_USR_NM').setValue(jsonResult.resultList["0"].FROM_USR_NM);
						Ext.getCmp('V_FROM_USR_TEL').setValue(jsonResult.resultList["0"].FROM_USR_TEL);
						Ext.getCmp('V_TO_USR_TEL').setValue(jsonResult.resultList["0"].TO_USR_TEL);
						Ext.getCmp('V_DLV_IND_NM').setValue(jsonResult.resultList["0"].DLV_IND_NM);
						Ext.getCmp('V_ARRV_COMP_NM').setValue(jsonResult.resultList["0"].ARRV_COMP_NM);
						Ext.getCmp('V_ARRV_COMP_ADDR').setValue(jsonResult.resultList["0"].ARRV_COMP_ADDR);
						Ext.getCmp('V_REQ_TEXT').setValue(jsonResult.resultList["0"].REQ_TEXT);
					},
					scope : this
				});
			}
		}

	},

	/* 자동완성 콤보박스 */
	reqListComboSelect : function(ele, rec, idx) {
		Ext.create('Ext.data.Store', {
			autoLoad : true,
			storeId : 'ComboStore',
			proxy : {
				type : 'ajax',
				extraParams : {
					V_MAST_CD : 'DN_REQ_DETAIL',
				},
				api : {
					read : '/HSPF01/common/sql/Combobox.jsp'
				},
				reader : {
					type : 'json',
					rootProperty : 'resultList'
				}
			}
		});

		var comboStore = Ext.getStore('ComboStore');
		comboStore.load({
			params : {
				V_MAST_CD : 'DN_REQ_DETAIL',
				V_PARAM1 : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_PARAM2 : Ext.getCmp('reqListCombo').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
			},
			callback : function(records, operations, success) {
				if (records.length > 0) {
					Ext.getCmp('V_TO_NM').setValue(records[0].get('TO_NM'));
					Ext.getCmp('V_FROM_NM').setValue(records[0].get('FROM_NM'));
					Ext.getCmp('V_TO_USR_NM').setValue(records[0].get('TO_USR_NM'));
					Ext.getCmp('V_FROM_USR_NM').setValue(records[0].get('FROM_USR_NM'));
					Ext.getCmp('V_DLV_IND_NM').setValue(records[0].get('DLV_IND_NM'));
					Ext.getCmp('V_FROM_USR_TEL').setValue(records[0].get('FROM_USR_TEL'));
					Ext.getCmp('V_TO_USR_TEL').setValue(records[0].get('TO_USR_TEL'));
					Ext.getCmp('V_ARRV_COMP_NM').setValue(records[0].get('ARRV_COMP_NM'));
					Ext.getCmp('V_ARRV_COMP_ADDR').setValue(records[0].get('ARRV_COMP_ADDR'));
					Ext.getCmp('V_REQ_TEXT').setValue(records[0].get('REQ_TEXT'));
				}
			}
		});
	},

	closePrtBtnClick : function(button, e, eOpts) {
		var win = Ext.getCmp('myWin');
		win.destroy();
	},
	
	saveFavorBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('store1');
		var title = Ext.getCmp('reqListCombo').rawValue;
		var V_TYPE = '';
		
		if(title == '') {
			Ext.Msg.alert('확인', '자동완성 이름을 입력하세요');
		}
		else if (Ext.getCmp('V_TO_NM').getValue() == '' &&
				 Ext.getCmp('V_FROM_NM').getValue() == '') {
			Ext.Msg.alert('확인', '수신처 또는 발신처 정보를 입력하세요.');
		} else {

			if(store.getCount() > 0) {
				store.each(function(record, idx) {
					if(store.getAt(idx).get('TITLE') == title) {
						V_TYPE = 'U'; //중복된 이름이 존재하면, UDPATE
					} else {
						V_TYPE = 'I'; //중복된 이름이 존재하지 않으면, INSERT
					}
				});
			} else {
				V_TYPE = 'I';
			}
			
			
			Ext.MessageBox.confirm('확인', '저장하시겠습니까?', function(btn) {
				if(btn == 'yes') {
					Ext.Ajax.request({
						url : 'sql/s_dn_base_hspf.jsp',
						method : 'post',
						params : {
							V_TYPE :  V_TYPE,
							V_TITLE : Ext.getCmp('reqListCombo').rawValue,
							V_MGM_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_TO_NM : Ext.getCmp('V_TO_NM').getValue(),
							V_TO_USR_NM : Ext.getCmp('V_TO_USR_NM').getValue(),
							V_FROM_NM : Ext.getCmp('V_FROM_NM').getValue(),
							V_FROM_USR_NM : Ext.getCmp('V_FROM_USR_NM').getValue(),
							V_FROM_USR_TEL : Ext.getCmp('V_FROM_USR_TEL').getValue(),
							V_TO_USR_TEL : Ext.getCmp('V_TO_USR_TEL').getValue(),
							V_ARRV_COMP_NM : Ext.getCmp('V_ARRV_COMP_NM').getValue(),
							V_ARRV_COMP_ADDR : Ext.getCmp('V_ARRV_COMP_ADDR').getValue(),
							V_DLV_IND_NM : Ext.getCmp('V_DLV_IND_NM').getValue(),
							V_REQ_TEXT : Ext.getCmp('V_REQ_TEXT').getValue(),
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
						},
						callback : function(records, operations, success) {
							
						},
						success : function(response) {
							store.reload();
							Ext.toast({
								title : ' ',
								timeout : 1000,
								html : '저장완료',
								style : 'text-align: center',
								align : 'b',
								width : 130,
							});
						},
						scope : this
					});
				}
			});
		}
	},

	/* 출고지시서 생성정보 팝업의 '-' 버튼 */
	delFavorBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('store1');
		var title = Ext.getCmp('reqListCombo').rawValue;
		
		if(title == '') {
			Ext.Msg.alert('확인', '삭제할 자동완성 항목을 선택하세요');
		} else {
			Ext.MessageBox.confirm('확인', '저장된 자동완성 항목을 삭제하시겠습니까?', function(btn) {
				if(btn == 'yes') {
					Ext.Ajax.request({
						url : 'sql/s_dn_base_hspf.jsp',
						method : 'post',
						params : {
							V_TYPE : 'D',
							V_TITLE : Ext.getCmp('reqListCombo').rawValue,
							V_MGM_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_TO_NM : Ext.getCmp('V_TO_NM').getValue(),
							V_TO_USR_NM : Ext.getCmp('V_TO_USR_NM').getValue(),
							V_FROM_NM : Ext.getCmp('V_FROM_NM').getValue(),
							V_FROM_USR_NM : Ext.getCmp('V_FROM_USR_NM').getValue(),
							V_FROM_USR_TEL : Ext.getCmp('V_FROM_USR_TEL').getValue(),
							V_TO_USR_TEL : Ext.getCmp('V_TO_USR_TEL').getValue(),
							V_ARRV_COMP_NM : Ext.getCmp('V_ARRV_COMP_NM').getValue(),
							V_ARRV_COMP_ADDR : Ext.getCmp('V_ARRV_COMP_ADDR').getValue(),
							V_DLV_IND_NM : Ext.getCmp('V_DLV_IND_NM').getValue(),
							V_REQ_TEXT : Ext.getCmp('V_REQ_TEXT').getValue(),
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
						},
						callback : function(records, operations, success) {
							
						},
						success : function(response) {
							
							Ext.getCmp('reqListCombo').setValue('');
							Ext.getCmp('V_TO_NM').setValue('');
							Ext.getCmp('V_TO_USR_NM').setValue('');
							Ext.getCmp('V_FROM_NM').setValue('');
							Ext.getCmp('V_FROM_USR_NM').setValue('');
							Ext.getCmp('V_FROM_USR_TEL').setValue('');
							Ext.getCmp('V_TO_USR_TEL').setValue('');
							Ext.getCmp('V_ARRV_COMP_NM').setValue('');
							Ext.getCmp('V_ARRV_COMP_ADDR').setValue('');
							Ext.getCmp('V_DLV_IND_NM').setValue('');
							Ext.getCmp('V_REQ_TEXT').setValue('');
							
							store.reload();
							Ext.toast({
								title : ' ',
								timeout : 1000,
								html : '삭제완료',
								style : 'text-align: center',
								align : 'b',
								width : 130,
							});
						},
						scope : this
					});
				}
			});
		}
	},
	
	/*우측 생산출고인터페이스 버튼*/
	dnIfBtnClick: function(button, e, eOpts) {
    	var store1 = Ext.getStore('MyStore1');
    	var myMask = new Ext.LoadMask(Ext.getCmp('myGrid1') , {msg:"인터페이스 데이터 불러오기 중"});
    	myMask.show();
    	/* M_PROD_PUR_MAT_HSPF */
    	Ext.Ajax.request({
    		url:'sql/s_dn_req_if_anylink_hspf.jsp',
    		method: 'post',
    		params: {
    			V_TYPE : 'PROD_REQ',
    			V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
    		},
    		callback : function(records,operations,success){
    			myMask.hide();
    	    },
    	    success : function(response) {
    	    	
    	    	var jsonResult = Ext.JSON.decode(response.responseText);
				
    	    	var tryCnt = jsonResult.tryCnt;
				var finCnt = jsonResult.finCnt;
				var resMSG = jsonResult.resMSG;
				var resDATE = jsonResult.resDATE;
				var resString = jsonResult.resString;
				
				if(resString == 'SUCCESS' || resString == 'DUP') {
					Ext.Ajax.request({
			    		url:'sql/s_dn_req_hspf_new.jsp',
			    		method: 'post',
			    		params: {
			    			V_TYPE : 'PO_MAPPING',
			    			V_DR_DT : Ext.getCmp('V_DR_DT').getValue(),
			    			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
			    			V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
			    		},
			    		callback : function(records,operations,success){
			    			
			    	    },
			    	    success : function(response) {
			    	    	
			    	    	if(resString == 'DUP') {
			    	    		Ext.Msg.alert('확인', '총 [ ' + finCnt + ' ] 건 전송 완료');
			    	    		myMask.hide();
			    	    	} else if(resString == 'SUCCESS') {
								Ext.Msg.alert('확인', '총 [ ' + finCnt + ' ] 건 전송 완료');
	    	    				myMask.hide();
							} else if (resMSG == 'ERROR'){
								Ext.Msg.alert('확인', '총 [ ' + tryCnt + ' ] 건 중 [ ' + finCnt + ' ] 건 전송 완료 <br>관리자 문의요망<br>'  + resString + '<br>' + resDATE);
								myMask.hide();
							} else {
								Ext.Msg.alert('확인', '인터페이스 오류, 관리자 문의요망<br>'  + resString + '<br>' + resDATE);
								myMask.hide();
							}
			    	    },
			    		scope: this
			    	});
				} else {
					Ext.Msg.alert('확인', '인터페이스 오류(관리자 문의요망)');
					
				}
    	    },
    		scope: this
    	});
    },
	
});
