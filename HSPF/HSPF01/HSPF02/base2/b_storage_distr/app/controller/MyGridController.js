/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('B_STORAGE_DISTR.controller.MyGridController', {
    extend: 'Ext.app.Controller',

    control: {
        "#gridAddBtn": {
            click: 'gridAddBtnClick'
        },
        "#gridDelBtn": {
            click: 'gridDelBtnClick'
        },
        "#xlsxDown": {
            click: 'xlsxDownClick'
        }
    },

    gridAddBtnClick: function(button, e, eOpts) {

    	if(Ext.getCmp('V_SL_CD').getValue() == null || Ext.getCmp('V_SL_CD').getValue() == undefined) {
    		Ext.Msg.alert('확인', '창고코드를 입력하세요.');
    	} else if (Ext.getCmp('V_SL_NM').getValue() == '') {
    		Ext.Msg.alert('확인', '창고명을 입력하세요.');
    	} else {   
    		var popup = Ext.create("B_STORAGE_DISTR.view.WinAddRow");
	        popup.show();
	        Ext.getCmp('rowCount').setValue(1);
        }
    },

    gridDelBtnClick: function(button, e, eOpts) {
        var store = Ext.getStore('MyStore');
        var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();

    	if(gridRecord.length > 0) {
    		Ext.Msg.confirm('확인','삭제하시겠습니까?', function(button){
    			if(button == 'yes') {
    				for(var i=0; i<gridRecord.length; i++) {
    					if(gridRecord[i].get('V_TYPE') == 'V') {
    						gridRecord[i].set('V_TYPE', 'D');
    					}
    				}
    				
    		    	store.sync({
    					params: {
    						V_TYPE : 'SYNC',
    						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
    						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
    						V_SL_DT : Ext.getCmp('V_SL_DT').getValue(),
    					},
    		    		callback: function(records, operation, success) {
//    		    			store.reload();

				    		var tbController = B_STORAGE_DISTR.app.getController("TbButtonController");
				    		tbController.selBtnClick();
    					}
    		    	});
    			}
    		});
    	}
    },

    xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
            	var grid = Ext.getCmp('myGrid');
            	grid.saveDocumentAs({
                    type: 'xlsx',
                    title: 'test', //엑셀내타이틀
                    fileName: currentDate+'.xlsx' //엑셀파일이름
        		});
    }

});
