/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_IMP_CHK_TOT_HSPF.controller.MyGridController', {
	extend : 'Ext.app.Controller',

	stores : [ 'MyStore' ],

	control : {
		"#gridAddBtn" : {
			click : 'gridAddBtnClick'
		},
		"#gridDelBtn" : {
			click : 'gridDelBtnClick'
		},
		"#gridExecBtn" : {
			click : 'gridExecBtnClick'
		},
		"#xlsxDown" : {
			click : 'xlsxDownClick'
		},
		"#xlsxDown2" : {
			click : 'xlsxDown2Click'
		},
	},

	gridAddBtnClick : function(button, e, eOpts) {
		var popup = Ext.create("M_IMP_CHK_TOT_HSPF.view.WinAddRow");
		popup.show();
		Ext.getCmp('rowCount').setValue(1);
	},

	gridDelBtnClick : function(button, e, eOpts) {
	},

	gridExecBtnClick : function(button, e, eOpts) {
		let execDate = Ext.getCmp('V_DATE').getValue();
		if (execDate.getFullYear() < 2020 || (execDate.getFullYear() <= 2020 && execDate.getMonth() + 1 < 5)) {
			Ext.Msg.alert('확인', '2020년 5월부터 실행 가능합니다.');
			return;
		}

		Ext.Msg.confirm('확인', '실행하시겠습니까?', function(button) {
			if (button == 'yes') {
				var myMask = new Ext.LoadMask(Ext.getCmp('myGrid'), {
					msg : "Please wait..."
				});
				myMask.show();

				Ext.Ajax.request({
					url : 'sql/M_IMP_CHK_TOT_HSPF.jsp',
					method : 'post',
					timeout : 60000,
					params : {
						V_TYPE : 'C',
						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
						V_DATE : Ext.getCmp('V_DATE').getValue(),
						V_ITEM_CD : Ext.getCmp('V_ITEM_CD').getValue(),
					},
					callback : function() {
						myMask.hide();
					},
					success : function(response) {
						myMask.hide();

						Ext.toast({
							title : ' ',
							timeout : 1000,
							html : '실행완료',
							style : 'text-align: center',
							align : 't',
							width : 130,
						});

						var tbController = M_IMP_CHK_TOT_HSPF.app.getController("TbButtonController");
						tbController.selBtnClick();
					}
				})
			}
		});
	},

	xlsxDownClick : function(button, e, eOpts) {
		var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
		var grid = Ext.getCmp('myGrid');
		grid.saveDocumentAs({
			type : 'xlsx',
			title : '수입자재일정관리', // 엑셀내타이틀
			fileName : currentDate + '.xlsx' // 엑셀파일이름
		});
	},

	xlsxDown2Click : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
		
		var workbook = Ext.create('Ext.exporter.file.excel.Workbook', {
			title : '수입자재일정관리',
			author : 'HDH'
		}), table = workbook.addWorksheet({
			name : 'Sheet 1'
		}).addTable();

		// add formatting to the first two columns of the spreadsheet
		table.addColumn({
			width : 120,
			styleId : workbook.addStyle({
				format : 'Text'
			}).getId()
		});
		table.addColumn({
			width : 120,
			styleId : workbook.addStyle({
				format : 'YYYY-MM-DD'
			}).getId()
		});
		table.addColumn({
			width : 100,
			styleId : workbook.addStyle({
				format : '#,##0.00'
			}).getId()
		});
		table.addColumn({
			width : 100,
			styleId : workbook.addStyle({
				format : '#,##0.00'
			}).getId()
		});
		table.addColumn({
			width : 100,
			styleId : workbook.addStyle({
				format : '#,##0.00'
			}).getId()
		});
		
		// add rows and cells with data
		table.addRow().addCell([ 
			{
				value : '담당자'
			}, 
			{
				value : '차기발주시기'
			}, 
			{
				value : '계열사'
			}, 
			{
				value : '합계'
			}, 
			{
				value : '테스트'
			}  
		]);
		
		debugger
		store.each(function(rec, idx) {
			table.addRow().addCell([ 
				{
					value : rec.get('USR_NM')
				},
				{
					value : rec.get('FT_PO_DT')
				}, 
				{
					value : rec.get('AVL_MT_USE_QTY')
				},
				{
					value : rec.get('AVL_TOT_USE_QTY')
				},
				{
//					formula : '=SUM(C'+idx2+':D'+idx2+')'
					formula : '=SUM(R[0]C[-2]:R[0]C[-1])'
				} 
			]);
		});

		// add a formula on the 4th row which sums up the previous 2 rows
//		table.addRow().addCell({
//			index : 2,
//			formula : '=SUM(R[-2]C:R[-1]C)'
//		});

		// save the document in the browser
//		Ext.exporter.File.saveAs(workbook.render(), currentDate + '.xlsx', 'UTF-8');
		Ext.exporter.File.saveAs(workbook.render(), 'document.xml', 'UTF-8');
	},

});
