/*
 * File: app/controller/TbButtonController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_COL_DISTB.controller.TbButtonController', {
    extend: 'Ext.app.Controller',
    stores: ['MyStore', 'MyStore1', 'MyStore2', 'MyStore3', 'PopStore2'],
    control: {
        "#selBtn": {
            click: 'selBtnClick'
        },
        "#saveBtn": {
            click: 'saveBtnClick'
        },
        "#delBtn": {
            click: 'delBtnClick'
        },
        "#clrBtn": {
        	click: 'clrBtnClick'
        },
        "#clsBtn": {
            click: 'clsBtnClick'
        },
        "myform textfield[name=search_field1]": {
            specialkey: 'tfEnter'
        },
    },

    selBtnClick: function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store2 = Ext.getStore('MyStore2');
		var store3 = Ext.getStore('MyStore3');
		
		Ext.Ajax.request({
			url:'sql/M_COL_DISTB.jsp',
			method: 'post',
			params: {
				V_TYPE: 'SH',  
				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				V_MAST_DB_NO : Ext.getCmp('V_MAST_DB_NO').getValue(),
			},
			callback : function(records,operations,success){
			},
    		success : function(response) {
				var res = response.responseText;
				if(res.match('Exception')) {
					Ext.Msg.alert('확인', res);
				} else {
					res = Ext.JSON.decode(response.responseText).resultList[0];
					
					if(res){
						Ext.getCmp('V_COL_DT').setValue(res.COL_DT);
						Ext.getCmp('V_M_BP_CD').setValue(res.M_BP_CD);
						Ext.getCmp('V_M_BP_NM').setValue(res.M_BP_NM);
						Ext.getCmp('V_S_BP_CD').setValue(res.S_BP_CD);
						Ext.getCmp('V_S_BP_NM').setValue(res.S_BP_NM);
						Ext.getCmp('V_PO_NO').setValue(res.PO_NO);
						Ext.getCmp('V_APPROV_NO').setValue(res.APPROV_NO);
						Ext.getCmp('V_REF_COL_NO').setValue(res.REF_COL_NO);
						Ext.getCmp('V_COL_MGM_NO').setValue(res.COL_MGM_NO);
						Ext.getCmp('V_COL_TITLE').setValue(res.COL_TITLE);
						Ext.getCmp('V_COL_TOT_AMT').setValue(res.COL_TOT_AMT);
						Ext.getCmp('V_COL_TYPE').setValue(res.COL_TYPE);
						Ext.getCmp('V_CLS_AR_NO').setValue(res.CLS_AR_NO);
						
						store.load({
							params: {
								V_TYPE: 'SD',
								V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
								V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
								V_MAST_DB_NO : Ext.getCmp('V_MAST_DB_NO').getValue(),
							},
							callback: function(records){
								
							}
						});
						
						store2.load({
							params: {
								V_TYPE: 'SD2',
								V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
								V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
								V_MAST_DB_NO : Ext.getCmp('V_MAST_DB_NO').getValue(),
								V_PO_NO : Ext.getCmp('V_PO_NO').getValue(),
							},
							callback: function(records){
								
							}
						});
						
						store3.load({
							params: {
								V_TYPE: 'COL_S',
								V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
								V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
								V_CLS_AR_NO : Ext.getCmp('V_CLS_AR_NO').getValue(),
								V_MAST_DB_NO : Ext.getCmp('V_MAST_DB_NO').getValue(),
							},
							callback: function(records){
								
							}
						});
					}
				}
			},
    	});
		
    	
    },

    saveBtnClick: function(button, e, eOpts) {
    	var store = Ext.getStore('MyStore');
    	var myStore3 = Ext.getStore('MyStore3');
    	var flag = '';
    	var msg = '';
    	var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
    	
    	if(Ext.getCmp('V_PO_NO').getValue() == '' || Ext.getCmp('V_PO_NO').getValue() == null) {
			flag = 'F';
			msg = '발주번호를 입력하세요.';
		} else if(Ext.getCmp('V_COL_DT').getValue() == '' || Ext.getCmp('V_COL_DT').getValue() == null) {
			flag = 'F';
			msg = '설정일자를 입력하세요.';
		} else if(Ext.getCmp('V_COL_TITLE').getValue() == '' || Ext.getCmp('V_COL_TITLE').getValue() == null) {
			flag = 'F';
			msg = '거래진행명을 입력하세요.';
		} else if(Ext.getCmp('V_M_BP_CD').getValue() == '' || Ext.getCmp('V_M_BP_CD').getValue() == null) {
			flag = 'F';
			msg = '매입처를 선택하세요.';
		} else if(Ext.getCmp('V_S_BP_CD').getValue() == '' || Ext.getCmp('V_S_BP_CD').getValue() == null) {
			flag = 'F';
			msg = '매출처를 선택하세요.';
		} else {
			if(gridRecord.length > 0) {
			for(var i = 0; i < gridRecord.length; i++) {
				if(gridRecord[i].get('COL_TYPE') == '' || gridRecord[i].get('COL_TYPE') == null) {
					flag = 'F';
					msg = '담보유형을 선택하세요.';
					break; 
				} else {
					flag = 'T';
				}
			} 
			} else {
				flag = 'F';
				msg = '담보등록 할 내역을 선택하세요.';
			}
		}
    	
    	var makeArData = false;
    	myStore3.each(function(record, idx) {
			if(record.get('V_TYPE') == 'I') makeArData = true;
		});
    	
    	if(flag == 'T') {
    		
    		Ext.Ajax.request({
        		url:'sql/M_COL_DISTB.jsp',
        		method: 'post',
        		params: {
        			V_TYPE: 'HI',  
        			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
        			V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
        			V_MAST_DB_NO : Ext.getCmp('V_MAST_DB_NO').getValue(),
        			V_COL_TYPE : Ext.getCmp('V_COL_TYPE').getValue(),
        			V_PO_NO : Ext.getCmp('V_PO_NO').getValue(),
        			V_APPROV_NO : Ext.getCmp('V_APPROV_NO').getValue(),
        			V_COL_DT : Ext.getCmp('V_COL_DT').getValue(),
        			V_COL_MGM_NO : Ext.getCmp('V_COL_MGM_NO').getValue(),
        			V_REF_COL_NO : Ext.getCmp('V_REF_COL_NO').getValue(),
        			V_COL_TITLE : Ext.getCmp('V_COL_TITLE').getValue(),
        			V_M_BP_CD : Ext.getCmp('V_M_BP_CD').getValue(),
        			V_S_BP_CD : Ext.getCmp('V_S_BP_CD').getValue(),
        			V_COL_TOT_AMT : Ext.getCmp('V_COL_TOT_AMT').getValue(),
        			V_COL_AVL_AMT : Ext.getCmp('V_COL_AVL_AMT').getValue(),
        		},
        		callback : function(records,operations,success){
    			},
        	    success : function(response) {
        	    	var res = response.responseText;
        	    	
        	    	if(res.match('Exception')) {
    					Ext.Msg.alert('확인', res);
    				} else if (res.match('DL')){
    					Ext.getCmp('V_MAST_DB_NO').setValue(res);
    					
    					var BO_AVL_AMT = 0;
    					var BU_AVL_AMT = 0;

    					var BO_AMT = 0;
    					var BU_AMT = 0;
    					
    					var flag = '';
    					
    					store.each(function(record, idx) {
    		    			if(record.phantom == true && record.get('V_TYPE') == 'V') {
    		    				record.set('V_TYPE', 'I');
    		    			} else if (record.phantom == false && record.get('V_TYPE') == 'V' ) {
    		    				record.set('V_TYPE', 'U');
    		    			}
    		    			
    		    			//보증금, 부동산 잔액 검증
    		    			if(record.get('COL_TYPE') == 'B') { // 보증보험
    		    				BO_AVL_AMT = Number(record.get('COL_AVL_AMT'));
    		    				BO_AMT += Number(record.get('COL_AMT'));
    		    			}
    		    			else if(record.get('COL_TYPE') == 'D') { // 부동산
    		    				BU_AVL_AMT = Number(record.get('COL_AVL_AMT'));
    		    				BU_AMT += Number(record.get('COL_AMT'));
    		    			}
    		    		});
//    					
    					if(BO_AVL_AMT < BO_AMT) {
    						flag = 'F';
    						msg = '보증보험 설정금액이 설정가능금액을 초과합니다.'
    					} else if(BU_AVL_AMT < BU_AMT) {
    						flag = 'F';
    						msg = '부동산 설정금액이 설정가능금액을 초과합니다.'
    					} else {
    						flag = 'T';
    					}
    					
    					if(flag == 'T') {
    						store.sync({
        		    			params : {
        		    				V_TYPE : 'SYNC',
        		    				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
        		    				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
        		    				V_MAST_DB_NO: Ext.getCmp('V_MAST_DB_NO').getValue()
        		    			},
        		    			callback : function(records, operation, success) {
        		    				var res = records.operations[0]._response.responseText;
        		    				
        		    				if(res.match('Exception')) {
        		    					Ext.Msg.alert('확인', res);
        		    				} else {
        		    					var tbController = M_COL_DISTB.app.getController("TbButtonController");
        		    					
        		    					if(makeArData){
        		    						tbController.makeArData();
        		    					} else {
        						    		tbController.selBtnClick();
        		    					}
        		    				}
        		    			}, 
        		    			success: function() {
        		    			}
        		    		});
        		    		
        		    		Ext.toast({
    							title : ' ',
    							timeout : 1000,
    							html : '저장완료',
    							style : 'text-align: center',
    							align : 't',
    							width : 130,
    						});
        		    		
        		    		Ext.getCmp('tempGlCfmBtn').setDisabled(false);
        		    		
    					} else {
    						Ext.Msg.alert('확인', msg);
    					}
    					
    				} else if (res.match('success')) {

    					var BO_AVL_AMT = 0;
    					var BU_AVL_AMT = 0;

    					var BO_AMT = 0;
    					var BU_AMT = 0;
    					
    					var flag = '';
    					
    					store.each(function(record, idx) {
    		    			if(record.phantom == true) {
    		    				record.set('V_TYPE', 'I');
    		    			} else if (record.phantom == false) {
    		    				record.set('V_TYPE', 'U');
    		    			}
    		    			
    		    			//보증금, 부동산 잔액 검증
    		    			if(record.get('COL_TYPE') == 'B') { // 보증보험
    		    				BO_AVL_AMT = Number(record.get('COL_AVL_AMT'));
    		    				BO_AMT += Number(record.get('COL_AMT'));
    		    			}
    		    			else if(record.get('COL_TYPE') == 'D') { // 부동산
    		    				BU_AVL_AMT = Number(record.get('COL_AVL_AMT'));
    		    				BU_AMT += Number(record.get('COL_AMT'));
    		    			}
    		    		});
    		    		
    					if(BO_AVL_AMT < BO_AMT) {
    						flag = 'F';
    						msg = '보증보험 설정금액이 설정가능금액을 초과합니다.'
    					} else if(BU_AVL_AMT < BU_AMT) {
    						flag = 'F';
    						msg = '부동산 설정금액이 설정가능금액을 초과합니다.'
    					} else {
    						flag = 'T';
    					}
    					
    		    		if(flag == 'T') {
    		    			store.sync({
        		    			params : {
        		    				V_TYPE : 'SYNC',
        		    				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
        		    				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
        		    				V_MAST_DB_NO: Ext.getCmp('V_MAST_DB_NO').getValue()
        		    			},
        		    			callback : function(records, operation, success) {
        		    				var res = records.operations[0]._response.responseText;
        		    				
        		    				if(res.match('Exception')) {
        		    					Ext.Msg.alert('확인', res);
        		    				} else {
        		    					var tbController = M_COL_DISTB.app.getController("TbButtonController");
        		    					
        		    					if(makeArData){
        		    						tbController.makeArData();
        		    					} else {
        						    		tbController.selBtnClick();
        		    					}
    						    		
    						    		Ext.getCmp('tempGlCfmBtn').setDisabled(false);
        		    				}
        		    			}, 
        		    			success: function() {
        		    			}
        		    		});
        		    		
        		    		Ext.toast({
    							title : ' ',
    							timeout : 1000,
    							html : '저장완료',
    							style : 'text-align: center',
    							align : 't',
    							width : 130,
    						});
        		    		
        		    		Ext.getCmp('tempGlCfmBtn').setDisabled(false);
    		    		} else {
    						Ext.Msg.alert('확인', msg);
    					}
    		    		
    				}
        	    },
        		scope: this
        	});
    	} else {
    		Ext.Msg.alert('확인', msg);
    	}
		
    	
    },

    delBtnClick: function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		
		Ext.Msg.confirm('확인','삭제하시겠습니까?', function(button){
			if(button == 'yes') {
				Ext.Ajax.request({
	        		url:'sql/M_COL_DISTB.jsp',
	        		method: 'post',
	        		params: {
	        			V_TYPE: 'D',  
	        			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
	        			V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
	        			V_MAST_DB_NO : Ext.getCmp('V_MAST_DB_NO').getValue(),
	        			
	        		},
	        		callback : function(records,operations,success){
	    			},
	        	    success : function(response) {
	        	    	var tbController = M_COL_DISTB.app.getController("TbButtonController");
			    		tbController.clrBtnClick();
	        	    }
				});
			}
		});
    },

    clrBtnClick: function() {
    	Ext.getStore('MyStore').removeAll();
    	Ext.getStore('MyStore1').removeAll();
    	
    	Ext.getCmp('V_MAST_DB_NO').setValue('');
    	Ext.getCmp('V_COL_DT').setValue(new Date());
		Ext.getCmp('V_M_BP_CD').setValue('');
		Ext.getCmp('V_M_BP_NM').setValue('');
		Ext.getCmp('V_S_BP_CD').setValue('');
		Ext.getCmp('V_S_BP_NM').setValue('');
		Ext.getCmp('V_PO_NO').setValue('');
		Ext.getCmp('V_APPROV_NO').setValue('');
		Ext.getCmp('V_REF_COL_NO').setValue('');
		Ext.getCmp('V_COL_MGM_NO').setValue('');
		Ext.getCmp('V_COL_TITLE').setValue('');
		Ext.getCmp('V_COL_TOT_AMT').setValue(0);
		Ext.getCmp('V_COL_AVL_AMT').setValue(0);
		Ext.getCmp('V_COL_TYPE').setValue('');
		
		Ext.getCmp('BO_JAN_AMT').setValue('');
		Ext.getCmp('BU_JAN_AMT').setValue('');
		Ext.getCmp('LOAD_YN').setValue('N');
		
		Ext.getCmp('tempGlCfmBtn2').setDisabled(true);
		Ext.getCmp('tempGlCancelBtn2').setDisabled(true);
		Ext.getCmp('tempGlCfmBtn2').setDisabled(true);
		Ext.getCmp('tempGlCancelBtn2').setDisabled(true);
		
		var bnStore = Ext.getStore('store1');
    	
    	bnStore = new Ext.create('Ext.data.Store',{
      		autoLoad: true,
      		storeId: 'store1',
      		proxy: {
                  type: 'ajax',
                  extraParams: {
                   	V_MAST_CD: 'BA21',
                   	V_GRID: 'Y'
                  },	
                  api: {
                      read: '/HSPF01/common/sql/Combobox.jsp'
                  },
                  reader: {
                      type: 'json',
                      rootProperty: 'resultList'
                  }
              }
      	});

    	Ext.getCmp('V_COL_TYPE').bindStore(bnStore);
    	bnStore.load();
    },

    tfEnter: function(field, e, eOpts) {
        	if (e.getKey() == e.ENTER) {
        		this.selBtnClick();
        	}
    },
    
    onLaunch: function(application) {

    	var PO_NO = parent.Ext.getCmp('myTab').activeTab.id;
    	var myMask = new Ext.LoadMask(Ext.getCmp('myGrid') , {msg:"Please wait..."});
    	
		if(PO_NO.match('PO')) {
			Ext.getCmp('V_PO_NO').setValue(PO_NO);
			
			Ext.Ajax.request({
				url:'sql/M_COL_DISTB.jsp',
				method: 'post',
				params: {
					V_TYPE: 'O',
					V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
					V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
					V_PO_NO : PO_NO
				},
				callback : function(records,operations,success){
				},
				success : function(response) {
					myMask.show();
					var jsonResult = Ext.JSON.decode(response.responseText);
					
					Ext.getCmp('V_M_BP_NM').setValue(jsonResult.resultList["0"].M_BP_NM);
					Ext.getCmp('V_M_BP_CD').setValue(jsonResult.resultList["0"].M_BP_CD);
					Ext.getCmp('V_S_BP_NM').setValue(jsonResult.resultList["0"].S_BP_NM);
					Ext.getCmp('V_S_BP_CD').setValue(jsonResult.resultList["0"].S_BP_CD);
					Ext.getCmp('V_APPROV_NO').setValue(jsonResult.resultList["0"].APPROV_NO);
					Ext.getCmp('V_COL_DT').setValue(jsonResult.resultList["0"].PO_DT);
					Ext.getCmp('V_COL_TITLE').setValue(jsonResult.resultList["0"].APPROV_NM + '_' + jsonResult.resultList["0"].BRAND);
//					
					Ext.Ajax.request({
						url : 'sql/M_COL_DISTB.jsp',
						method : 'post',
						params: {
							V_TYPE: 'ID',
							V_PO_NO : PO_NO,
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
						},
						success: function(response) {
							var res = Ext.JSON.decode(response.responseText).resultList;
							
							for(var i=0; i<res.length; i++) {
								var rec = Ext.create('M_COL_DISTB.model.MyModel', {
									CONT_REMARK: res[i].CONT_REMARK,
									COL_DOC_AMT: res[i].DOC_AMT,
									COL_LOC_AMT: res[i].LOC_AMT,
									CONT_MGM_NO: res[i].CONT_MGM_NO,
									XCH_RATE: res[i].XCH_RATE,
									USE_DT: new Date(),
								});
								
								var store = Ext.getStore('MyStore');
								var count = store.getCount();
								
								store.insert(count-1, rec);
								myMask.hide();
							} 
							
						}
					})
					
				},
				scope: this
			});
//			Ext.Ajax.request({
//				url:'sql/M_COL_DISTB.jsp',
//				method: 'post',
//				params: {
//	    			V_TYPE: 'O',
//	    			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
//					V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
//					V_PO_NO : PO_NO
//	    		},
//				callback : function(records,operations,success){
//			    },
//			    success : function(response) {
//			    	var jsonResult = Ext.JSON.decode(response.responseText);
//			    	
//			    	Ext.getCmp('V_M_BP_NM').setValue(jsonResult.resultList["0"].M_BP_NM);
//			    	Ext.getCmp('V_M_BP_CD').setValue(jsonResult.resultList["0"].M_BP_CD);
//			    	Ext.getCmp('V_S_BP_NM').setValue(jsonResult.resultList["0"].S_BP_NM);
//			    	Ext.getCmp('V_S_BP_CD').setValue(jsonResult.resultList["0"].S_BP_CD);
//			    	Ext.getCmp('V_APPROV_NO').setValue(jsonResult.resultList["0"].APPROV_NO);
//			    	Ext.getCmp('V_COL_DT').setValue(jsonResult.resultList["0"].PO_DT);
//			    	Ext.getCmp('V_COL_TITLE').setValue(jsonResult.resultList["0"].APPROV_NM + '_' + jsonResult.resultList["0"].BRAND);
//			    	
//			    	Ext.Ajax.request({
//						url : 'sql/M_COL_DISTB.jsp',
//						method : 'post',
//						params: {
//							V_TYPE: 'ID',
//							V_PO_NO : PO_NO
//						},
//						success: function(response) {
//							var res = Ext.JSON.decode(response.responseText).resultList;
//
//							for(var i=0; i<res.length; i++) {
//									var rec = Ext.create('M_COL_DISTB.model.MyModel', {
//										CONT_REMARK: res[i].CONT_REMARK,
//										COL_DOC_AMT: res[i].DOC_AMT,
//										USE_DT: new Date(),
//						    		});
//									
//									var store = Ext.getStore('MyStore');
//							    	var count = store.getCount();
//							    	
//						    		store.insert(count-1, rec);
//								} 
//					    	
//						}
//			    	})
//			    	
//			    },
//				scope: this
//			});
			
		} else {

			myMask.hide();
		}

    },
    
    clsBtnClick: function() {},
    
    makeArData: function() {
    	var myStore3 = Ext.getStore('MyStore3');
    	
    	Ext.Ajax.request({
			url : 'sql/A_AR_RECEIPT.jsp',
			method : 'post',
			params : {
				V_TYPE : 'WH_COL',
				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				V_CLS_AR_NO : Ext.getCmp('V_CLS_AR_NO').getValue(),
				V_CLS_DT : Ext.getCmp('V_COL_DT').getValue(),
				V_BP_CD : Ext.getCmp('V_S_BP_CD').getValue(),
				V_DEPT_CD : '5124',
				V_CUR : 'KRW',
				V_MAST_DB_NO : Ext.getCmp('V_MAST_DB_NO').getValue(),
			},
			success : function(response) {
				var res = response.responseText;

				// 정상등록
				if (res.match('CR') || res.match('UPDATE')) {
					if (res.match('CR')) {
						Ext.getCmp('V_CLS_AR_NO').setValue(res);
					}
					
					myStore3.sync({
						params : {
							V_TYPE : 'WD_COL',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_CLS_AR_NO : Ext.getCmp('V_CLS_AR_NO').getValue(),
							V_CLS_DT : Ext.getCmp('V_COL_DT').getValue(),
							V_CUR : 'KRW',
							V_MAST_DB_NO : Ext.getCmp('V_MAST_DB_NO').getValue(),
						},
						callback : function(records, operation, success) {
							myStore3.removeAll();
							
							var tbController = M_COL_DISTB.app.getController("TbButtonController");
				    		tbController.selBtnClick();
						}
					});
				} else {
					Ext.Msg.alert('확인', res);
				}
			}
		});	
    }
    
});
