/*
 * File: app/controller/TbButtonController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SupDlvMgm.controller.TbButtonController', {
	extend : 'Ext.app.Controller',

	stores : [ 'SupDlvMgmStore', 'SupDlvMgmStoreGrid1', 'SupDlvMgmStoreGrid2', 'DtlStore', 'DlvyStore' ],

	control : {
		"#selBtn" : {
			click : 'selBtnClick'
		},
		"#delBtn" : {
			click : 'delBtnClick'
		},
		"mysearchform textfield[name=search_field]" : {
			specialkey : 'tfEnter'
		},
		"#grid1" : {
			itemclick : 'gridClick',
			beforecellclick : 'onGridpanelBeforeCellClick',
			beforecontainerclick : 'onGridpanelBeforeContainerClick'
		},
		"#saveBtn" : {
			click : 'saveBtnClick'
		},
		"textfield[name=search_field]": {
            specialkey: 'tfEnter'
        }
	},
	tfEnter: function(field, e, eOpts) {
	    	if (e.getKey() == e.ENTER) {
	    		this.selBtnClick();
	    	}
	},

	selBtnClick : function(button, e, eOpts) {
		var store = this.getSupDlvMgmStoreStore();
		var store1 = this.getSupDlvMgmStoreGrid1Store();
		var grid1Store = this.getSupDlvMgmStoreGrid1Store();
		store.removeAll();
		store1.removeAll();
		store.load({
			params : {
				u_pay_from_dt : Ext.getCmp('u_pay_from_dt').getValue(), // 납기요청일
				u_pay_to_dt : Ext.getCmp('u_pay_to_dt').getValue(), // 납기요청일
				u_po_from_dt : Ext.getCmp('u_po_from_dt').getValue(), // 발주일자
				u_po_to_dt : Ext.getCmp('u_po_to_dt').getValue(), // 발주일자
				u_po_no : Ext.getCmp('u_po_no').getValue(), // 발주번호
				u_item_cd : Ext.getCmp('u_item_cd').getValue(),
				gbp_cd : parent.Ext.getCmp('GBP_CD').getValue(),
				u_asn_no : Ext.getCmp('p_asn_no').getValue(), // ASN번호
				u_bp_nm : Ext.getCmp('u_bp_nm').getValue(), // 공급사이름
			},
			callback : function(records, operation, success) {
			},
			success : function() {
			},
			scope : this
		});
	},

	delBtnClick : function(button, e, eOpts) {
		alert('delete');
	},

	tfEnter : function(field, e, eOpts) {
		if (e.getKey() == e.ENTER) {
			this.selBtnClick();
		}
	},

	gridClick : function(button) {

		var gridObj1 = Ext.getCmp('grid1');
		var gridObj2 = Ext.getCmp('grid2');
		var grid1Store = this.getSupDlvMgmStoreGrid1Store();
		var PO_NO_SEQ;
		if (gridObj1 != null) {
			var gridRecord1 = gridObj1.getSelectionModel().getSelection();
			for (var j = 0; j < gridRecord1.length; j++) {
				PO_NO_SEQ += gridRecord1[j].data['MAST_PO_NO'] + gridRecord1[j].data['MAST_PO_SEQ'] + '\',\'';
			}
//			for (var i = 0; i < gridRecord1.length; i++) {
				grid1Store.load({
					params : {
						V_PO_NO_SEQ : PO_NO_SEQ,
//						MAST_PO_NO : gridRecord1[i].data['MAST_PO_NO'],
//						MAST_PO_SEQ : gridRecord1[i].data['MAST_PO_SEQ'],
					},
					callback : function(records, operation, success) {
					},
					scope : this
				});
//			}
		}
	},

	onGridpanelBeforeCellClick : function(target) {
		Ext.getCmp('selectGrid').setValue("grid1");
	},

	onGridpanelBeforeContainerClick : function(target) {
		Ext.getCmp('selectGrid').setValue("grid1");
	},

	saveBtnClick : function(button, e, eOpts) {

		var store = this.getSupDlvMgmStoreStore();
		var gridObj1 = Ext.getCmp('grid1');
		var gridObj2 = Ext.getCmp('grid2');
		var num = 0;
		var num2 = 0;
		var selectGrid_v = Ext.getCmp('selectGrid').getValue();
		var D_ASN_NO = '';
		var gridObj2Store = gridObj2.getStore();
		var thisNum = '';
		var thisNum1 = '';

		// var store1 = Ext.getStore('SupDlvMgmStoreGrid1');
		var store1 = this.getSupDlvMgmStoreStore();
		var store2 = Ext.getStore('SupDlvMgmStoreGrid1');
		var gridRecord = Ext.getCmp('grid1').getSelectionModel().getSelection();
		var gridRecord2 = Ext.getCmp('grid2').getSelectionModel().getSelection();
		
		var flag = 'T';
		var msg = '';

		if (selectGrid_v === "grid1") {
			store.each(function(rec, index) {
				if (rec.get('DLV_AVL_QTY') <= rec.get('REMAIN_QTY')) {
					if (num == 0 && rec.get('DLV_AVL_DT') != null && rec.get('DLV_AVL_QTY') != 0) {

						thisNum = rec.get('MAST_PO_NO') + rec.get('MAST_PO_SEQ');
						rec.set('V_TYPE', 'I');
					}
				} 
				else if (rec.get('DLV_AVL_QTY') > rec.get('REMAIN_QTY')) {
					msg = '납품가능수량을 초과하였습니다.';
					flag = 'F';
				}
			});
			
			if(flag == 'T'){
				store1.sync({
					// url:'sql/SupDlvMgmSqlSave.jsp',
					// method: 'post',
					params : {
						V_TYPE : 'SYNC',
						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
					},
					
					callback : function(response) {
						store.reload();// 저장 성공하면 reload
						store2.reload();// gridObj2Store.reload();
					},
					scope : this
				});
			}
			else{
				Ext.Msg.alert('확인', msg);
			}

		}

		if (gridRecord2.length > 0) {
			for (var i = 0; i < gridRecord2.length; i++) {
				console.log("3");
				if (gridRecord2[i].data['ASN_STS'] == 'A1' && gridRecord[i].data['V_TYPE'] == 'V') {
					gridRecord[i].data['V_TYPE'].set('V_TYPE', 'U');
					store2.sync({
						// url:'sql/SupDlvMgmSqlGrid2.jsp',
						// method: 'post',
						params : {
							V_MAST_PO_NO : gridRecord2[i].data['MAST_PO_NO'],
							V_MAST_PO_SEQ : gridRecord2[i].data['MAST_PO_SEQ'],
							V_MAST_PO_SEQ_NO : gridRecord2[i].data['MAST_PO_SEQ_NO'],
							V_ASN_NO : gridRecord2[i].data['ASN_NO'],
							V_ASN_STS : gridRecord2[i].data['ASN_STS'],
							V_ITEM_CD : gridRecord2[i].data['ITEM_CD'],
							V_DLV_AVL_DT : gridRecord2[i].data['DLV_AVL_DT'],
							V_DLV_AVL_QTY : gridRecord2[i].data['DLV_AVL_QTY'],
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue()
						},
						success : function(response) {
							store2.reload();// gridObj2Store.reload();
						},
						scope : this
					});
				} else {
					Ext.Msg.alert('확인', '바코드대기 상태에서만 수정가능합니다.');
				}

			}
		}

	}

});
