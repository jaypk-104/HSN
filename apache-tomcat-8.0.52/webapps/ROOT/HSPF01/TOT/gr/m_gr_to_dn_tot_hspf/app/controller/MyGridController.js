/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_GR_TO_DN_TOT_HSPF.controller.MyGridController', {
    extend: 'Ext.app.Controller',	
    stores: ['MyStore', 'MyStore1'],
    control: {
    	"#gridDnBtn": {
    		click: 'gridDnBtnClick'
    	},
        "#gridAddBtn": {
            click: 'gridAddBtnClick'
        },
        "#gridDelBtn": {
            click: 'gridDelBtnClick'
        },
        "#xlsxDown": {
            click: 'xlsxDownClick'
        },
		"#myGrid" : {
			cellclick : 'myGridClick',
			celldblclick: 'gridDblClick'
		},
        "#w_gridAddBtn": {
        	click: 'w_gridAddBtnClick'
        },
        "#w_gridSaveBtn": {
        	click: 'w_gridSaveBtnClick'
        },
        "#w_tempGlCfmBtn" : {
			click : 'tempGlCfmBtnClick'
		},
		"#w_tempGlCancelBtn" : {
			click : 'tempGlCancelBtnClick'
		},
		"#w_tempGlCfmBtn2" : {
			click : 'tempGlCfmBtnClick2'
		},
		"#w_tempGlCancelBtn2" : {
			click : 'tempGlCancelBtnClick2'
		},
    },

    //출고등록버튼
    gridDnBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';

		var DN_DT = Ext.Date.format(Ext.getCmp('V_DN_DT').getValue(), 'Y-m-d');
		flag = 'T';

		for (var i = 0; i < gridRecord.length; i++) {
			if (gridRecord[i].get('V_TYPE') == 'V') {
				gridRecord[i].set('V_TYPE', 'ID');
			}
		}
			
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';

		for(var i=0; i<gridRecord.length; i++) {
			if(gridRecord[i].data['SALE_TYPE'] == null || gridRecord[i].data['SALE_TYPE'] == '' ) {
				flag = 'F';
				msg = '출고유형을 선택하세요.';
				break;
			} else if(gridRecord[i].data['S_BP_CD'] == null || gridRecord[i].data['S_BP_CD'] == '' ) {
				flag = 'F';
				msg = '매출처를 선택하세요.';
				break;
			} else if(gridRecord[i].data['ID_DT'] > DN_DT ) {
				flag = 'F';
				msg = '출고일이 통관일 이전입니다.';
				break;
			} 
			else if(gridRecord[i].data['REQ_QTY'] == 0 ) {
				flag = 'F';
				msg = '출고요청 중량을 입력하세요. ';
				break;
			} 
			else if(gridRecord[i].data['GR_TYPE'] == 'B' ) {
				flag = 'F';
				msg = '바코드입고품목은 바코드로 출고해주세요.';
				break;
			} 
			else {
				flag = 'T';
			}
		}
		
		if(flag == 'T') {
			Ext.Msg.confirm('확인', '등록하시겠습니까?<br>출고일 : ' + DN_DT, function(button) {
				if (button == 'yes') {
					var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
					
					Ext.Ajax.request({
						url : 'sql/M_GR_TO_DN_TOT_HSPF.jsp',
						method : 'post',
						params : {
							V_TYPE : 'IH',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_DN_DT: Ext.getCmp('V_DN_DT').getValue()
						},
						success : function(response) {
							var DN_NO = response.responseText;
							
							store.sync({
								params : {
									V_TYPE : 'SYNC',
									V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
									V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
									V_DN_NO : DN_NO,
									V_DN_DT : DN_DT,
								},
								callback : function(records, operation, success) {
									var res = records.operations[0]._response.responseText;
									
									if (res.match('Exception')) {
										Ext.Msg.alert('확인', res);
									} else {
										store.reload();
										store1.reload();
									}
								},
								success : function(response) {
								}
							});
							
						}
					});
					
				}
			});
		} 
		else {
			Ext.Msg.alert('확인', msg);
		}
	},	

    xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
            	var grid = Ext.getCmp('myGrid');
            	grid.saveDocumentAs({
                    type: 'xlsx',
                    title: '출고등록(상단)', //엑셀내타이틀
                    fileName: currentDate+'.xlsx' //엑셀파일이름
        		});
    },
    
    
    myGridClick : function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {

		var store1 = Ext.getStore('MyStore1');
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var mvmtArr = new Array();
		
		for(var i=0; i<gridRecord.length; i++) {
			if(!mvmtArr.includes(gridRecord[i].get('MVMT_NO'))) {
				mvmtArr.push(gridRecord[i].get('MVMT_NO'));
			}
		}

		var MVMT_NO = '\'';
		
		for(var i=0; i<mvmtArr.length; i++) {
			MVMT_NO += mvmtArr[i] +'\',\'';
		}
		
		MVMT_NO = '(' + MVMT_NO.substr(0, MVMT_NO.length -2) + ')'; 
		
//		if (record.get('DN_BOX_QTY') != 0 && (gridRecord.length > 0)) {
		if (gridRecord.length > 0) {

		store1.load({
    		params: {
    			V_TYPE: 'SD',
    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    			V_MVMT_NO: MVMT_NO
    		},
    		callback: function(records,operations,success){
    			
    		}
		});
		} else {
			store1.removeAll();
		}

	},
	gridDblClick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
		cellDataIndex = tableview.eventPosition.column.dataIndex;
		
		if(cellDataIndex == 'S_BP_CD'){
			var popup = Ext.create("Popup.view.WinSBpPop");
			popup.show();
			
			Ext.getCmp('fieldType').setValue('M_GR_TO_DN_TOT_HSPF');
			var store = Ext.getStore('WinSBpPopStore');
			store.removeAll();
			
			Ext.getCmp('DBCLICK_ROW_INDEX').setValue(rowIndex);
		}
	},
    w_gridAddBtnClick: function(button, e, eOpts) {
    	var colStore = Ext.getStore('ColStore');
    	var count = colStore.getCount();

    	var rec = Ext.create('M_GR_TO_DN_TOT_HSPF.model.MyModel', {
			BL_DOC_NO: colStore.data.items["0"].data.BL_DOC_NO
		});
    	
    	colStore.insert(count, rec);
    
    },
    
    //=====================================전표=========================================//
    
    tempGlCfmBtnClick : function(button, e, eOpts) {
		var gridRecord = Ext.getCmp('colGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';

		var selModel1 = Ext.getCmp('colGrid').getSelectionModel();
		selModel1.selectAll();
			
			Ext.Msg.confirm('확인', 'ERP에 담보를 생성하시겠습니까?', function(button) {
				if (button == 'yes') {
					
					var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
					
					Ext.Ajax.request({
						url : '/HSPF01/HSPF02/mm2/po/m_col_distb/sql/M_COL_DISTB.jsp',
						method : 'post',
						params: {
							V_TYPE: 'ERP',
							U_TYPE: 'I',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GEMP_NO').getValue(),
							V_MAST_DB_NO : Ext.getCmp('V_NEW_MAST_DB_NO').getValue(),
						},
						success: function(response) {
							Ext.getCmp('w_tempGlCfmBtn').setDisabled(true);
							Ext.getCmp('w_tempGlCancelBtn').setDisabled(false);
							
							Ext.getCmp('w_tempGlCfmBtn2').setDisabled(false);
							Ext.getCmp('w_tempGlCancelBtn2').setDisabled(true);
							
					    	var jsonResult = Ext.JSON.decode(response.responseText);
					    	var tryCnt = jsonResult.tryCnt;
    						var finCnt = jsonResult.finCnt;
    						var resMSG = jsonResult.resMSG;
    						var resDATE = jsonResult.resDATE;
    						var resString = jsonResult.resString;
					    
    						if(resMSG == 'SUCCESS') {
								
    							Ext.toast({
									title : ' ',
									timeout : 1000,
									html : '담보생성완료',
									style : 'text-align: center',
									align : 't',
									width : 130,
								});
    						} else {
    							Ext.Msg.alert('확인', '담보생성실패<br>' + resString);
    						}
						}
					})
				}
			});
		
	},
	tempGlCancelBtnClick : function(button, e, eOpts) {
		var gridRecord = Ext.getCmp('colGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';
		
		var selModel1 = Ext.getCmp('colGrid').getSelectionModel();
		selModel1.selectAll();
		
			Ext.Msg.confirm('확인', 'ERP 담보를 취소하시겠습니까?', function(button) {
				if (button == 'yes') {
					
					var gridRecord = Ext.getCmp('colGrid').getSelectionModel().getSelection();
					
					Ext.Ajax.request({
						url : '/HSPF01/HSPF02/mm2/po/m_col_distb/sql/M_COL_DISTB.jsp',
						method : 'post',
						params: {
							V_TYPE: 'ERP',
							U_TYPE: 'D',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GEMP_NO').getValue(),
							V_MAST_DB_NO : Ext.getCmp('V_NEW_MAST_DB_NO').getValue(),
						},
						success: function(response) {
							Ext.getCmp('V_ERP_DB_YN').setValue('N');
							Ext.getCmp('w_tempGlCfmBtn').setDisabled(false);
							Ext.getCmp('w_tempGlCancelBtn').setDisabled(true);
							
							Ext.getCmp('w_tempGlCfmBtn2').setDisabled(true);
							Ext.getCmp('w_tempGlCancelBtn2').setDisabled(true);
							
							var jsonResult = Ext.JSON.decode(response.responseText);
					    	var tryCnt = jsonResult.tryCnt;
    						var finCnt = jsonResult.finCnt;
    						var resMSG = jsonResult.resMSG;
    						var resDATE = jsonResult.resDATE;
    						var resString = jsonResult.resString;
    						
    						if(resMSG == 'SUCCESS') {
    							Ext.toast({
									title : ' ',
									timeout : 1000,
									html : '담보취소완료',
									style : 'text-align: center',
									align : 't',
									width : 130,
								});
    						} else {
    							Ext.Msg.alert('확인', '담보취소실패<br>' + resString);
    						}
							
						}
					})
				}
			});
		
	},
	tempGlCfmBtnClick2 : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';
		
			Ext.Msg.confirm('확인', 'ERP에 전표를 생성하시겠습니까?', function(button) {
				if (button == 'yes') {
					
					var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
					
					Ext.Ajax.request({
						url : '/HSPF01/HSPF02/mm2/po/m_col_distb/sql/M_COL_DISTB.jsp',
						method : 'post',
						params: {
							V_TYPE: 'ERP',
							U_TYPE: 'I_GL',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GEMP_NO').getValue(),
							V_MAST_DB_NO : Ext.getCmp('V_NEW_MAST_DB_NO').getValue(),
						},
						success: function(response) {
							
							var jsonResult = Ext.JSON.decode(response.responseText);
					    	var tryCnt = jsonResult.tryCnt;
    						var finCnt = jsonResult.finCnt;
    						var resMSG = jsonResult.resMSG;
    						var resDATE = jsonResult.resDATE;
    						var resString = jsonResult.resString;
    						var temp_gl_no = jsonResult.TEMP_GL_NO;
							
							Ext.getCmp('W_TEMP_GL_NO').setValue(temp_gl_no);
							Ext.getCmp('w_tempGlCfmBtn').setDisabled(true);
							Ext.getCmp('w_tempGlCancelBtn').setDisabled(true);
							Ext.getCmp('w_tempGlCfmBtn2').setDisabled(true);
							Ext.getCmp('w_tempGlCancelBtn2').setDisabled(false);
							
							Ext.toast({
								title : ' ',
								timeout : 1000,
								html : '전표생성완료',
								style : 'text-align: center',
								align : 't',
								width : 130,
							});
						}
					})
				}
			});
		
	},
	tempGlCancelBtnClick2 : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';
		
			
			Ext.Msg.confirm('확인', 'ERP 전표를 취소하시겠습니까?', function(button) {
				if (button == 'yes') {
					
					var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
					
					Ext.Ajax.request({
						url : '/HSPF01/HSPF02/mm2/po/m_col_distb/sql/M_COL_DISTB.jsp',
						method : 'post',
						params: {
							V_TYPE: 'ERP',
							U_TYPE: 'D_GL',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GEMP_NO').getValue(),
							V_MAST_DB_NO : Ext.getCmp('V_NEW_MAST_DB_NO').getValue(),
						},
						success: function(response) {
							Ext.getCmp('W_TEMP_GL_NO').setValue('');
							Ext.getCmp('w_tempGlCfmBtn2').setDisabled(false);
							Ext.getCmp('w_tempGlCancelBtn2').setDisabled(true);
						
							Ext.getCmp('w_tempGlCfmBtn').setDisabled(true);
							Ext.getCmp('w_tempGlCancelBtn').setDisabled(false);
//							Ext.getCmp('saveBtn').setDisabled(true);
//							Ext.getCmp('delBtn').setDisabled(true);
//							Ext.getCmp('gridAddBtn').setDisabled(true);
//							Ext.getCmp('gridDelBtn').setDisabled(true);
							
							Ext.toast({
								title : ' ',
								timeout : 1000,
								html : '전표취소완료',
								style : 'text-align: center',
								align : 't',
								width : 130,
							});
						}
					})
				}
			});
		
	},
});
