/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Z_USR_INFO_HSPF.view.MyGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.myGrid',

    requires: [
        'Z_USR_INFO_HSPF.view.MyGridViewModel',
        'Ext.view.Table',
        'Ext.grid.column.RowNumberer',
        'Ext.form.field.ComboBox',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.RowEditing',
        'Ext.grid.plugin.Clipboard',
        'Ext.grid.plugin.CellEditing'
    ],

    config: {
        tbar: [
            {
                id: 'gridAddBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf055@FontAwesome',
                iconCls: 'grid-add-btn',
            },
            {
                id: 'gridDelBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf056@FontAwesome',
                iconCls: 'grid-del-btn',
            },
            {
                xtype: 'container',
                flex: 1
            },
            {
                id: 'pwdClearBtn',
                xtype: 'button',
                text: '암호초기화',
                
            },
            {
                xtype: 'button',
                glyph: 'xf1c3@FontAwesome',
                id: 'xlsxDown',
                cfg: {
                    type: 'excel07',
                    ext: 'xlsx'
                },
                iconCls: 'grid-excel-btn',
            }
        ]
    },

    viewModel: {
        type: 'mygrid'
    },
    id: 'myGrid',
    style: 'border: 1px solid #659DDC; padding: 5px;',
    bodyBorder: false,
    header: false,
    store: 'MyStore',

    viewConfig: {
        enableTextSelection: true
    },
    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'V_TYPE',
            text: 'V_TYPE'
        },
        {
            xtype: 'gridcolumn',
            id: 'USR_ID',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            sortable: true,
            dataIndex: 'USR_ID',
            enableTextSelection: true,
            width: 120,
            text: '<span style=\'color:red\'>*</span>사용자아이디',
            editor: {
                xtype: 'textfield',
                allowBlank: false,
            }
        },
        {
            xtype: 'gridcolumn',
            id: 'USR_NM',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'USR_NM',
            text: '<span style=\'color:red\'>*</span>사용자명',
            editor: {
                xtype: 'textfield',
                allowBlank: false,
            },
            width: 200
        },
        {
            xtype: 'gridcolumn',
            id: 'ROLE_CD',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'ROLE_CD',
            text: '<span style=\'color:red\'>*</span>사용자권한',
            editor: {
                xtype: 'combobox',
                allowBlank: false,
                displayField: 'DTL_NM',
                valueField: 'DTL_CD',
                editable: false,
                matchFieldWidth: false,
                store: Ext.create('Ext.data.Store',{
              		autoLoad: true,
              		storeId: 'store1',
              		proxy: {
                          type: 'ajax',
                          extraParams: {
                           	V_MAST_CD: 'Z_ROLE_HSPF',
                           	V_GRID: 'Y'
                          },	
                          api: {
                              read: '/HSPF01/common/sql/Combobox.jsp'
                          },
                          reader: {
                              type: 'json',
                              rootProperty: 'resultList'
                          }
                      }
              	}),
            },
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('store1').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('store1').findRecord('DTL_CD',value).get('DTL_NM');
                }
                return value;
            },
        },
        {
            xtype: 'gridcolumn',
            id: 'BP_CD',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'BP_CD',
            text: '<span style=\'color:red\'>*</span>거래처코드',
            editor: {
                xtype: 'textfield',
//                editable: false,
                listeners: {
                    afterrender: function(c) {
                    	c.getEl().on('dblclick', function() {
                    		var popup = Ext.create("Popup.view.WinBpPop");
                            popup.show();
                            
                            Ext.getCmp('fieldType').setValue('Z_USR_INFO_HSPF');
                            var store = Ext.getStore('WinBpPopStore');
                    		store.removeAll();
                        });
                    }
                },
                emptyText: '(Double Click)'
            },
        },
        {
            xtype: 'gridcolumn',
            id: 'BP_NM',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'BP_NM',
            text: '거래처명',
            width: 200
        },
        {
            xtype: 'gridcolumn',
            id: 'DEPT_CD',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'DEPT_CD',
            text: '부서코드',
            editor: {
                xtype: 'textfield',
                editable: false,
                listeners: {
                    afterrender: function(c) {
                    	c.getEl().on('dblclick', function() {
                    		var popup = Ext.create("Popup.view.WinDeptPop");
                            popup.show();
                            
                            Ext.getCmp('fieldType').setValue('Z_USR_INFO_HSPF');
                            var store = Ext.getStore('WinDeptPopStore');
                    		store.removeAll();
                        });
                    }
                },
                emptyText: '(Double Click)'
            }
        },
        {
            xtype: 'gridcolumn',
            id: 'DEPT_NM',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'DEPT_NM',
            text: '부서명',
            width: 120,
        },
        {
            xtype: 'gridcolumn',
            id: 'POSIT_NM',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'POSIT_NM',
            text: '직위',
            editor: {
                xtype: 'textfield'
            }
        },
        {
        	xtype: 'gridcolumn',
        	id: 'EMP_NO',
        	style: 'text-align: center; font-weight: bold; color: #3367d6',
        	dataIndex: 'EMP_NO',
        	text: '사번',
        	editor: {
        		xtype: 'textfield'
        	},
        	width: 120
        },
        {
            xtype: 'gridcolumn',
            id: 'ADDRESS',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'ADDRESS',
            text: '주소',
            width: 300,
            editor: {
                xtype: 'textfield'
            }
        },
        {
            xtype: 'gridcolumn',
            id: 'TEL_NO',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'TEL_NO',
            text: '전화번호',
            width: 150,
            editor: {
                xtype: 'textfield'
            }
        },
        {
            xtype: 'gridcolumn',
            id: 'FAX_NO',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'FAX_NO',
            text: '팩스번호',
            width: 150,
            editor: {
                xtype: 'textfield'
            }
        },
        {
            xtype: 'gridcolumn',
            id: 'HAND_TEL',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'HAND_TEL',
            text: '핸드폰번호',
            width: 150,
            editor: {
                xtype: 'textfield'
            }
        },
        {
            xtype: 'gridcolumn',
            id: 'EMAIL',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'EMAIL',
            text: 'E-MAIL주소',
            width: 200,
            editor: {
                xtype: 'textfield'
            }
        },
        {
            xtype: 'gridcolumn',
            id: 'USE_YN',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'USE_YN',
            text: '사용유무',
            align: 'center',
            editor: {
                xtype: 'combobox',
                store : Ext.create('Ext.data.Store',{
					fields : ['value'],
					data : [['Y'],['N']]
            	}),
            	displayField: 'value',
            	valueField: 'value'
            }
        },
        {
            xtype: 'gridcolumn',
            id: 'QUERY_ALL_YN',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'QUERY_ALL_YN',
            text: '조회권한',
            align: 'center',
            editor: {
            	 xtype: 'combobox',
                 store : Ext.create('Ext.data.Store',{
 					fields : ['value'],
 					data : [['Y'],['N']]
             	}),
             	displayField: 'value',
             	valueField: 'value'
            }
        },
        {
            xtype: 'gridcolumn',
            id: 'PRINT_YN',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'PRINT_YN',
            text: '출력권한',
            align: 'center',
            editor: {
            	 xtype: 'combobox',
                 store : Ext.create('Ext.data.Store',{
 					fields : ['value'],
 					data : [['Y'],['N']]
             	}),
             	displayField: 'value',
             	valueField: 'value'
            }
        },
        {
            xtype: 'gridcolumn',
            id: 'INSRT_YN',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'INSRT_YN',
            align: 'center',
            text: '등록권한',
            editable: false,
            editor: {
            	 xtype: 'combobox',
                 store : Ext.create('Ext.data.Store',{
 					fields : ['value'],
 					data : [['Y'],['N']]
             	}),
             	displayField: 'value',
             	valueField: 'value'
            }
        }
    ],
    selModel: {
        selType: 'checkboxmodel',
        checkOnly: true,
        listeners: {
            select: function(rowmodel, record, index, eOpts) {
            	record.set('V_TYPE', 'V');
            },
            deselect: function(rowmodel, record, index, eOpts) {
            	record.set('V_TYPE', '');
            }
        }
    },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        {
            ptype: 'clipboard'
        },
        {
            ptype: 'cellediting',
            clicksToEdit: 2,
            listeners: {
	            //수정후
	            edit: function(editor, context, eOpts) {
	            	var selModel= Ext.getCmp('myGrid').getSelectionModel();
	            	selModel.select(context.record, true);
	            },
	        	beforeedit: function(editor, context) {
	        		if((context.record.phantom == false) 
	        			&& (context.field == 'USR_ID' 
        				||	context.field == 'USR_NM')) {
	        			context.cancel = true;
	        		} else {
	        			context.cancel = false;
	        		}
	            }
            }
        },
    ]

});