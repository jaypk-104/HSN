/*
 * File: app/controller/MyGridController1.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_BL_MST_TOT_HSPF.controller.MyGridController1', {
	extend : 'Ext.app.Controller',
	stores : [ 'MyStore', 'MyStore1' , 'FileStore'],
	control : {
		"#blRegBtn" : {
			click : 'blRegBtnClick'
		},
		"#blDocRegBtn" : {/*파일첨부*/
			click : 'blDocRegBtnClick'
		},
		'#fileGrid' : { /*파일다운더블클릭*/
			celldblclick : 'fileGridDblClick',
		},
		"#fileDelBtn" : { /*파일삭제*/
        	click : 'fileDelBtnClick'
        },
		"#blCfmBtn" : {
			click : 'blCfmBtnClick'
		},
		"#blCancelBtn" : {
			click : 'blCancelBtnClick'
		},
		"#gridDelBtn" : {
			click : 'gridDelBtnClick'
		},
		"#xlsxDown1" : {
			click : 'xlsxDownClick'
		},
	},

	blRegBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';

		if (Ext.getCmp('V_BL_DOC_NO').getValue() == '' || Ext.getCmp('V_BL_DOC_NO').getValue() == null) {
			flag = 'F';
			msg = 'B/L번호를 입력하세요.';
//		} else if (Ext.getCmp('V_ED_DOC_NO').getValue() == '' || Ext.getCmp('V_ED_DOC_NO').getValue() == null) {
//			flag = 'F';
//			msg = '통관신고번호를 입력하세요.';
		} else if (Ext.getCmp('V_LOADING_DT').getValue() == null) {
			flag = 'F';
			msg = '선적일을 입력하세요.';
//		} else if (Ext.getCmp('V_ED_DT').getValue() == null) {
//			flag = 'F';
//			msg = '통관신고일을 입력하세요.';
		} else if (Ext.getCmp('V_S_BP_CD2').getValue() == '') {
			flag = 'F';
			msg = '매출처를 선택하세요.';
		} else if (Ext.getCmp('V_IN_TERMS').getValue() == null) {
			flag = 'F';
			msg = '가격조건을 선택하세요.';
		} else if (Ext.getCmp('V_PAY_METH').getValue() == null) {
			flag = 'F';
			msg = '결제방법을 선택하세요.';
		} else if (Ext.getCmp('V_CUR').getValue() == null) {
			flag = 'F';
			msg = '통화를 선택하세요.';
		} else if (Ext.getCmp('V_LOADING_PORT').getValue() == null) {
			flag = 'F';
			msg = '선적항을 선택하세요.';
		} else if (Ext.getCmp('V_DISCHGE_PORT').getValue() == null) {
			flag = 'F';
			msg = '도착항을 선택하세요.';
		} else if (Ext.getCmp('V_SALE_GRP').getValue() == null) {
			flag = 'F';
			msg = '수금그룹을 선택하세요.';
		} else if (Ext.getCmp('V_IN_PLAN_DT').getValue() == null) {
			flag = 'F';
			msg = '수금만기일을 입력하세요.';
		} else if (Ext.getCmp('V_ETA').getValue() == null) {
			flag = 'F';
			msg = 'ETA를 입력하세요.';
		} else if (Ext.getCmp('V_ETD').getValue() == null) {
			flag = 'F';
			msg = 'ETD를 입력하세요.';
		} else {
			flag = 'T';

			if(Ext.getCmp('V_SALE_TYPE').getValue() != 'TSO'){
				store1.each(function(rec, idx) {
					 if(!!!rec.get('ED_DOC_NO')) {
						 flag = 'F';
						 msg = '통관신고번호를 입력하세요';
						 return false;
					 } else if(!!!rec.get('ED_DT')) {
						 flag = 'F';
						 msg = '통관신고일을 입력하세요';
						 return false;
					 }
				});
			}
			
		}

		if (flag == 'T') {
			var selModel1 = Ext.getCmp('myGrid1').getSelectionModel();
			selModel1.selectAll();

			Ext.Msg.confirm('확인', '저장하시겠습니까?', function(button) {
				if (button == 'yes') {

					var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
					var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();

					var V_TYPE = "IH";
					if(Ext.getCmp('V_BL_NO').getValue()){
						V_TYPE = "UH";
					}
					
					Ext.Ajax.request({
						url : 'sql/S_BL_MST_TOT_HSPF.jsp',
						method : 'post',
						params : {
							V_TYPE : V_TYPE,
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_LOADING_DT : Ext.getCmp('V_LOADING_DT').getValue(),
							V_S_BP_CD2 : Ext.getCmp('V_S_BP_CD2').getValue(),
							V_BL_NO : Ext.getCmp('V_BL_NO').getValue(),
							V_BL_DOC_NO : Ext.getCmp('V_BL_DOC_NO').getValue(),
							V_VESSEL_NM : Ext.getCmp('V_VESSEL_NM').getValue(),
							V_IN_TERMS : Ext.getCmp('V_IN_TERMS').getValue(),
							V_PAY_METH : Ext.getCmp('V_PAY_METH').getValue(),
							V_CUR : Ext.getCmp('V_CUR').getValue(),
							V_XCHG_RT : Ext.getCmp('V_XCHG_RT').getValue(),
//							V_ED_DOC_NO : Ext.getCmp('V_ED_DOC_NO').getValue(),
//							V_ED_DT : Ext.getCmp('V_ED_DT').getValue(),
//							V_INVOICE_NO : Ext.getCmp('V_INVOICE_NO').getValue(),
							V_ORIGIN_CNTRY : Ext.getCmp('V_ORIGIN_CNTRY').getValue(),
							V_IN_PLAN_DT : Ext.getCmp('V_IN_PLAN_DT').getValue(),
							V_ETA : Ext.getCmp('V_ETA').getValue(),
							V_ETD : Ext.getCmp('V_ETD').getValue(),
							V_DISCHGE_PORT : Ext.getCmp('V_DISCHGE_PORT').getValue(),
							V_LOADING_PORT : Ext.getCmp('V_LOADING_PORT').getValue(),
							V_SALE_GRP : Ext.getCmp('V_SALE_GRP').getValue(),
							V_SALE_TYPE : Ext.getCmp('V_SALE_TYPE').getValue(),
							V_INVOICE_NO : Ext.getCmp('V_INVOICE_NO').getValue(),
							V_INVOICE_DT : Ext.getCmp('V_INVOICE_DT').getValue(),
							V_HS_CODE : Ext.getCmp('V_HS_CODE').getValue(),
						},
						success : function(response) {
							var res = response.responseText;
							store1.each(function(record, idx) {
								if (record.phantom == true) {
									record.set('V_TYPE', 'ID');
								} else {
									record.set('V_TYPE', 'UD');
								}
							});
							
							// BL 정상등록
							if(V_TYPE == 'IH'){
								Ext.getCmp('V_BL_NO').setValue(res);
							}
							
							if (res.match('EB') || res.match('UPDATE')) {
								store1.sync({
									params : {
										V_TYPE : 'SYNC',
										V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
										V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
										V_BL_NO : Ext.getCmp('V_BL_NO').getValue(),
									},
									callback : function(records, operation, success) {
										var tbController = S_BL_MST_TOT_HSPF.app.getController("TbButtonController");
										tbController.selBtnClick();
									},
									success : function() {

									}
								});
							} else {
								Ext.Msg.alert('확인', res);
							}

						}
					})
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}
	},
	/* [파일첨부] */
	blDocRegBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');

		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';

		if (Ext.getCmp('V_BL_DOC_NO').getValue() == '' || Ext.getCmp('V_BL_DOC_NO').getValue() == null) {
			flag = 'F';
			msg = 'B/L번호를 입력하세요.';
		} else {
			flag = 'T';
		}
		if (flag == 'T') {
			var popup = Ext.create("S_BL_MST_TOT_HSPF.view.MyWindow");
			popup.show();
			
			var width = Ext.getBody().getViewSize().width - 200;
		    var height = Ext.getBody().getViewSize().height - 200;
		    popup.setSize(width, height);
		    popup.center();
			
			var fileStore = Ext.getStore('FileStore');
			fileStore.removeAll();
		   	fileStore.load({
					params : {
						V_TYPE : 'S',
						V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
						V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
						V_BL_NO: Ext.getCmp('V_BL_NO').getValue(),
					},
					callback : function(records, operations, success) {
					}
				});
		}else {
			Ext.Msg.alert('확인', msg);
		}
		
	},
	 /* [파일다운] */
    fileGridDblClick:  function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
		var gridObj = Ext.getCmp('fileGrid');
		var gridRecord = gridObj.getSelectionModel().getSelection();
		var V_FILE_NM = gridRecord[0].data['FILE_NM'];
		var V_FILE_IN_SYSTEM_NM = gridRecord[0].data['FILE_IN_SYSTEM_NM'];
		V_FILE_NM = encodeURI(V_FILE_NM);
		V_FILE_IN_SYSTEM_NM = encodeURI(V_FILE_IN_SYSTEM_NM);
		

		var myWin=new Ext.Window(
				{
					title : '파일다운로드',
					html : '<iframe name="xxx" border =0 src="sql/S_BL_MST_TOT_HSPF_FILE.jsp?V_TYPE=D&V_FILE_NM='+V_FILE_NM+'&V_FILE_IN_SYSTEM_NM='+V_FILE_IN_SYSTEM_NM+'" width="1%" height="1%"></iframe>',
					width :500,
					height:500
				});
		myWin.show();
		myWin.hide();
	},
	/* [파일삭제] */
	fileDelBtnClick: function() {
    	var fileStore = Ext.getStore('FileStore');
    	var gridRecord = Ext.getCmp('fileGrid').getSelectionModel().getSelection();
    	    	
    	if(gridRecord.length > 0) {
    		Ext.MessageBox.confirm('확인', '삭제하시겠습니까?', function(btn) {
    			console.log("btn" + btn);
    			if(btn == 'yes') {
    				fileStore.sync({
    					params: {
    						V_TYPE: 'SYNC',
    						V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    						V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    					},
    					callback: function(records,operations,success){
    						
    						fileStore.load({
    							params : {
    								V_TYPE : 'S',
    								V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    								V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    								V_BL_NO: Ext.getCmp('V_BL_NO').getValue(),
    							},
    							callback : function(records, operations, success) {
    								var filePreview = '';
    			   					for(var i=0; i<records.length; i++) {
    			   						filePreview += records[i].get('FILE_NM') + '<br>';
    			   					}
    			   					
    			   					var qText = '';
    			   					if(filePreview.length == 0) {
    			   						qText = '없음';
    			   					} else {
    			   						qText = filePreview;
    			   					}
    			   					
				                	Ext.tip.QuickTipManager.register({
				                          target: 'blDocRegBtn', // Target button's ID
				                          title : '<span style=\'color:#9CFFFA\'>첨부파일현황</span>',  // QuickTip Header
				                          text  : qText,
				                          dismissDelay: 10000 // Hide after 10 seconds hover
				                    });
				                	
//				                	Ext.getCmp('blDocRegBtn').setText('[ ' + records.length + ' ]');
    							}
    						});
    						
							
						}
    				});
    			}
    		})
    	}
    	
    },

	blCfmBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';

		if (Ext.getCmp('V_BL_DOC_NO').getValue() == '' || Ext.getCmp('V_BL_DOC_NO').getValue() == null) {
			flag = 'F';
			msg = 'B/L번호를 입력하세요.';
		} else {
			flag = 'T';
		}

		if (flag == 'T') {
			var selModel1 = Ext.getCmp('myGrid1').getSelectionModel();
			selModel1.selectAll();

			Ext.Msg.confirm('확인', '전표를 생성하시겠습니까?', function(button) {
				if (button == 'yes') {
					var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
					var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();

					Ext.Ajax.request({
						url : 'sql/S_BL_MST_TOT_HSPF.jsp',
						method : 'post',
						params : {
							V_TYPE : 'I',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GEMP_NO').getValue(),
							V_BL_NO : Ext.getCmp('V_BL_NO').getValue(),
							V_BL_DOC_NO : Ext.getCmp('V_BL_DOC_NO').getValue(),
						},
						success : function(response) {
							try{
								var jsonResult = Ext.JSON.decode(response.responseText);
								var tryCnt = jsonResult.tryCnt;
								var finCnt = jsonResult.finCnt;
								var resMSG = jsonResult.resMSG;
								var resDATE = jsonResult.resDATE;
								var resString = jsonResult.resString;
	
								if (resMSG == 'SUCCESS') {
									var tbController = S_BL_MST_TOT_HSPF.app.getController("TbButtonController");
									tbController.selBtnClick();
	
									Ext.toast({
										title : ' ',
										timeout : 1000,
										html : '전표생성완료',
										style : 'text-align: center',
										align : 't',
										width : 130,
									});
								} else {
									Ext.Msg.alert('확인', '전표생성실패<br>' + resString);
								}
							}
							catch (e){
								Ext.Msg.alert('확인', '전표생성실패<br>' + response.responseText);
							}

						}
					})
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}
	},

	blCancelBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';

		if (Ext.getCmp('V_BL_DOC_NO').getValue() == '' || Ext.getCmp('V_BL_DOC_NO').getValue() == null) {
			flag = 'F';
			msg = 'B/L번호를 입력하세요.';
		} else {
			flag = 'T';
		}

		if (flag == 'T') {
			var selModel1 = Ext.getCmp('myGrid1').getSelectionModel();
			selModel1.selectAll();

			Ext.Msg.confirm('확인', '전표를 취소하시겠습니까?', function(button) {
				if (button == 'yes') {

					var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
					var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();

					Ext.Ajax.request({
						url : 'sql/S_BL_MST_TOT_HSPF.jsp',
						method : 'post',
						params : {
							V_TYPE : 'D',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GEMP_NO').getValue(),
							V_BL_NO : Ext.getCmp('V_BL_NO').getValue(),
							V_BL_DOC_NO : Ext.getCmp('V_BL_DOC_NO').getValue(),
						},
						success : function(response) {

							var jsonResult = Ext.JSON.decode(response.responseText);
							var tryCnt = jsonResult.tryCnt;
							var finCnt = jsonResult.finCnt;
							var resMSG = jsonResult.resMSG;
							var resDATE = jsonResult.resDATE;
							var resString = jsonResult.resString;

							if (resMSG == 'SUCCESS') {
								var tbController = S_BL_MST_TOT_HSPF.app.getController("TbButtonController");
								tbController.selBtnClick();

								Ext.toast({
									title : ' ',
									timeout : 1000,
									html : '전표취소완료',
									style : 'text-align: center',
									align : 't',
									width : 130,
								});
							} else {
								Ext.Msg.alert('확인', '전표취소실패<br>' + resString);
							}
						}
					})
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}

	},

	gridDelBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');
		var flag = '';
		var msg = '';

		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();

		for (var i = 0; i < gridRecord1.length; i++) {
			if (gridRecord1[i].get('V_TYPE') == 'V') {
				gridRecord1[i].set('V_TYPE', 'DD');
				flag = 'T';
			}
		}

		if (flag == 'T') {
			Ext.Msg.confirm('확인', '삭제하시겠습니까?', function(button) {
				if (button == 'yes') {

					store1.sync({
						params : {
							V_TYPE : 'SYNC',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_BL_NO : Ext.getCmp('V_BL_NO').getValue(),
						},
						callback : function(records, operation, success) {
							store.reload();
							store1.reload();

							if (store1.getCount() == gridRecord1.length) {
								Ext.getCmp('V_BL_NO').setValue('');
								Ext.getCmp('V_LOADING_DT').setValue('');
								Ext.getCmp('V_S_BP_CD2').setValue('');
								Ext.getCmp('V_S_BP_NM2').setValue('');
								Ext.getCmp('V_BL_DOC_NO').setValue('');
//								Ext.getCmp('V_ED_DOC_NO').setValue('');
//								Ext.getCmp('V_ED_DT').setValue('');
//								Ext.getCmp('V_INVOICE_NO').setValue('');
								Ext.getCmp('V_ORIGIN_CNTRY').setValue('');
								Ext.getCmp('V_VESSEL_NM').setValue('');
								Ext.getCmp('V_IN_PLAN_DT').setValue('');
								Ext.getCmp('V_ETA').setValue('');
								Ext.getCmp('V_ETD').setValue('');
								Ext.getCmp('V_DISCHGE_PORT').setValue('');
								Ext.getCmp('V_LOADING_PORT').setValue('');
								Ext.getCmp('V_IN_TERMS').setValue(null);
								Ext.getCmp('V_PAY_METH').setValue(null);
								Ext.getCmp('V_SALE_GRP').setValue(null);
								Ext.getCmp('V_CUR').setValue('USD');
								Ext.getCmp('V_XCHG_RT').setValue(1);
								Ext.getCmp('V_SALE_TYPE').setValue('');
								Ext.getCmp('V_INVOICE_NO').setValue('');
								Ext.getCmp('V_INVOICE_DT').setValue('');
								Ext.getCmp('V_HS_CODE').setValue('');
							}
						},
						success : function() {
						}
					});
				}
			});

		} else {
			Ext.Msg.alert('확인', msg);
		}
	},
	
	syncItem: function(button, e, eOpts) {
    	var store =	Ext.getStore('MyStore1');
    	var storeVAT = Ext.getStore('storeVAT');
    	var XCH_RATE = (Ext.getCmp('V_XCHG_RT').getValue() * 100).toFixed(0) / 100;
    	
    	store.each(function(rec,idx) {
    		var PRICE2 = (rec.get('PRICE') * 100000).toFixed(0) / 100000;
			var QTY2 = (rec.get('QTY') * 100).toFixed(0) / 100;
			
    		rec.set('DOC_AMT', Math.round(PRICE2 * QTY2 * 100) / 100);
			rec.set('LOC_AMT', (rec.get('DOC_AMT') * XCH_RATE).toFixed(0));
			
			if(!!rec.get('VAT_TYPE') && rec.get('VAT_RATE') > 0){
				rec.set('VAT_AMT', Math.floor(rec.get('LOC_AMT') * rec.get('VAT_RATE') / 100))
			}
			
			var vatType = rec.get('VAT_TYPE');
			var match = storeVAT.findBy(function(record,id) {
    	        if(record.get('DTL_CD') == vatType) {
    	            return true;
    	        }
    	    });
    		
    		var vatRecord = storeVAT.getData().getAt(match);
    		var VAT_RATE = vatRecord.get('VAT_RATE');
    		var LOC_AMT = rec.get('LOC_AMT');
    		var VAT_AMT = 0;
			if(LOC_AMT > 0 && VAT_RATE > 0){
				VAT_AMT = Math.floor(LOC_AMT * VAT_RATE / 100); 
			}
			rec.set('VAT_AMT', VAT_AMT);
		});
    	
    	// 원화차이 정리
    	var totalDocAmt = 0;
		var totalLocAmt = 0;
		var totalCalcLocAmt = 0;
		store.each(function(record, idx) {
			totalDocAmt = Math.round((totalDocAmt+record.get('DOC_AMT'))*100)/100;
			totalLocAmt += record.get('LOC_AMT');
		});
		totalCalcLocAmt = Math.floor(totalDocAmt * XCH_RATE);
		
		var diffAmt = totalCalcLocAmt-totalLocAmt;
		var diff = Number((diffAmt / store.data.length).toFixed(0));
		var mod = diffAmt % store.data.length;
		
		if(diffAmt != 0){
			store.each(function(record, idx) {
				record.set('LOC_AMT', record.get('LOC_AMT')+diff);
				if(idx === 0 ) record.set('LOC_AMT', record.get('LOC_AMT')+mod);
			});
		}
    },

	xlsxDownClick : function(button, e, eOpts) {
		var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
		var grid = Ext.getCmp('myGrid1');
		grid.saveDocumentAs({
			type : 'xlsx',
			title : '통관,BL등록', // 엑셀내타이틀
			fileName : currentDate + '.xlsx' // 엑셀파일이름
		});
	},
});
