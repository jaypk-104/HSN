/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('item_register.view.MyGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.myGrid',

    requires: [
        'item_register.view.MyGridViewModel',
        'item_register.view.MyGridViewController',
        'Ext.view.Table',
        'Ext.grid.column.RowNumberer',
        'Ext.grid.column.Number',
        'Ext.form.field.Number',
        'Ext.form.field.ComboBox',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.CellEditing'
    ],

    config: {
        tbar: [
        	{
                id: 'gridAddBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf055@FontAwesome',
                iconCls: 'grid-add-btn',
//                disabled: true
            },
            {
                id: 'gridDelBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf056@FontAwesome',
                iconCls: 'grid-del-btn',
                disabled: true
            },
            {
                xtype: 'container',
                flex: 1
            },
            {
                xtype: 'button',
                glyph: 'xf1c3@FontAwesome',
                id: 'xlsxDown',
                cfg: {
                    type: 'excel07',
                    ext: 'xlsx'
                },
                iconCls: 'grid-excel-btn',
            },
        ]
    },

    controller: 'mygrid',
    viewModel: {
        type: 'mygrid'
    },
    id: 'myGrid',
    style: 'border: 1px solid #659DDC; padding: 5px;',
    bodyBorder: false,
    header: false,
    store: 'MyStore',

    viewConfig: {
        enableTextSelection: true
    },
    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            text: 'V_TYPE'
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            id: 'CFM_YN',
            text: '확정유무'
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            id: 'INSROW',
            sortable: true,
            enableTextSelection: true,
            text: '행추가 유무'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 11px; text-align: center; font-weight: bold; ',
            width: 120,
            sortable: true,
            dataIndex: 'BP_ITEM_CD',
            enableTextSelection: true,
            text: '해외법인코드',
            editor: {
                xtype: 'textfield',
                style: 'text-align:left',
                allowBlank: false,
                blankText: '필수 입력사항입니다.'
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 11px; text-align: center; font-weight: bold;',
            width: 135,
            sortable: true,
            dataIndex: 'ITEM_CD',
            enableTextSelection: true,
            text: '네트웍스코드',
            editor: {
                xtype: 'textfield',
                style: 'text-align:left',
                allowBlank: false,
                blankText: '필수 입력사항입니다.'
            }
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold; ',
        	width: 100,
        	sortable: true,
        	dataIndex: 'S_BP_CD',
        	enableTextSelection: true,
        	text: '판매처코드',
        	editor: {
        		xtype: 'combobox',
        		displayField: 'DTL_NM',
        		valueField: 'DTL_CD',
        		editable: false,
        		store : 'SaleStore',
        		listeners: {
                    change: function(field, newValue, oldValue, eOpts) {
                        var store = field.store;
                        var record = field.up('editor').context.record;
                        var BPrecord = store.findRecord('DTL_CD',newValue);
                        if(BPrecord){
                            record.set('S_BP_NM', BPrecord.data['DTL_NM']);
                        }
                    },
                }
            },
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('SaleStore').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('SaleStore').findRecord('DTL_CD',value).get('DTL_CD');
                }
                return value;
            },
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; ',
            width: 100,
            sortable: true,
            dataIndex: 'S_BP_NM',
            enableTextSelection: true,
            text: '판매처',
            editor: {
        		xtype: 'combobox',
        		displayField: 'DTL_NM',
        		valueField: 'DTL_CD',
        		editable: false,
        		store : 'SaleStore',
        		listeners: {
                    change: function(field, newValue, oldValue, eOpts) {
                        var store = field.store;
                        var record = field.up('editor').context.record;
                        var BPrecord = store.findRecord('DTL_CD',newValue);
                        if(BPrecord){
                            record.set('S_BP_CD', BPrecord.data['DTL_CD']);
                        }
                    },
                }
            },
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('SaleStore').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('SaleStore').findRecord('DTL_CD',value).get('DTL_NM');
                }
                return value;
            },
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 11px; text-align: center; font-weight: bold; ',
        	width: 100,
        	sortable: true,
        	dataIndex: 'M_BP_CD',
        	enableTextSelection: true,
        	text: '공급업체코드',
            editor: {
                xtype: 'textfield',
                style: 'text-align:left',
                allowBlank: false,
                blankText: '필수 입력사항입니다.',
                listeners: {
                    afterrender: function(c) {
                    	c.getEl().on('dblclick', function() {
                			var popup = Ext.create("Popup.view.WinBpPop");
                			popup.show();
                			
                			Ext.getCmp('fieldType').setValue('GRID');
                			var store = Ext.getStore('WinBpPopStore');
                			store.removeAll();
                        });
                    }
                },
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 11px; text-align: center; font-weight: bold; ',
            width: 100,
            sortable: true,
            dataIndex: 'M_BP_NM',
            enableTextSelection: true,
            text: '공급업체',
            editor: {
                xtype: 'textfield',
                style: 'text-align:left',
                allowBlank: false,
                blankText: '필수 입력사항입니다.',
                listeners: {
                    afterrender: function(c) {
                    	c.getEl().on('dblclick', function() {
                			var popup = Ext.create("Popup.view.WinBpPop");
                			popup.show();
                			
                			Ext.getCmp('fieldType').setValue('GRID');
                			var store = Ext.getStore('WinBpPopStore');
                			store.removeAll();
                        });
                    }
                },
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; ',
            width: 250,
            sortable: true,
            dataIndex: 'ITEM_NM',
            enableTextSelection: true,
            text: '품명',
            editor: {
                xtype: 'textfield',
                style: 'text-align:left',
                allowBlank: false,
                blankText: '필수 입력사항입니다.'
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; !important;color:#ff6633',
            width: 100,
            sortable: true,
            dataIndex: 'UNIT',
            enableTextSelection: true,
            text: '단위',
            editor: {
                xtype: 'textfield',
                style: 'text-align:left',
                allowBlank: false,
                blankText: '필수 입력사항입니다.'
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; !important;color:#ff6633',
            width: 125,
            sortable: true,
            dataIndex: 'SPEC',
            enableTextSelection: true,
            text: '규격',
            editor: {
                xtype: 'textfield',
                style: 'text-align:left',
                allowBlank: false,
                blankText: '필수 입력사항입니다.'
            }
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 11px; text-align: center; font-weight: bold; !important;color:#ff6633',
            width: 100,
            align: 'end',
            dataIndex: 'MID_PACK_QTY',
            enableTextSelection: true,
            exportStyle: {
                alignment: {
                    horizontal: 'Right'
                }
            },
            text: '적입수량/BOX',
            format: '0,000',
            editor: {
                xtype: 'numberfield',
                style: 'text-align:right',
                allowBlank: false,
                allowExponential: false,
                minValue: 0
            }
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 11px; text-align: center; font-weight: bold; !important;color:#ff6633',
            width: 100,
            align: 'end',
            dataIndex: 'MAX_PACK_QTY',
            enableTextSelection: true,
            exportStyle: {
                alignment: {
                    horizontal: 'Right'
                }
            },
            text: '박스수량/1PAL',
            format: '0,000',
            editor: {
                xtype: 'numberfield',
                style: 'text-align:right',
                allowBlank: false,
                allowExponential: false,
                minValue: 0
            }
        },
        {
        	xtype: 'numbercolumn',
        	style: 'font-size: 11px; text-align: center; font-weight: bold; ',
        	width: 100,
        	align: 'end',
        	dataIndex: 'PAL_QTY',
        	enableTextSelection: true,
        	exportStyle: {
        		alignment: {
        			horizontal: 'Right'
        		}
        	},
        	text: 'PAL 총 수량',
        	format: '0,000',
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 11px; text-align: center; font-weight: bold;',
            width: 100,
            align: 'end',
            dataIndex: 'M_PRICE',
            enableTextSelection: true,
            exportStyle: {
                alignment: {
                    horizontal: 'Right'
                }
            },
            text: '매입가(KRW)',
            format: '0,000.00',
            editor: {
                xtype: 'numberfield',
                style: 'text-align:right',
                allowBlank: false,
                allowExponential: false,
                decimalPrecision: 3,
                minValue: 0
            }
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 11px; text-align: center; font-weight: bold; ',
            width: 100,
            align: 'end',
            dataIndex: 'S_PRICE',
            enableTextSelection: true,
            exportStyle: {
                alignment: {
                    horizontal: 'Right'
                }
            },
            text: '판매가(USD)',
            format: '0,000.000000',
            editor: {
                xtype: 'numberfield',
                style: 'text-align:right',
                allowBlank: false,
                allowExponential: false,
                decimalPrecision: 6,
                minValue: 0
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 100,
            sortable: true,
            dataIndex: 'HSCODE',
            enableTextSelection: true,
            text: 'HS_CODE',
            editor: {
                xtype: 'textfield',
                style: 'text-align:left',
                allowBlank: false,
                blankText: '필수 입력사항입니다.'
            }
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 11px; text-align: center; font-weight: bold;',
            width: 100,
            align: 'end',
            dataIndex: 'WEIGHT',
            enableTextSelection: true,
            exportStyle: {
                alignment: {
                    horizontal: 'Right'
                }
            },
            text: '단위중량',
            format: '0,000.00000',
            editor: {
                xtype: 'numberfield',
                style: 'text-align:right',
                allowBlank: false,
                allowExponential: false,
                minValue: 0
            }
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 100,
            dataIndex: 'combobox',
            text: '콤보박스',
            editor: {
                xtype: 'combobox',
                autoLoadOnValue: true
            }
        }
    ],
    selModel: {
        selType: 'checkboxmodel',
        checkOnly: true,
        listeners: {
            select: 'onCheckboxModelSelect',
            deselect: 'onCheckboxModelDeselect'
        }
    },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        {
            ptype: 'clipboard'
        },
        {
            ptype: 'cellediting',
            clicksToEdit: 2,
            listeners: {
            	edit: function(editor, context, eOpts) {
            		var selModel= Ext.getCmp('myGrid').getSelectionModel();
            		selModel.select(context.record, true);
            	},
            	beforeedit: function(editor, context, eOpts) {
            		if((context.record.phantom == false) && (context.field == 'BP_ITEM_CD' 
            												|| context.field == 'ITEM_CD' 
            												||context.field == 'S_BP_CD' 
            												||context.field == 'S_BP_NM' 
            												||context.field == 'M_BP_CD' 
            												||context.field == 'M_BP_NM' 
            												||context.field == 'ITEM_NM' 
//            												||context.field == 'M_PRICE' 
//            												||context.field == 'S_PRICE' 
            												||context.field == 'HSCODE' 
            												||context.field == 'WEIGHT' 
            												)
            		) 
            		{
            			context.cancel = true;
            		} else {
            			context.cancel = false;
            		}
               }
            }
        }
    ]

});