/*
 * File: app/view/MyGrid1.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_COL_STATUS_HSPF.view.MyGrid1', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.mygrid1',

    requires: [
        'M_COL_STATUS_HSPF.view.MyGrid1ViewModel',
        'Ext.view.Table',
        'Ext.grid.column.RowNumberer',
        'Ext.form.field.Text',
        'Ext.grid.column.Number',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.CellEditing'
    ],

    config: {
        tbar: [
            {
                xtype: 'container',
                flex: 1
            },
            {
                xtype: 'button',
                glyph: 'xf1c3@FontAwesome',
                id: 'xlsxDown1',
                cfg: {
                    type: 'excel07',
                    ext: 'xlsx'
                },
                iconCls: 'grid-excel-btn',
                margin: '0 3 0 0',
            }
        ]
    },

    viewModel: {
        type: 'mygrid1'
    },
    id: 'myGrid1',
    style: 'border: 1px solid #659DDC; padding: 5px;',
    bodyBorder: false,
    header: false,
    store: 'MyStore1',

    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            text: 'V_TYPE',
            dataIndex: 'V_TYPE',
        },
        {
        	xtype: 'datecolumn',
        	style: 'text-align: center; font-weight: bold;',
        	dataIndex: 'COL_DT',
        	text: '등록일',
        	format: 'Y-m-d',
        	align: 'center',
        	filter: {
                type: 'list'
            },
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'APPROV_NM',
            text: '진행명',
            width: 410,
            filter: {
                type: 'list'
            },
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'COL_TYPE',
            text: '담보유형',
            hidden: true
        },
        {
        	xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'COL_NM',
            text: '담보유형',
            width: 130,
            filter: {
                type: 'list'
            },
        },
        {
        	xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'LC_DOC_NO',
            text: 'L/C 번호',
            width: 150,
            filter: {
                type: 'list'
            },
        },
        {
        	xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'BL_DOC_NO',
            text: 'B/L 번호',
            width: 150,
            filter: {
                type: 'list'
            },
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            text: '입고수량',
            format: '0,000.00',
            dataIndex: 'QTY',
            width: 130,
            align: 'right',
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
	        },
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            text: '출고수량',
            format: '0,000.00',
            dataIndex: 'DN_QTY',
            width: 130,
            align: 'right',
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
	        },
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            text: '재고수량',
            format: '0,000.00',
            dataIndex: 'GR_QTY',
            width: 130,
            align: 'right',
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
	        },
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            text: '사용중금액',
            format: '0,000',
            dataIndex: 'USE_AMT',
            width: 130,
            align: 'right',
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
	        },
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            text: '정리금액',
            format: '0,000',
            dataIndex: 'CLS_AMT',
            width: 130,
            align: 'right',
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
	        },
        },
        {
        	xtype: 'datecolumn',
        	style: 'text-align: center; font-weight: bold;',
        	dataIndex: 'CLS_DT',
        	text: '정리일자',
        	format: 'Y-m-d',
        	align: 'center'
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	text: '진행사항',
        	dataIndex: 'STATUS',
        	width: 200,
        },
    ],
    selModel: {
        selType: 'checkboxmodel',
        listeners: {
        	select: function(rowmodel, record, index, eOpts) {
        		record.set('V_TYPE', 'V');
        	},
        	deselect: function(rowmodel, record, index, eOpts) {
        		record.set('V_TYPE', '');
        	}
        }
    },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        {
            ptype: 'gridfilters'
        }
    ],
    features : [ {
		ftype : 'summary',
		dock: 'bottom'
	} ],
    viewConfig: {
    	enableTextSelection: true,
    },

});