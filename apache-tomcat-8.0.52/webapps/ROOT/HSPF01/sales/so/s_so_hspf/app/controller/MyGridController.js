/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_SO_HSPF.controller.MyGridController', {
	extend : 'Ext.app.Controller',

	stores : [ 'MyStore' ],

	control : {
		"#gridAddBtn" : {
			click : 'gridAddBtnClick'
		},
		"#gridDelBtn" : {
			click : 'gridDelBtnClick'
		},
		"#gridSaveBtn" : {
			click : 'gridSaveBtnClick'
		},
		'#myGrid' : {
			celldblclick : 'gridDblClick',
		},
		"#xlsxDown" : {
			click : 'xlsxDownClick'
		},
		"#xmlDown" : {
			click : 'xmlDownClick'
		}
	},

	gridAddBtnClick : function(button, e, eOpts) {
		if(Ext.getCmp('V_SO_CFM').getValue() == 'Y') {
			Ext.Msg.alert('확인', '확정된 발주입니다.');
		} else if (Ext.getCmp('V_SO_DT').getValue() == null) {
			Ext.Msg.alert('확인', '수주일을 입력하세요.');
		} else if (Ext.getCmp('V_BP_CD').getValue() == '' || 
				   Ext.getCmp('V_BP_NM').getValue() == '') {
			Ext.Msg.alert('확인', '고객사를 입력하세요.');
		} else if (Ext.getCmp('V_SO_TYPE').getValue() == 'T') {
			Ext.Msg.alert('확인', '수주형태를 선택하세요.');
		} else if (Ext.getCmp('V_PAY_METH').getValue() == 'T') {
			Ext.Msg.alert('확인', '결제방법을 선택하세요.');
		} else if (Ext.getCmp('V_DLVY_HOPE_DT').getValue() == null) {
			Ext.Msg.alert('확인', '납기요청일을 입력하세요.');
		} else if (Ext.getCmp('V_CUR').getValue() == null) {
			Ext.Msg.alert('확인', '화폐단위를 선택하세요.');
		} else if (Ext.getCmp('V_XCH_RATE').getValue() == null) {
			Ext.Msg.alert('확인', '환율을 입력하세요.'); 
		} else {
			var popup = Ext.create("S_SO_HSPF.view.WinAddRow");
			popup.show();
			Ext.getCmp('rowCount').setValue(1);
		}
	},

	gridDelBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();

		if(Ext.getCmp('V_SO_CFM').getValue() == 'Y') {
			Ext.Msg.alert('확인', '확정된 발주입니다.');
		} else {
			if (gridRecord.length > 0) {
				Ext.Msg.confirm('확인', '삭제하시겠습니까?', function(button) {
					if (button == 'yes') {
						for (var i = 0; i < gridRecord.length; i++) {
							if (gridRecord[i].data['V_TYPE'] == 'V') {
								gridRecord[i].set('V_TYPE', 'ID');
							}
						}
						store.sync({
							params : {
								V_TYPE : 'U',
								V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
								V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							},
							callback : function(records,operations,success){
								store.reload();
            				},
							success : function(response) {
								
							}
						});
					}
				});
			}
		}
	},

	gridSaveBtnClick : function() {
		var store = Ext.getStore('MyStore');
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';
		var selModel= Ext.getCmp('myGrid').getSelectionModel();
		
		if(Ext.getCmp('V_SO_CFM').getValue() == 'Y') {
			Ext.Msg.alert('확인', '확정된 발주입니다.');
		} else if (Ext.getCmp('V_SO_TYPE').getValue() == 'T') {
			Ext.Msg.alert('확인', '수주형태를 선택하세요.');
		} else if (Ext.getCmp('V_SO_DT').getValue() == null) {
			Ext.Msg.alert('확인', '수주일을 입력하세요.');
		} else if (Ext.getCmp('V_PAY_METH').getValue() == 'T') {
			Ext.Msg.alert('확인', '결제방법을 선택하세요.');
		} else if (Ext.getCmp('V_DLVY_HOPE_DT').getValue() == null) {
			Ext.Msg.alert('확인', '납기요청일을 입력하세요.');
		} else if (Ext.getCmp('V_BP_CD').getValue() == '' || 
				   Ext.getCmp('V_BP_NM').getValue() == '') {
			Ext.Msg.alert('확인', '고객사를 입력하세요.');
		} else if (Ext.getCmp('V_CUR').getValue() == null) {
			Ext.Msg.alert('확인', '화폐단위를 선택하세요.');
		} else if (Ext.getCmp('V_XCH_RATE').getValue() == null) {
			Ext.Msg.alert('확인', '환율을 입력하세요.');
		} else {
			store.each(function(record,idx){
				if(record.get('ITEM_CD')==undefined) {
					flag = 'F';
					msg = '품목코드를 입력하세요.';
				} else if(record.get('QTY')==undefined || record.get('QTY') == '0' ) {
					flag = 'F';
					msg = '수량을 확인하세요.';
				} else if(record.get('VAT_TYPE')==undefined) {
					flag = 'F';
					msg = '부가세유형을 선택하세요.';
				} else if(record.get('DLVY_HOPE_DT')==undefined) {
					flag = 'F';
					msg = '납기요청일을 입력하세요.';
				} else {
					flag = 'T';
					if (record.phantom == true && record.get('SO_NO')==undefined) { // 신규저장
						record.set('V_TYPE', 'IC');
					} else if (record.phantom == true && record.get('SO_NO')!=undefined) { // 수정추가
						record.set('V_TYPE', 'IU');	
					} else if (record.phantom == false) { // 수정
						record.set('V_TYPE', 'IU');
					}
				}
			});
			
		} 
		if (flag == 'T') {
			store.sync({
				params : {
					V_TYPE : 'U',
					V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
					V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
					V_SO_NO: Ext.getCmp('V_SO_NO').getValue(),
					V_SO_DT: Ext.getCmp('V_SO_DT').getValue(),
					V_SO_TYPE: Ext.getCmp('V_SO_TYPE').getValue(),
					V_PAY_METH: Ext.getCmp('V_PAY_METH').getValue(),
					V_DLVY_HOPE_DT: Ext.getCmp('V_DLVY_HOPE_DT').getValue(),
					V_CUST_ORDER_NO: Ext.getCmp('V_CUST_ORDER_NO').getValue(),
					V_BP_CD: Ext.getCmp('V_BP_CD').getValue(),
					V_CUR: Ext.getCmp('V_CUR').getValue(),
					V_XCH_RATE: Ext.getCmp('V_XCH_RATE').getValue(),
				},
				callback : function(records,operations,success){
					var response = records.operations[0]._response.responseText;
					Ext.getCmp('V_SO_NO').setValue(response);
					var tbController = S_SO_HSPF.app.getController("TbButtonController");
					tbController.selBtnClick();
				},
				success : function(response) {
					
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}
	},

	gridDblClick : function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
		// 품목코드
		if (cellIndex == 5) {
			if(Ext.getCmp('V_SO_CFM').getValue() != 'Y') {
				var popup = Ext.create('Popup.view.WinItemDetailPop');
				var width = Ext.getBody().getViewSize().width - 800;
				var height = Ext.getBody().getViewSize().height - 200;
				popup.setSize(width, height);
				popup.center();
				popup.show();
			}
		}
	},

	xlsxDownClick : function(button, e, eOpts) {
		var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
		var grid = Ext.getCmp('myGrid');
		grid.saveDocumentAs({
			type : 'xlsx',
			title : '수주등록', // 엑셀내타이틀
			fileName : currentDate + '.xlsx' // 엑셀파일이름
		});
	},


});
