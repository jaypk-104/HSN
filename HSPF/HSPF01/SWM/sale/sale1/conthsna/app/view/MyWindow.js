/*
 * File: app/view/MyWindow.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ContHsna.view.MyWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.mywindow',

    requires: [
        'ContHsna.view.MyWindowViewModel',
        'Ext.form.field.Date',
        'Ext.button.Button',
        'Ext.form.RadioGroup',
        'Ext.form.field.Radio',
        'Ext.grid.Panel',
        'Ext.grid.column.Date',
        'Ext.grid.column.Number',
        'Ext.view.Table'
    ],

    viewModel: {
        type: 'mywindow'
    },
    modal: true,
    flex: 1,
    width: 550,
    title: '컨테이너팝업',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'container',
            margin: '0 10 0 -3',
            layout: {
                type: 'hbox',
                align: 'stretch',
                padding: 10
            },
            items: [
                {
                    xtype: 'datefield',
                    id: 'u_cont_dt_from',
                    maxWidth: 260,
                    minWidth: 260,
                    width: 260,
                    fieldLabel: '컨테이너 등록일자',
                    labelStyle: 'font-size: 11px',
                    altFormats: 'm/d/Y|n/j/Y|n/j/y|m/j/y|n/d/y|m/j/Y|n/d/Y|m-d-y|m-d-Y|m/d|m-d|md|mdy|mdY|d|Y-m-d|n-j|n/j|Ymd',
                    format: 'Y-m-d',
                    listeners: {
                        render: 'onFromRender'
                    }
                },
                {
                    xtype: 'datefield',
                    flex: 1,
                    id: 'u_cont_dt_to',
                    margin: '0 0 0 3',
                    maxWidth: 170,
                    minWidth: 170,
                    width: 170,
                    fieldLabel: '~',
                    labelWidth: 10,
                    altFormats: 'm/d/Y|n/j/Y|n/j/y|m/j/y|n/d/y|m/j/Y|n/d/Y|m-d-y|m-d-Y|m/d|m-d|md|mdy|mdY|d|Y-m-d|n-j|n/j|Ymd',
                    format: 'Y-m-d',
                    listeners: {
                        render: 'onToRender'
                    }
                },
                {
                    xtype: 'button',
                    id: 'searchBtn1',
                    margin: '0 0 0 5',
                    maxWidth: 80,
                    minWidth: 80,
                    width: 80,
                    text: '조회'
                }
            ]
        },
        {
            xtype: 'container',
            layout: 'center',
            items: [
                {
                    xtype: 'radiogroup',
                    id: 'u_cfm',
                    width: 400,
                    fieldLabel: '확정',
                    labelWidth: 80,
                    items: [
                        {
                            xtype: 'radiofield',
                            name: 'u_cfm',
                            boxLabel: 'Y',
                            inputValue: 'Y'
                        },
                        {
                            xtype: 'radiofield',
                            name: 'u_cfm',
                            boxLabel: 'N',
                            checked: true,
                            inputValue: 'N'
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'container',
            flex: 1,
            margin: '0 5 5 5',
            items: [
                {
                    xtype: 'gridpanel',
                    flex: 1,
                    height: 250,
                    id: 'gridW',
                    maxHeight: 250,
                    minHeight: 250,
                    store: 'PopStore',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            maxWidth: 150,
                            minWidth: 150,
                            style: 'font-size: 12px; text-align: center; font-weight: bold;',
                            width: 150,
                            defaultWidth: 150,
                            dataIndex: 'CONT_MGM_NO',
                            text: '컨테이너관리번호'
                        },
                        {
                            xtype: 'gridcolumn',
                            maxWidth: 150,
                            minWidth: 150,
                            style: 'font-size: 12px; text-align: center; font-weight: bold;',
                            width: 150,
                            defaultWidth: 150,
                            dataIndex: 'CONT_NO',
                            text: '컨테이너번호'
                        },
                        {
                            xtype: 'datecolumn',
                            maxWidth: 120,
                            minWidth: 120,
                            style: 'font-size: 12px; text-align: center; font-weight: bold;',
                            width: 120,
                            dataIndex: 'CONT_DT',
                            text: '컨테이너등록일자',
                            format: 'Y-m-d'
                        },
                        {
                            xtype: 'numbercolumn',
                            style: 'font-size: 12px; text-align: center; font-weight: bold;',
                            align: 'end',
                            dataIndex: 'PAL_BC_CNT',
                            text: 'PALLET 수량'
                        }
                    ]
                }
            ]
        }
    ],

    onFromRender: function(component, eOpts) {
        var nows = new Date();
        		nows.setDate(nows.getDate() - 30);
        		component.setValue(nows);
    },

    onToRender: function(component, eOpts) {
        	var nows = new Date();
        		nows.setDate(nows.getDate() + 30);
        		component.setValue(nows);
    }

});