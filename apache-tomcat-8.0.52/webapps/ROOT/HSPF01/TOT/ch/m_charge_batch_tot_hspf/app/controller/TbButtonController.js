/*
 * File: app/controller/TbButtonController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_CHARGE_BATCH_TOT_HSPF.controller.TbButtonController', {
    extend: 'Ext.app.Controller',

    stores: ['MyStore', 'MyStore1', 'MyStore2'],
    control: {
        "#selBtn": {
            click: 'selBtnClick'
        },
        "#saveBtn": {
            click: 'saveBtnClick'
        },
        "#clsBtn": {
            click: 'clsBtnClick'
        },
        "#clrBtn": {
            click: 'clrBtnClick'
        },
        "myviewport textfield[name=search_field]": {
            specialkey: 'tfEnter'
        },
    },

    selBtnClick: function(button, e, eOpts) {
    	var store = Ext.getStore('MyStore');
    	var store1 = Ext.getStore('MyStore1');
    	var store2 = Ext.getStore('MyStore2');
    	var activeTab = Ext.getCmp('myTab').getActiveTab().xtype;
    	
    	if(activeTab === 'mypanel'){
    		store.load({
				params : {
					V_TYPE : 'T1S',
					V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
					V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
					V_CH_DT_FR: Ext.getCmp('V_CH_DT_FR').getValue(),
					V_CH_DT_TO: Ext.getCmp('V_CH_DT_TO').getValue(),
					V_BP_CD: Ext.getCmp('V_BP_CD').getValue(),
					V_CHARGE_CD: Ext.getCmp('V_CHARGE_CD').getValue(),
					V_LC_DOC_NO: Ext.getCmp('V_LC_DOC_NO').getValue(),
				},
				callback : function(records, operations, success) {

				},
			});
    	} else if(activeTab === 'mypanel1'){
    		store2.removeAll();
    		
    		store1.load({
				params : {
					V_TYPE : 'T2SH',
					V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
					V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
					V_CH_DT_FR: Ext.getCmp('V_CH_DT_FR').getValue(),
					V_CH_DT_TO: Ext.getCmp('V_CH_DT_TO').getValue(),
					V_BP_CD: Ext.getCmp('V_BP_CD').getValue(),
					V_CHARGE_CD: Ext.getCmp('V_CHARGE_CD').getValue(),
					V_LC_DOC_NO: Ext.getCmp('V_LC_DOC_NO').getValue(),
					V_TEMP_GL_NO: Ext.getCmp('V_TEMP_GL_NO').getValue(),
				},
				callback : function(records, operations, success) {
					
				},
			});
    	}
		
    },

    saveBtnClick: function(button, e, eOpts) {
    	
    },
    
    clsBtnClick: function(button, e, eOpts) {
		var tab = parent.Ext.getCmp('myTab');
		var activeTab = tab.getActiveTab();
		var tabIndex = tab.items.indexOf(activeTab);
		tab.remove(tabIndex, true);
	},
	
	clrBtnClick: function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
    	var store1 = Ext.getStore('MyStore1');
    	var store2 = Ext.getStore('MyStore2');
    	
    	store.removeAll();
    	store1.removeAll();
    	store2.removeAll();
	},
	

    tfEnter: function(field, e, eOpts) {
        if (e.getKey() == e.ENTER) {
        	this.selBtnClick();
        }
    },
    
    onLaunch: function(application) {
    	var BPstore = Ext.getStore('WinBpPopStore');
    	BPstore.load();
    },
    
});
