/*
 * File: app/controller/TbButtonController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Z_USR_INFO_HSPF.controller.TbButtonController', {
    extend: 'Ext.app.Controller',
    stores: ['MyStore'], 
    control: {
        "#selBtn": {
            click: 'selBtnClick'
        },
        "#saveBtn": {
            click: 'saveBtnClick'
        },
        "#delBtn": {
            click: 'delBtnClick'
        },
        "#clsBtn": {
            click: 'clsBtnClick'
        },
        "mysearchform textfield[name=search_field]": {
            specialkey: 'tfEnter'
        }
    },

    selBtnClick: function(button, e, eOpts) {
    	var store = this.getMyStoreStore();
    	store.removeAll();
    	store.load({
    		params: {
    			V_TYPE: 'S',
    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    			V_USER_ID: Ext.getCmp('V_USER_ID').getValue(),
    			V_USER_NM: Ext.getCmp('V_USER_NM').getValue(),
    			V_ROLE_CD: Ext.getCmp('V_ROLE_CD').getValue()
    		},
    		callback: function(records,operations,success){
    		}
    	});
    },

    saveBtnClick: function(button, e, eOpts) {
    	var store = this.getMyStoreStore();
    	var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
    	var flag = '';
    	var msg = '';
    	
    	for(var i=0; i<gridRecord.length; i++) {
    		
    		if (gridRecord[i].crudState == 'C') { // 저장
				gridRecord[i].set('V_TYPE', 'I');
			} else if (gridRecord[i].crudState == 'U') { // 수정
				gridRecord[i].set('V_TYPE', 'U');
			}
    		
    		if(gridRecord[i].data['USR_ID'] == undefined) {
    			flag = 'F';
    			msg = '사용자아이디를 입력하세요.';
    			break;
    		} else if(gridRecord[i].data['USR_NM'] == undefined) {
    			flag = 'F';
    			msg = '사용자이름을 입력하세요.';
    			break;
    		} else if(gridRecord[i].data['ROLE_CD'] == undefined) {
    			flag = 'F';
    			msg = '사용자 권한을 입력하세요.';
    			break;
    		} else if(gridRecord[i].data['BP_CD'] == undefined) {
    			flag = 'F';
    			msg = '거래처코드를 입력하세요.';
    			break;
    		} else if(gridRecord[i].data['USE_YN'] == undefined) {
    			flag = 'F';
    			msg = '사용유무를 선택하세요.';
    			break;
    		} else if(gridRecord[i].data['QUERY_ALL_YN'] == undefined) {
    			flag = 'F';
    			msg = '조회권한을 선택하세요.';
    			break;
    		} else if(gridRecord[i].data['PRINT_YN'] == undefined) {
    			flag = 'F';
    			msg = '출력권한을 선택하세요.';
    			break;
    		} else if(gridRecord[i].data['INSRT_YN'] == undefined) {
    			flag = 'F';
    			msg = '등록권한을 선택하세요.';
    			break;
    		} else if(gridRecord[i].data['USR_NM'] == undefined) {
    			flag = 'F';
    			msg = '사용자이름을 입력하세요.';
    			break;
    		}
			else {
				flag = 'T';
			}
    	}
    	
    	if(gridRecord.length > 0) {
    		if(flag == 'T') {
    			Ext.Msg.confirm('확인','저장하시겠습니까?', function(button){
    				if(button == 'yes') {
    					store.sync({
    						params: {
    							V_TYPE: 'SYNC',
    							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
    							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
    						},
    						callback: function(records, operation, success) {
    							Ext.toast({
    								title : ' ',
    								timeout : 1000,
    								html : '저장완료',
    								style : 'text-align: center',
    								align : 't',
    								width : 130,
    							});

    							var tbController = Z_USR_INFO_HSPF.app.getController("TbButtonController");
    							tbController.selBtnClick();
    						}
    					});
    				}
    			});
    		} else {
    			Ext.Msg.alert('확인', msg);
    		}
    	} else {
    		Ext.Msg.alert('확인', '내역을 선택하세요.');
    	}
    },

    delBtnClick: function(button, e, eOpts) {
        alert('delete');
    },

    clsBtnClick: function(button, e, eOpts) {
    	var tab=parent.Ext.getCmp('myTab');
        var activeTab=tab.getActiveTab();
        var tabIndex=tab.items.indexOf(activeTab);
        tab.remove(tabIndex,true);
    },

    tfEnter: function(field, e, eOpts) {
        	if (e.getKey() == e.ENTER) {
        		this.selBtnClick();
        	}
    }

});
