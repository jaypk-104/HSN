/*
 * File: app/controller/TbButtonController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_DD_CFM_HSPF.controller.TbButtonController', {
    extend: 'Ext.app.Controller',
    stores: ['MyStore'],
    control: {
        "#selBtn": {
            click: 'selBtnClick'
        },
        "#saveBtn": {
            click: 'saveBtnClick'
        },
        "#delBtn": {
            click: 'delBtnClick'
        },
        "#clsBtn": {
            click: 'clsBtnClick'
        },
        "mysearchform textfield[name=search_field]": {
            specialkey: 'tfEnter'
        },
        '#chk' : {
    		change: 'chkChange'
		},
    },

    selBtnClick: function(button, e, eOpts) {
    	var store = this.getMyStoreStore();
    	store.removeAll();
    	var V_CFM_YN = '';
    	if(Ext.getCmp('chk').getValue() == true) {
    		V_CFM_YN = 'N';
    	} else {
    		V_CFM_YN = '';
    	}
    	
    	store.load({
    		params: {
    			V_TYPE: 'S',
    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    			V_S_BP_NM: Ext.getCmp('V_S_BP_NM').getValue(),
    			V_DD_DT_FR: Ext.getCmp('V_DD_DT_FR').getValue(),
    			V_DD_DT_TO: Ext.getCmp('V_DD_DT_TO').getValue(),
    			V_DD_NO: Ext.getCmp('V_DD_NO').getValue(),
    			V_CFM_YN: V_CFM_YN ,
    			V_SL_CD: Ext.getCmp('V_SL_CD').getValue()
    		},
    		callback: function(records,operations,success){
    			var store = Ext.getStore('ComboStore');
		    	store.load({
		    		params: {
		    			V_TYPE: 'CB',
		    			V_DD_DT_FR: Ext.getCmp('V_DD_DT_FR').getValue(),
		    			V_DD_DT_TO: Ext.getCmp('V_DD_DT_TO').getValue(),
		    		}     	
				});
		    	
		    	var store2 = Ext.getStore('CarStore');
		    	store2.load({
		    		params: {
		    			V_TYPE: 'CAR',
		    		}     	
				});
    		}
    	});
    },

    chkChange: function(field, newValue, oldValue, eOpts) {
    	var store = this.getMyStoreStore();
    	store.removeAll();
    	var V_CFM_YN = '';
    	if(Ext.getCmp('chk').getValue() == true) {
    		V_CFM_YN = 'N';
    	} else {
    		V_CFM_YN = '';
    	}
    	
    	store.load({
    		params: {
    			V_TYPE: 'S',
    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    			V_S_BP_NM: Ext.getCmp('V_S_BP_NM').getValue(),
    			V_DD_DT_FR: Ext.getCmp('V_DD_DT_FR').getValue(),
    			V_DD_DT_TO: Ext.getCmp('V_DD_DT_TO').getValue(),
    			V_DD_NO: Ext.getCmp('V_DD_NO').getValue(),
    			V_CFM_YN: V_CFM_YN 
    		},
    		callback: function(records,operations,success){
    			var store = Ext.getStore('ComboStore');
		    	store.load({
		    		params: {
		    			V_TYPE: 'CB',
		    			V_DD_DT_FR: Ext.getCmp('V_DD_DT_FR').getValue(),
		    			V_DD_DT_TO: Ext.getCmp('V_DD_DT_TO').getValue(),
		    		}     	
				});
		    	
		    	var store2 = Ext.getStore('CarStore');
		    	store2.load({
		    		params: {
		    			V_TYPE: 'CAR',
		    		}     	
				});
    		}
    	});
    },
    
    saveBtnClick: function(button, e, eOpts) {
        var store = Ext.getStore('MyStore');
    	var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();

    	if(gridRecord.length > 0) {
    		Ext.Msg.confirm('확인','저장하시겠습니까?', function(button){
    			if(button == 'yes') {
					for(var i=0; i<gridRecord.length; i++) {
			    		if(gridRecord[i].data['V_TYPE']=='V') {
			    			gridRecord[i].set('V_TYPE', 'I');
			    		}
			    	}
			    	store.sync({
						params: {
							V_TYPE: 'SYNC',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
						},
			    		callback: function(records, operation, success) {
			    			store.reload();
						}
			    	});
    			}
    		});
    	}
    },

    delBtnClick: function(button, e, eOpts) {
        alert('delete');
    },

    clsBtnClick: function(button, e, eOpts) {
        alert('close');
    },

    tfEnter: function(field, e, eOpts) {
        	if (e.getKey() == e.ENTER) {
        		this.selBtnClick();
        	}
    }

});
