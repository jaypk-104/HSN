/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_COL_DISTB.controller.MyGridController', {
    extend: 'Ext.app.Controller',
	stores : [ 'MyStore'],
	control : {
		"#gridAddBtn" : {
			click : 'gridAddBtnClick'
		},
		'#gridDelBtn' : {
			click : 'gridDelBtnClick'
		},
		"#gridSaveBtn" : { // 
			click : 'gridSaveBtnClick'
		},
		"#myGrid" : {
			cellclick: 'myGridCellClick'
		},
		"#xlsxDown2" : { // 
			click : 'xlsxDown2Click'
		},
		"#xlsxDown1" : { // 
			click : 'xlsxDownClick'
		},
		"#gridCopyBtn" : { // 
			click : 'gridCopyBtnClick'
		},
		
	},
	
	gridAddBtnClick: function() {
		var msg = '';
		var flag = 'T';

		if (Ext.getCmp('V_MAST_DB_NO').getValue() == '' || Ext.getCmp('V_MAST_DB_NO').getValue() == null) {
			flag = 'F';
			msg = '담보번호를 입력하세요.';
		} else {
			flag = 'T';
		}

		if (flag == 'T') {
			var popup = Ext.create("M_COL_DISTB.view.WinAddRow");
			popup.show();
			Ext.getCmp('rowCount').setValue(1);
		} else {
			Ext.Msg.alert('확인', msg);
		}
	},
	
	gridDelBtnClick: function() {
		var store = this.getMyStoreStore();
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		
		Ext.MessageBox.confirm('확인', '삭제하시겠습니까?', function(btn) {
			if(btn == 'yes') {
				for(var i=0; i<gridRecord.length; i++) {
					if(gridRecord[i].data['V_TYPE'] == 'V' && gridRecord[i].phantom == true) {
						store.remove(gridRecord[i]);
					} else if(gridRecord[i].data['V_TYPE'] == 'V' && gridRecord[i].phantom == false) {
						gridRecord[i].set('V_TYPE', 'D');
					}
				}
				store.sync({
					params : {
						V_TAB_TYPE: 'T1',
						V_TYPE : 'SYNC',
						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
//						V_APPROV_MGM_NO: Ext.getCmp('V_APPROV_MGM_NO').getValue(),
					},
					callback : function(records, operation, success) {
						var res = records.operations[0]._response.responseText;
						
						if(res.match('Exception')) {
							Ext.Msg.alert('확인', res);
						} else {
							store.reload();
						}
					}, 
					success: function() {
					}
				});
			}
		});
		
	},
	
	gridSaveBtnClick: function() {
		var store = this.getMyStoreStore(); 
		var flag = '';
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		
		store.each(function(record, idx) {
			if(record.phantom == true) {
				record.set('V_TYPE', 'I');
			} else if (record.phantom == false) {
				record.set('V_TYPE', 'U');
			}
		})
		store.sync({
			params : {
				V_TYPE : 'SYNC',
				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
			},
			callback : function(records, operation, success) {
				var res = records.operations[0]._response.responseText;
				
				if(res.match('Exception')) {
					Ext.Msg.alert('확인', res);
				} else {
					store.reload();
				}
			}, 
			success: function() {
			}
		});
	},
	
	myGridCellClick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
		
		var APPROV_MGM_NO = record.data.APPROV_MGM_NO;
		var APPROV_MGM_SEQ = record.data.APPROV_MGM_SEQ;
		var store1 = Ext.getStore('MyStore1');
		
		store1.load({
			params: {
				V_TAB_TYPE: 'T1',
				V_TYPE: 'SD2',
				V_APPROV_MGM_NO : APPROV_MGM_NO,
				V_APPROV_MGM_SEQ : APPROV_MGM_SEQ,
				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
			},
			callback: function(records){
			}
		})
	},
	xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('myGrid');
    	grid.saveDocumentAs({
            type: 'xlsx',
            title: '담보등록', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
		});
	},
	xlsxDown2Click: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('myGrid2');
    	grid.saveDocumentAs({
            type: 'xlsx',
            title: '담보등록', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
		});
	},
	gridCopyBtnClick: function() {
		var store = this.getMyStoreStore(); 
		var flag = '';
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		
		for(var i=0; i < gridRecord.length; i++) {
			if(i > 0) {
				gridRecord[i].set('COL_TYPE', gridRecord[0].get('COL_TYPE'));
				gridRecord[i].set('COL_AVL_AMT', gridRecord[0].get('COL_AVL_AMT'));
				gridRecord[i].set('COL_AMT', Math.ceil(gridRecord[i].get('COL_DOC_AMT') * gridRecord[0].get('LOAN_RT') * gridRecord[0].get('XCH_RATE') / 100000) * 100000);
				
			}
			
		}
	}

});
