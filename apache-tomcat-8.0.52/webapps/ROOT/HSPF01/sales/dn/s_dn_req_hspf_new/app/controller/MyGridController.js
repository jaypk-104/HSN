/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_DN_REQ_HSPF_NEW.controller.MyGridController', {
    extend: 'Ext.app.Controller',

    stores: [
        'MyStore', 'MyStore1'
    ],

    control: {
        "#gridAddBtn": {
            click: 'gridAddBtnClick'
        },
        "#gridDelBtn": {
            click: 'gridDelBtnClick'
        },
        "#xlsxDown": {
            click: 'xlsxDownClick'
        },
        "#xmlDown": {
            click: 'xmlDownClick'
        },
        "#gridRequestBtn": {
            click: 'gridRequestBtnClick'
        },
        '#myGrid' : {
        	cellclick: 'mygridCellClick'
        },
        "#poReqBtn": {
        	click: 'poReqBtnClick'
        },
    },

    gridAddBtnClick: function(button, e, eOpts) {
        var popup = Ext.create("S_DN_REQ_HSPF_NEW.view.WinAddRow");
        popup.show();
        Ext.getCmp('rowCount').setValue(1);
    },

    gridDelBtnClick: function(button, e, eOpts) {
        var store = Ext.getStore('MyStore');
            	var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();

            	if(gridRecord.length > 0) {
            		Ext.Msg.confirm('확인','삭제하시겠습니까?', function(button){
            			if(button == 'yes') {
            				store.remove(gridRecord);
            			}
            		});
            	}
    },
    
    gridRequestBtnClick: function(button, e, eOpts) {
    	var store = this.getMyStoreStore();
    	var store1 = this.getMyStore1Store();
    	var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
    	var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
    	var flag = '';
    	
    	for(var i=0; i<gridRecord.length; i++) {
    		if(gridRecord[i].data['DR_QTY'] == null || gridRecord[i].data['DR_QTY'] == undefined ||  gridRecord[i].data['DR_QTY'] == 0) {
    			flag = 'F';
    			msg = '출고요청수량을 확인하세요.';
    		} else if(gridRecord[i].data['TO_SL_CD'] == null || gridRecord[i].data['TO_SL_CD'] == undefined) {
				flag = 'F';
				msg = '요청창고(TO)를 선택하세요.';
    		} else {
    			if(gridRecord[i].data['V_TYPE'] == 'V') {
    				gridRecord[i].set('V_TYPE', 'DI');
    				flag = 'T';
    			}
    		}
    	}
    	
    	var date = Ext.getCmp('V_DR_DT').getValue();
    	var year = date.getFullYear();                                
		var month = (1 + date.getMonth());                     
		
		month = month >= 10 ? month : '0' + month;     
		var day = date.getDate();                      
		day = day >= 10 ? day : '0' + day;    
		
		date =  year + '-' + month + '-' + day;
    	
		if(gridRecord.length > 0) {
			if(flag == 'T') {
				Ext.MessageBox.confirm('확인', '출고요청하시겠습니까?<br>출고요청일: ' + date
		    			 , function(btn) {
					if(btn == 'yes') {
						store.sync({
				    		params : {
								V_TYPE : 'SYNC',
				    			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				    			V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				    			V_DR_DT: Ext.getCmp('V_DR_DT').getValue(),
				    		},
				    		callback : function(records, operation, success) {
				    			store.reload();
				    			store1.reload();
				    		}
				    	});
					}
		    	});
			} else {
				Ext.Msg.alert('확인', msg);
			}

		}
    },

    xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
            	var grid = Ext.getCmp('myGrid');
            	grid.saveDocumentAs({
                    type: 'xlsx',
                    title: '출고요청등록', //엑셀내타이틀
                    fileName: currentDate+'.xlsx' //엑셀파일이름
        		});
    },

    
    /*소재발주불러오기*/
    /*M_PO_REQ_MAT_HSPF*/
    poReqBtnClick : function(button, e, eOpts) {
    	var store = this.getMyStoreStore();
    	
    	Ext.Msg.confirm('확인', '소재발주를 불러오시겠습니까?', function(btn) {
    		if(btn == 'yes') {
    			Ext.Ajax.request({
        			url : 'sql/s_dn_req_if_anylink_hspf.jsp',
        			method : 'post',
        			params: {
        				V_TYPE: 'PO',
            			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
        				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
        			},
        			success: function(response) {
        				var tbController = S_DN_REQ_HSPF_NEW.app.getController("TbButtonController");
        				tbController.selBtnClick();
        			}
    			});
    		}
    	})
	},


});
