/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('B_STORAGE_DISTR.view.MyGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.myGrid',

    requires: [
        'B_STORAGE_DISTR.view.MyGridViewModel',
        'Ext.grid.column.RowNumberer',
        'Ext.grid.column.Number',
        'Ext.view.Table',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.CellEditing'
    ],

    config: {
        tbar: [
            {
                id: 'gridAddBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf055@FontAwesome',
                iconCls: 'grid-add-btn',
//                disabled: true
            },
            {
                id: 'gridDelBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf056@FontAwesome',
                iconCls: 'grid-del-btn',
                //                disabled: true
            },
            {
                xtype: 'container',
                flex: 1
            },
            {
            	xtype: 'label',
            	text : '※ 부가세 포함 금액 입력'
            },
            {
                xtype: 'button',
                glyph: 'xf1c3@FontAwesome',
                id: 'xlsxDown',
                cfg: {
                    type: 'excel07',
                    ext: 'xlsx'
                },
                iconCls: 'grid-excel-btn',
                margin: '0 3 0 0',
                
            }
        ]
    },

    viewModel: {
        type: 'mygrid'
    },
    style: 'border: 1px solid lightgray; padding: 5px;',
    header: false,
    title: 'My Grid Panel',
    store: 'MyStore',
    id: 'myGrid',
    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	width: 114,
        	dataIndex: 'V_TYPE',
        	text: 'V_TYPE',
        	hidden: true
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 100,
            dataIndex: 'SL_CD',
            text: '창고코드',
        	filter: { 			//필터
        		type : 'list',
//                operator : 'in',
            },
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	width: 100,
        	dataIndex: 'SL_SEQ',
        	text: 'SL_SEQ',
        	hidden:true
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	width: 150,
        	dataIndex: 'SL_NM',
        	text: '창고명',
        	filter: { 			//필터
        		type : 'list',
//                operator : 'in',
            },
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	width: 90,
        	dataIndex: 'REGION_NM',
        	text: '지역',
        	filter: { 			//필터
        		type : 'list',
//                operator : 'in',
            },
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	width: 90,
        	dataIndex: 'REF_NO',
        	text: '입출고처<br>연계번호',
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            text: '직판/대행',
            width: 100,
            dataIndex: 'SL_TYPE',
            editor: {
        		xtype: 'combobox',
        		editable: false,
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'sl_combo2',
        			proxy: {
        		           type: 'ajax',
        		           extraParams: {
        		            	V_MAST_CD: 'BA10',
        		            	V_GRID: 'Y'
        		           },	
        		           api: {
        		               read: '/HSPF01/common/sql/Combobox.jsp'
        		           },
        		           reader: {
        		               type: 'json',
        		               rootProperty: 'resultList'
        		           }
        		       }
        		})
        	},
        	filter: { 			//필터
        		type : 'list',
//                operator : 'in',
            },
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('sl_combo2').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('sl_combo2').findRecord('DTL_CD',value).get('DTL_NM');
                }
                return value;
            },
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
            width: 100,
            dataIndex: 'S_BP_CD',
            text: '거래처코드',
            emptyCellText: '(Double Click)',
            editor: {
                xtype: 'textfield',
                allowBlank: false,
//                editable: false,
                listeners: {
                    afterrender: function(c) {
                    	c.getEl().on('dblclick', function() {
                    		var popup = Ext.create("Popup.view.WinBpPop");
                            popup.show();
                            
                            var store = Ext.getStore('WinBpPopStore');
                    		store.removeAll();
                    		
                    		Ext.getCmp('fieldType').setValue('B_STORAGE_DISTR');
//                    		Ext.getCmp('W_M_BP_CD').setValue(Ext.getCmp('V_M_BP_CD2').getValue());
                        });
                    }
                }
            },
        	filter: { 			//필터
        		type : 'list',
//                operator : 'in',
            },
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	width: 200,
        	dataIndex: 'S_BP_NM',
        	text: '판매처명',
        	filter: { 			//필터
        		type : 'list',
//                operator : 'in',
            },
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            text: '축종구분',
            width: 100,
            dataIndex: 'BF_TYPE',
            editor: {
        		xtype: 'combobox',
        		editable: false,
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'sl_combo1',
        			proxy: {
        		           type: 'ajax',
        		           extraParams: {
        		            	V_MAST_CD: 'BA11',
        		            	V_GRID: 'Y'
        		           },	
        		           api: {
        		               read: '/HSPF01/common/sql/Combobox.jsp'
        		           },
        		           reader: {
        		               type: 'json',
        		               rootProperty: 'resultList'
        		           }
        		       }
        		})
        	},
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('sl_combo1').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('sl_combo1').findRecord('DTL_CD',value).get('DTL_NM');
                }
                return value;
            },
        	filter: { 			//필터
        		type : 'list',
//                operator : 'in',
            },
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold; color: #3367d6',
        	text: '보관유형',
        	width: 100,
        	dataIndex: 'REFRIG',
        	editor: {
        		xtype: 'combobox',
        		editable: false,
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'sl_comboFC',
        			proxy: {
        				type: 'ajax',
        				extraParams: {
        					V_MAST_CD: 'BA12',
        					V_GRID: 'Y'
        				},	
        				api: {
        					read: '/HSPF01/common/sql/Combobox.jsp'
        				},
        				reader: {
        					type: 'json',
        					rootProperty: 'resultList'
        				}
        			}
        		})
        	},
        	renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
        		if(Ext.data.StoreManager.lookup('sl_comboFC').findRecord('DTL_CD',value) !==null)
        		{
        			return Ext.data.StoreManager.lookup('sl_comboFC').findRecord('DTL_CD',value).get('DTL_NM');
        		}
        		return value;
        	},
        	filter: { 			//필터
        		type : 'list',
//                operator : 'in',
        	},
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6' ,
            align: 'end',
            dataIndex: 'GD_AMT',
            text: '입출고비(KG)',
            format: '0,000.00',
            editor: {
            	xtype: 'numberfield',
            	format: '0,000.00'
            }
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
            align: 'end',
            dataIndex: 'JOB_AMT',
            text: '보관료(KG)',
            format: '0,000.00',
            editor: {
            	xtype: 'numberfield',
            	format: '0,000.00'
            }
        },
        {
        	xtype: 'numbercolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
        	align: 'end',
        	dataIndex: 'STIKER_AMT',
        	text: '스티커비용(BOX)',
        	format: '0,000.00',
        	editor: {
        		xtype: 'numberfield',
        		format: '0,000.00'
        	},
        	width: 110
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
            align: 'end',
            dataIndex: 'SCALE_AMT',
            text: '계근비(BOX)',
            format: '0,000.00',
            editor: {
            	xtype: 'numberfield',
            	format: '0,000.00'
            }
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
            align: 'end',
            dataIndex: 'CHECK_AMT',
            text: '검역수수료(KG)',
            format: '0,000.00',
            editor: {
            	xtype: 'numberfield',
            	format: '0,000.00'
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6 ',
            dataIndex: 'PORT_AMT',
            text: '항운노조비',
//            editor: {
//            	blankText: '(상세보기)',
//            	xtype: 'textfield',
//            	listeners: {
//                    afterrender: function(c) {
//                    	c.getEl().on('dblclick', function() {
//                    		var popup = Ext.create("B_STORAGE_DISTR.view.MyWindow");
//                    		
//                    		var width = Ext.getBody().getViewSize();
//                    		var height = Ext.getBody().getViewSize().height - 200;
//                    		popup.setSize(width, height);
//                    		popup.center();
//                    		
//                    		popup.show();
//                            
//                            var shippingStore = Ext.getStore('WinShippingStore');
//                            shippingStore.load({
//                        		params: {
//                        			V_TYPE: 'SHIP',
//                        		},
//                        		callback: function(records,operations,success){
//                        		}
//                        	});
//                        });
//                    }
//                }
//        	},
            
        	
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;color: #3367d6',
            width: 193,
            dataIndex: 'REMARK',
            text: '기타',
            format: '0,000.00',
            editor: {
            	xtype: 'textfield',
            }
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	width: 114,
        	dataIndex: 'SL_CD',
        	text: 'SL_CD',
        	hidden: true
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	width: 114,
        	dataIndex: 'SL_SEQ',
        	text: 'SL_SEQ',
    		hidden: true
        },
    ],
    viewConfig: {
    	enableTextSelection: true,
        },
    selModel: {
        selType: 'checkboxmodel',
//        checkOnly: true,
        listeners: {
        	select: function(rowmodel, record, index, eOpts) {
            	record.set('V_TYPE', 'V');
            },
            deselect: function(rowmodel, record, index, eOpts) {
            	record.set('V_TYPE', '');
            }
        }
    },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        {
            ptype: 'cellediting'
        },
        {
    		ptype: 'gridfilters' ///이부분
        },
    ],
    listeners: {
        celldblclick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
        	
        	if(cellIndex == 18 && record.data.REGION == '9') {

        		var popup = Ext.create("B_STORAGE_DISTR.view.MyWindow");
        		
        		var width = Ext.getBody().getViewSize();
        		var height = Ext.getBody().getViewSize().height - 200;
        		popup.setSize(width, height);
        		popup.center();
        		
        		popup.show();
                
                var shippingStore = Ext.getStore('WinShippingStore');
                shippingStore.load({
            		params: {
            			V_TYPE: 'SHIP',
            		},
            		callback: function(records,operations,success){
            		}
            	});
            
        	}
        }
    }
    

});