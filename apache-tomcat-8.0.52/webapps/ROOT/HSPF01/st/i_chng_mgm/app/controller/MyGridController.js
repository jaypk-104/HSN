/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('I_CHNG_MGM.controller.MyGridController', {
    extend: 'Ext.app.Controller',
    stores: ['MyStore', 'MyStore1'],
    control: {
        "#gridAddBtn": {
            click: 'gridAddBtnClick'
        },
        "#gridDelBtn": {
            click: 'gridDelBtnClick'
        },
        "#xlsxDown": {
            click: 'xlsxDownClick'
        },
        "#myGrid": {
        	cellclick: 'myGridCellClick'
        },
    },

    gridAddBtnClick: function(button, e, eOpts) {
        //var popup = Ext.create("B_COMP_HSPF.view.WinAddRow");
        //popup.show();
        //Ext.getCmp('rowCount').setValue(1);
    },

    gridDelBtnClick: function(button, e, eOpts) {
        var store = Ext.getStore('MyStore');
    	var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();

    	if(gridRecord.length > 0) {
    		Ext.Msg.confirm('확인','삭제하시겠습니까?', function(button){
    			if(button == 'yes') {
    				for(var i=0; i<gridRecord.length; i++) {
    		    		if(gridRecord[i].data['V_TYPE']=='V') {
    		    			gridRecord[i].data['V_TYPE'] = 'D';
    		    		}
    		    	}
    		    	store.sync({
    					params: {
    						V_USR_ID : 'admin',//parent.Ext.getCmp('GUSER_ID').getValue(),
    					},
    		    		callback: function(records, operation, success) {
    		    			store.reload();
    					}
    		    	});
    			}
    		});
    	}
    },
    myGridCellClick:  function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
    	
    	var store = this.getMyStoreStore();
    	var store1 = this.getMyStore1Store();
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		
		store1.removeAll();
		store1.load({
			params: {
				V_TYPE: 'SD',
				V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
				V_GR_NO: gridRecord[0].get('GR_NO'),
				V_GR_SEQ: gridRecord[0].get('GR_SEQ'),
			},
			callback: function(records,operations,success){
			}
		});
    },

    xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
            	var grid = Ext.getCmp('myGrid');
            	grid.saveDocumentAs({
                    type: 'xlsx',
                    title: '창고이동', //엑셀내타이틀
                    fileName: currentDate+'.xlsx' //엑셀파일이름
        		});
    }

});
