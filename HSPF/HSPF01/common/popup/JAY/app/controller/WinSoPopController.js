/*
 * File: app/controller/WinPoPopController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Popup.controller.WinSoPopController', {
    extend: 'Ext.app.Controller',
	views: ['WinSoPop'],
    stores: ['WinSoPopStore'],
    control: {
        "#soSelBtn": {
            click: 'soSelBtnClick'
        },
		"#soNoInsrtBtn": {
			click: 'soNoInsrtBtnClick'
		},
		"#WinSoPopGrid" : {
			beforecelldblclick : 'cellDblClick'
		},
		"winpopop textfield[name=search_field]" : {
			specialkey : 'tfEnter'
		}
    },

    //팝업조회
    soSelBtnClick: function(button, e, eOpts) {
		var store = this.getWinSoPopStoreStore();
		store.removeAll();
		store.load({
			params : {
				V_TYPE: 'SHP',
				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				W_SO_NO1 : Ext.getCmp('W_SO_NO1').getValue(),
				W_S_BP_CD_PO : Ext.getCmp('W_S_BP_CD_SO').getValue(),
				W_S_BP_NM_SO : Ext.getCmp('W_S_BP_NM_SO').getValue(),
				V_SO_DT_FROM : Ext.getCmp('W_SO_DT_FROM').getValue(),
				V_SO_DT_TO : Ext.getCmp('W_SO_DT_TO').getValue()
			},
			callback : function(records, operations, success) {
			}
		});
	},
	
	//팝업셀선택
	soNoInsrtBtnClick: function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');
		var gridRecord = Ext.getCmp('WinSoPopGrid').getSelectionModel().getSelection();
    	
		Ext.Ajax.request({
			url:'sql/s_so_hspf_H.jsp',
			method: 'post',
			params: {
				V_TYPE: 'SH',
				V_SO_NO: gridRecord[0].data['SO_NO'],
    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
			},
			success : function(response) {
				var result = Ext.JSON.decode(response.responseText);
				Ext.getCmp('V_SO_TYPE').setValue(result.resultList[0].SO_TYPE); //수주유형
				Ext.getCmp('V_SO_TYPE_N').setValue(result.resultList[0].SO_TYPE_NM); 
				Ext.getCmp('V_SO_DT').setValue(result.resultList[0].SO_DT); //수주일자
				Ext.getCmp('V_SO_DT_N').setValue(result.resultList[0].SO_DT); //수주일자
				Ext.getCmp('V_PAY_METH').setValue(result.resultList[0].PAY_METH); //결제방법
				Ext.getCmp('V_PAY_METH_N').setValue(result.resultList[0].PAY_METH_NM); //결제방법
				Ext.getCmp('V_DLVY_HOPE_DT').setValue(result.resultList[0].DLVY_HOPE_DT); //납기요청일
				Ext.getCmp('V_DLVY_HOPE_DT_N').setValue(result.resultList[0].DLVY_HOPE_DT); //납기요청일
				Ext.getCmp('V_CUST_ORDER_NO').setValue(result.resultList[0].CUST_ORDER_NO); //고객사요청번호
				Ext.getCmp('V_BP_CD').setValue(result.resultList[0].S_BP_CD); //고객사코드
				Ext.getCmp('V_BP_NM').setValue(result.resultList[0].S_BP_NM); //고객사이름
				Ext.getCmp('V_CUR').setValue(result.resultList[0].CUR); //화폐단위
				Ext.getCmp('V_CUR_N').setValue(result.resultList[0].CUR); //화폐단위
				Ext.getCmp('V_XCH_RATE').setValue(result.resultList[0].XCH_RATE); //환율
				Ext.getCmp('V_XCH_RATE_N').setValue(result.resultList[0].XCH_RATE); //환율
				Ext.getCmp('V_SO_CFM').setValue(result.resultList[0].CFM_YN); //수주확정유무

//				수주확정상태이면, 수정할 수 없다.
				if(result.resultList[0].CFM_YN == 'Y') {
					Ext.getCmp('V_SO_NO').setEditable(false);
					Ext.getCmp('V_SO_TYPE').hide();
					Ext.getCmp('V_SO_TYPE_N').show();
					Ext.getCmp('V_SO_DT').hide();
					Ext.getCmp('V_SO_DT_N').show();
					Ext.getCmp('V_PAY_METH').hide();
					Ext.getCmp('V_PAY_METH_N').show();
					Ext.getCmp('V_DLVY_HOPE_DT').hide();
					Ext.getCmp('V_DLVY_HOPE_DT_N').show();
					Ext.getCmp('V_CUST_ORDER_NO').setEditable(false);
					Ext.getCmp('V_BP_NM').setEditable(false);
					Ext.getCmp('V_CUR').hide();
					Ext.getCmp('V_CUR_N').show();
					Ext.getCmp('V_XCH_RATE').hide();
					Ext.getCmp('V_XCH_RATE_N').show();
				} 
				//수주미확정상태이면, 수정할 수 있다.
				else {
					Ext.getCmp('V_SO_NO').setEditable(true);
					Ext.getCmp('V_SO_TYPE').show();
					Ext.getCmp('V_SO_TYPE_N').hide();
					Ext.getCmp('V_SO_DT').show();
					Ext.getCmp('V_SO_DT_N').hide();
					Ext.getCmp('V_PAY_METH').show();
					Ext.getCmp('V_PAY_METH_N').hide();
					Ext.getCmp('V_DLVY_HOPE_DT').show();
					Ext.getCmp('V_DLVY_HOPE_DT_N').hide();
					Ext.getCmp('V_CUST_ORDER_NO').setEditable(true);
					Ext.getCmp('V_BP_NM').setEditable(true);
					Ext.getCmp('V_CUR').show();
					Ext.getCmp('V_CUR_N').hide();
					Ext.getCmp('V_XCH_RATE').show();
					Ext.getCmp('V_XCH_RATE_N').hide();
				}
				Ext.getCmp('V_SO_NO').setValue(gridRecord[0].data['SO_NO']);
				var popWin=  Ext.getCmp('WinSoPop');
				popWin.destroy();
				
				//수주등록 조회버튼
				var tbController = S_SO_HSPF.app.getController("TbButtonController");
				tbController.selBtnClick();
//				store1.removeAll();
//		    	store1.load({
//		    		params: {
//		    			V_TYPE: 'S',
//		    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
//		    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
//		    			V_PO_NO: Ext.getCmp('V_PO_NO').getValue()
//		    		},
//		    		callback: function(records,operations,success){
//		    		}
//		    	});
			},
			scope: this
		});
		
	},
    cellDblClick : function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
    	this.soNoInsrtBtnClick();
    },

	tfEnter : function(field, e, eOpts) {
		if (e.getKey() == e.ENTER) {
			this.poSelBtnClick();
		}
	},

});
