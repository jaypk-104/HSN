/*
 * File: app/controller/WinBpPopController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Popup.controller.WinMBpPopController', {
	extend : 'Ext.app.Controller',

	views : [ 'WinMBpPop' ],
	stores : [ 'WinMBpPopStore' ],
	control : {
		"#bpSelBtn" : {
			click : 'mbpSelBtnClick'
		},
		"#WinMBpGrid" : {
			beforecelldblclick : 'cellDblClick'
		},
		"winmbppop textfield[name=search_field]" : {
			specialkey : 'tfEnter'
		}
	},

	mbpSelBtnClick : function(button, e, eOpts) {
		var store = this.getWinMBpPopStoreStore();
		store.removeAll();
		store.load({
			params : {
				V_TYPE : 'S',
				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				W_M_BP_CD : Ext.getCmp('W_M_BP_CD').getValue(),
				W_M_BP_NM : Ext.getCmp('W_M_BP_NM').getValue()
			},
			callback : function(records, operations, success) {
			}
		});
	},

	cellDblClick : function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
		var M_BP_CD = record.get('M_BP_CD');  
		var M_BP_NM = record.get('M_BP_NM');  
		
		if (Ext.getCmp('fieldType').getValue() == 'default') {
			Ext.getCmp('V_M_BP_CD').setValue(M_BP_CD);
			Ext.getCmp('V_M_BP_NM').setValue(M_BP_NM);
		} else if (Ext.getCmp('fieldType').getValue() == 'textfield2') { // 발주등록의
			Ext.getCmp('V_M_BP_CD2').setValue(M_BP_CD);
			Ext.getCmp('V_M_BP_NM2').setValue(M_BP_NM);
		} else if (Ext.getCmp('fieldType').getValue() == 'textfield3') { // 발주등록의
			Ext.getCmp('W_M_BP_CD_PO').setValue(M_BP_CD);
			Ext.getCmp('W_M_BP_NM_PO').setValue(M_BP_NM);
		} else if ((Ext.getCmp('fieldType').getValue() == 'M_PUR_HSPF' )  	 //발주요청조회
					|| (Ext.getCmp('fieldType').getValue() == 'M_PO_HSPF_H') //발주등록
					|| (Ext.getCmp('fieldType').getValue() == 'M_GR_HSPF')  //입고등록
					|| (Ext.getCmp('fieldType').getValue() == 'M_GR_MGM_HSPF') //입고조회
					|| (Ext.getCmp('fieldType').getValue() == 'M_GR_BC_HSPF'))  //바코드입고조회
		{ 
			Ext.getCmp('V_M_BP_NM').setValue(M_BP_NM);
		} else if (Ext.getCmp('fieldType').getValue() == 'B_ITEM_SUPP_HSPF') { //매입처단가등록-그리드
			var gridRecord =  Ext.getCmp('myGrid');
			gridRecord.actionables['0'].context.record.set('BP_CD', M_BP_CD);
			gridRecord.actionables['0'].context.record.set('BP_NM', M_BP_NM);
		} else if (Ext.getCmp('fieldType').getValue() == 'B_ITEM_SUPP_HSPF_tf') { //매입처단가등록-검색
			Ext.getCmp('V_M_BP_CD').setValue(M_BP_CD);
			Ext.getCmp('V_M_BP_NM').setValue(M_BP_NM);
		} else {
			var M_BP_CD = record.get('M_BP_CD');
			var M_BP_NM = record.get('M_BP_NM');
			var gridRecord = Ext.getCmp('myGrid').editingPlugin.getEditor();
			var index = gridRecord.activeField.column.fullColumnIndex;

			gridRecord.items.items[index].setValue(M_BP_CD);
			gridRecord.items.items[index + 1].setValue(M_BP_NM);
		}

		var popWin = Ext.getCmp('WinMBpPop');
		popWin.destroy();
	},

	tfEnter : function(field, e, eOpts) {
		if (e.getKey() == e.ENTER) {
			this.mbpSelBtnClick();
		}
	},
	

});
