/*
 * File: app/controller/TbButtonController.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_DN_MOVE_HSPF.controller.TbButtonController', {
    extend: 'Ext.app.Controller',

    stores: [
        'MyStore'
    ],

    control: {
        "#selBtn": {
            click: 'selBtnClick'
        },
        "#saveBtn": {
            click: 'saveBtnClick'
        },
        "#delBtn": {
            click: 'delBtnClick'
        },
        "#clsBtn": {
            click: 'clsBtnClick'
        },
        "mysearchform textfield[name=search_field]": {
            specialkey: 'tfEnter'
        }
    },

    selBtnClick: function(button, e, eOpts) {
//        alert('select');
    	var store = this.getMyStoreStore();
    	store.removeAll();
    	store.load({
    		params: {
    			V_TYPE: 'S',
    			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				V_S_BP_CD : Ext.getCmp('V_S_BP_CD').getValue(),
				V_S_BP_NM : Ext.getCmp('V_S_BP_NM').getValue(),
				V_DN_DT_FR : Ext.getCmp('V_DN_DT_FR').getValue(),
				V_DN_DT_TO : Ext.getCmp('V_DN_DT_TO').getValue(),
				V_ITEM_CD : Ext.getCmp('V_ITEM_CD').getValue(),
				V_ITEM_NM : Ext.getCmp('V_ITEM_NM').getValue(),
				V_BL_NO : Ext.getCmp('V_BL_NO').getValue(),
    		},
    		callback: function(records,operations,success){
    		}
    	});
    },

    saveBtnClick: function(button, e, eOpts) {
    	
    	var store = this.getMyStoreStore();
     	var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();

     	if(gridRecord.length > 0) {
     		Ext.Msg.confirm('확인','변경하시겠습니까?', function(button){
     			if(button == 'yes') {
     				for(var i=0; i<gridRecord.length; i++) {
     		    		if(gridRecord[i].data['V_TYPE']=='V') {
     		    			gridRecord[i].set('V_TYPE','U');
     		    		}
     		    	}
     		    	store.sync({
     					params: {
     						V_TYPE: 'SYNC',
     						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
     						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue()
     					},
     		    		callback: function(records, operation, success) {
     		    			store.reload();
     					}
     		    	});
     			}
     		});
     	}
    },

    delBtnClick: function(button, e, eOpts) {
        alert('delete');
    },

    clsBtnClick: function(button, e, eOpts) {
        var tab=parent.Ext.getCmp('myTab');
                 var activeTab=tab.getActiveTab();
                 var tabIndex=tab.items.indexOf(activeTab);
        tab.remove(tabIndex,true);
    },

    tfEnter: function(field, e, eOpts) {
        	if (e.getKey() == e.ENTER) {
        		this.selBtnClick();
        	}
    }

});
