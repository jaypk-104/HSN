/*
 * File: app/controller/WinAddRowController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_BL_DOC_TOT_HSPF.controller.WinPopController', {
    extend: 'Ext.app.Controller',
    stores : [ 'PopStore', 'PopStore2' ],
    
    control: {
		"#w_selBtn" : {
			click : 'w_selBtnClick'
		},
		'#w_regBtn' : {
			click : 'w_regBtnClick'
		},
		"#w_selBtn2" : {
			click : 'w_selBtnClick2'
		},
		'#w_regBtn2' : {
			click : 'w_regBtnClick2'
		},
		'#w_copyBtn' : {
			click : 'w_copyBtnClick'
		},
		'#popGrid': {
			celldblclick: 'w_popGridDblClick'
		},
		'#popGrid2': {
			celldblclick: 'w_popGridDblClick2'
		},
	},

	w_selBtnClick: function(button, e, eOpts) {
		var popStore = this.getPopStoreStore();
		popStore.load({
    		params: {
    			V_TYPE: 'SP',
    			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				W_DN_TYPE : Ext.getCmp('W_DN_TYPE').getValue(),
				W_DN_DT_FR : Ext.getCmp('W_DN_DT_FR').getValue(),
				W_DN_DT_TO : Ext.getCmp('W_DN_DT_TO').getValue(),
				W_S_BP_NM : Ext.getCmp('W_S_BP_NM2').getValue(),
    		},
    		callback: function(records,operations,success){
    		}
    	});
	},
	
	w_regBtnClick: function(button, e, eOpts) {
		var myStore1 = Ext.getStore('MyStore1');
		var myStore2 = Ext.getStore('MyStore2');
		var myGrid = Ext.getCmp('popGrid').getSelection();
		var count = myStore1.getCount();

		for (var i = 0; i < myGrid.length; i++) {
			var record = myGrid[i];
			count = count + 1;
			var rec = Ext.create('S_BL_DOC_TOT_HSPF.model.MyModel', {
				V_TYPE: 'I',
				ITEM_CD: record.get('ITEM_CD'),
				ITEM_NM: record.get('ITEM_NM'),
				BL_DOC_NO: record.get('BL_DOC_NO'),
				QTY: record.get('QTY'),
				PRICE: record.get('PRICE'),
				DOC_AMT: record.get('AMOUNT'),
				UNIT: record.get('UNIT'),
				REF_NO: record.get('REF_NO'),
				REF_SEQ: record.get('REF_SEQ'),
				REF_TYPE: record.get('REF_TYPE'),
				UNIT_WGT: record.get('UNIT_WGT'),
				NET_WGT: Math.round(record.get('QTY')*record.get('UNIT_WGT')),
				MAKER: record.get('MAKER'),
			});
			myStore1.insert(count - 1, rec);
			myStore2.insert(count - 1, rec);
		}
		
		var popStore = this.getPopStoreStore();		
		popStore.removeAll();
    	
		var popWin = button.up().up();
		popWin.destroy();
	},
	
	w_popGridDblClick : function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
		var myStore1 = Ext.getStore('MyStore1');
		var myStore2 = Ext.getStore('MyStore2');
		
		var rec = Ext.create('S_BL_DOC_TOT_HSPF.model.MyModel', {
			V_TYPE: 'I',
			ITEM_CD: record.get('ITEM_CD'),
			ITEM_NM: record.get('ITEM_NM'),
			BL_DOC_NO: record.get('BL_DOC_NO'),
			QTY: record.get('QTY'),
			PRICE: record.get('PRICE'),
			DOC_AMT: record.get('AMOUNT'),
			UNIT: record.get('UNIT'),
			REF_NO: record.get('REF_NO'),
			REF_SEQ: record.get('REF_SEQ'),
			REF_TYPE: record.get('REF_TYPE'),
			UNIT_WGT: record.get('UNIT_WGT'),
			NET_WGT: Math.round(record.get('QTY')*record.get('UNIT_WGT')),
			MAKER: record.get('MAKER'),
		});
		myStore1.insert(myStore1.getCount() - 1, rec);
		myStore2.insert(myStore2.getCount() - 1, rec);
		
		var popStore = this.getPopStoreStore();		
		popStore.removeAll();
    	
		var popWin = tableview.up().up();
		popWin.destroy();
	},
	
	w_selBtnClick2: function(button, e, eOpts) {
		var popStore2 = this.getPopStore2Store();
		popStore2.load({
    		params: {
    			V_TYPE: 'SP2',
    			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				W_IV_DT_FR : Ext.getCmp('W_IV_DT_FR').getValue(),
				W_IV_DT_TO : Ext.getCmp('W_IV_DT_TO').getValue(),
				W_S_BP_NM : Ext.getCmp('W_S_BP_NM2').getValue(),
				W_INVOICE_NO : Ext.getCmp('W_INVOICE_NO').getValue(),
    		},
    		callback: function(records,operations,success){
    		}
    	});
	},
	
	w_regBtnClick2: function(button, e, eOpts) {
		this.w_popGridDblClick2();
	},
	
	w_popGridDblClick2 : function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
		Ext.getCmp('V_INV_NO').setValue(record.get('INV_NO'));
		
		var popStore2 = this.getPopStore2Store();
		popStore2.removeAll();
    	
//		var popWin = Ext.getCmp('MyWindow1');
		var popWin = tableview.up().up();
		popWin.destroy();
		
		var tbController = S_BL_DOC_TOT_HSPF.app.getController("TbButtonController");
		tbController.selBtnClick();
	},
	
	w_copyBtnClick: function(button, e, eOpts) {
		var store1 = Ext.getStore('MyStore1');
		var store2 = Ext.getStore('MyStore2');
		var popStore2 = this.getPopStore2Store();
    	
		var selectedRecord = Ext.getCmp('popGrid2').getSelectionModel().getSelection();
		if (selectedRecord.length < 1) {
			Ext.Msg.alert('확인', '선택된 행이 없습니다.');
			return;
		} else if (selectedRecord.length > 1) {
			Ext.Msg.alert('확인', '한 건씩 복사 가능합니다.');
			return;
		}
		
		var INV_NO = selectedRecord[0].get('INV_NO');
		Ext.Ajax.request({
			url : 'sql/S_BL_DOC_TOT_HSPF.jsp',
			method : 'post',
			params : {
				V_TYPE : 'T1S',
				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				V_INV_NO: INV_NO,
			},
			success : function(response) {
				var res = Ext.JSON.decode(response.responseText).resultList[0];

				if(!!res){
					Ext.getCmp('V_BP_NM').setValue(res.BP_NM);
					Ext.getCmp('V_BP_CD').setValue(res.BP_CD);
					
			    	Ext.getCmp('V_INV_NO').setValue('');
			    	Ext.getCmp('V_INVOICE_NO').setValue(res.INVOICE_NO);
			    	Ext.getCmp('V_INV_DT').setValue(res.INV_DT);
			    	Ext.getCmp('V_LC_DOC_NO').setValue('');
			    	Ext.getCmp('V_LC_DT').setValue('');
			    	Ext.getCmp('V_BL_DOC_NO').setValue('');
			    	Ext.getCmp('V_LOADING_DT').setValue('');
			    	
			    	Ext.getCmp('V_CONSIGNEE').setValue(res.CONSIGNEE);
			    	Ext.getCmp('V_BUYER_ADDR').setValue(res.BUYER_ADDR);
			    	Ext.getCmp('V_SHIP_MARK').setValue(res.SHIP_MARK);
			    	Ext.getCmp('V_NOTIFY').setValue(res.NOTIFY);
//			    	Ext.getCmp('V_GOAL_NM').setValue('');
			    	Ext.getCmp('V_TRANS_TYPE').setValue(res.TRANS_TYPE);
			    	Ext.getCmp('V_VESSEL').setValue(res.VESSEL);
			    	Ext.getCmp('V_TITLE').setValue(res.TITLE);
			    	Ext.getCmp('V_PAY_METH').setValue(res.PAY_METH);
			    	Ext.getCmp('V_IN_TERMS').setValue(res.IN_TERMS);
			    	Ext.getCmp('V_LOADING_PORT').setValue(res.LOADING_PORT);
			    	Ext.getCmp('V_DISCHGE_PORT').setValue(res.DISCHGE_PORT);
//			    	Ext.getCmp('V_CNTR_NO').setValue(res.CNTR_NO);
			    	Ext.getCmp('V_TERMINAL').setValue(res.TERMINAL);
			    	Ext.getCmp('V_INSUR_AMT').setValue(res.INSUR_AMT);
			    	Ext.getCmp('V_CNTR_QTY').setValue(res.CNTR_QTY);
			    	Ext.getCmp('V_CNTR_SZTP').setValue(res.CNTR_SZTP);
			    	Ext.getCmp('V_CUR').setValue(res.CUR);
//			    	Ext.getCmp('V_PAY_CONDITION').setValue('');
			    	Ext.getCmp('V_ETD').setValue(res.ETD);
//			    	Ext.getCmp('V_ETA').setValue('');
			    	Ext.getCmp('V_SELLER').setValue(res.SELLER);
			    	Ext.getCmp('V_CFM_YN').setValue('');
			    	Ext.getCmp('V_REMARK').setValue(res.REMARK);
			    	
			    	
		    		// [두번째 탭] 조회
			    	store1.removeAll();
		        	store1.load({
		        		params: {
		        			V_TYPE: 'T2S',
		        			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
		        			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
		        			V_INV_NO: INV_NO,
		        		},
		        		callback: function(records,operations,success){
		        			store1.each(function(rec,idx) {
		        				rec.set('V_TYPE', 'I');
		        				rec.set('INV_SEQ', '');
		        			});
		        		},
		        	});
		    		
		    		// [세번째 탭] 조회
		        	store2.removeAll();
		        	store2.load({
		        		params: {
		        			V_TYPE: 'T3S',
		        			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
		        			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
		        			V_INV_NO: INV_NO,
		        		},
		        		callback: function(records,operations,success){
		        			store2.each(function(rec,idx) {
		        				rec.set('V_TYPE', 'I');
		        				rec.set('INV_SEQ', '');
		        			});
		        		},
		        	});
				}
			}
		});
		
		popStore2.removeAll();

//		var popWin = Ext.getCmp('MyWindow1');
		var popWin = button.up().up();
		popWin.destroy();
		
	},
	
	tfEnter: function(field, e, eOpts) {
    	if (e.getKey() == e.ENTER) {
    		this.w_selBtnClick();
    	}
	}

});
