/*
 * File: app/view/MyPanel1.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_BL_DOC_TOT_HSPF.view.MyPanel1', {
	extend : 'Ext.panel.Panel',
	alias : 'widget.mypanel1',

	requires: [
        'S_BL_DOC_TOT_HSPF.view.MyPanelViewModel1',
        'Ext.grid.Panel',
        'Ext.grid.column.RowNumberer',
        'Ext.view.Table',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.CellEditing',
        'Ext.grid.column.Number'
    ],

	viewModel : {
		type : 'mypanel1'
	},
	layout : 'fit',
	title : 'Tab 2',

	items : [ {
		xtype : 'container',
		flex : 1,
		layout : {
			type : 'vbox',
			align : 'stretch'
		},
		items : [ {
			xtype : 'gridpanel',
			flex : 1,
			style : 'border: 1px solid lightgray; padding: 5px;',
			header : false,
			title : 'My Grid Panel',
			store : 'MyStore1',
			id : 'myGrid1',
			tbar : [ {
				id : 'gridAddBtn1',
				text : '',
				margin : '0 3 0 0',
				glyph : 'xf055@FontAwesome',
				iconCls : 'grid-add-btn',
			}, {
				id : 'gridDelBtn1',
				text : '',
				margin : '0 3 0 0',
				glyph : 'xf056@FontAwesome',
				iconCls : 'grid-del-btn',
			}, {
				id : 'gridSaveBtn1',
				text : '',
				margin : '0 3 0 0',
				glyph : 'xf0c7@FontAwesome',
				iconCls : 'grid-save-btn',
			}, {
				xtype : 'container',
				flex : 1
			}, {
				xtype : 'button',
				glyph : 'xf1c3@FontAwesome',
				id : 'xlsxDown1',
				cfg : {
					type : 'excel07',
					ext : 'xlsx'
				},
				iconCls : 'grid-excel-btn',
			} ],
			columns : [ {
				xtype : 'rownumberer',
				width : 40
			}, {
				xtype : 'gridcolumn',
				style : 'font-size: 12px; text-align: center; font-weight: bold;',
				width : 114,
				dataIndex : 'V_TYPE',
				text : 'V_TYPE',
				hidden : true
			}, 
			{
				xtype : 'gridcolumn',
				style : 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
				width : 180,
				dataIndex : 'CNTR_NO',
				text : 'Container No',
				editor : {
					xtype : 'textfield'
				}
			},
			{
				xtype : 'gridcolumn',
				style : 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
				width : 110,
				dataIndex : 'MATERIAL_CD',
				text : 'Material Code',
				editor : {
					xtype : 'textfield'
				}
			},
			{
				xtype : 'gridcolumn',
				style : 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
				width : 120,
				dataIndex : 'PILAMENT_CD',
				text : '품종',
				renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
	                if(Ext.data.StoreManager.lookup('storeSC13').findRecord('DTL_CD',value) !==null)
	                {
	                    return Ext.data.StoreManager.lookup('storeSC13').findRecord('DTL_CD',value).get('DTL_NM');
	                }
	                return value;
	            },
	            editor: {
	        		xtype: 'combobox',
	        		displayField: 'DTL_NM',
	        		autoLoadOnValue: true,
	        		valueField: 'DTL_CD',
	        		editable: false,
	        		store: Ext.create('Ext.data.Store',{
	        			autoLoad: true,
	        			storeId: 'storeSC13',
	        			proxy: {
	        		           type: 'ajax',
	        		           extraParams: {
	        		            	V_MAST_CD: 'SC13',
	        		            	V_GRID: 'Y'
	        		           },	
	        		           api: {
	        		               read: '/HSPF01/common/sql/Combobox.jsp'
	        		           },
	        		           reader: {
	        		               type: 'json',
	        		               rootProperty: 'resultList'
	        		           }
	        		       }
	        		}),
	        		listConfig: {
	                    itemTpl: [
	                        '<div>{DTL_NM}</div>'
	                    ]
	                },
	        	}
			},
			{
				xtype : 'gridcolumn',
				style : 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
				width : 200,
				dataIndex : 'MAKER',
				text : 'MAKER',
				editor : {
					xtype : 'textfield'
				}
			},
			{
				xtype : 'gridcolumn',
				style : 'font-size: 12px; text-align: center; font-weight: bold;',
				width : 120,
				dataIndex : 'ITEM_CD',
				text : '품목코드',
//				editor : {
//					xtype : 'textfield'
//				}
				editor: {
	                xtype: 'combobox',
	                displayField: 'ITEM_DESC',
	                valueField: 'ITEM_CD',
	                enableRegEx: true,
	                minChars: 2,
	                queryMode: 'local',
	                allowBlank:false,
	                matchFieldWidth: false,
	                store: 'ItemStore',
	                listConfig: {
		                itemTpl: [
//		                    '<div>{ITEM_NM} ({ITEM_CD})</div>'
		                	'<div>{ITEM_DESC}</div>'
		                ]
		            },
	            },
			}, 
			{
				xtype : 'gridcolumn',
				style : 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
				width : 250,
				dataIndex : 'ITEM_NM',
				text : '품목명',
				editor : {
					xtype : 'textfield'
				}
			}, {
				xtype : 'numbercolumn',
				style : 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
				width : 120,
				align : 'end',
				dataIndex : 'QTY',
				text : 'Qty',
				format : '0,000.00',
				editor : {
					xtype : 'numberfield',
					format : '0,000.00',
					decimalPrecision : 2,
					align : 'right'
				},
				summaryType : 'sum',
				summaryRenderer : function(value, summaryData, dataIndex) {
					return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
				},
			}, {
				xtype : 'gridcolumn',
				style : 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
				width : 100,
				dataIndex : 'UNIT',
				text : 'UNIT',
				editor : {
					xtype : 'textfield'
				}
			}, {
				xtype : 'numbercolumn',
				style : 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
				width : 120,
				align : 'end',
				dataIndex : 'PRICE',
				text : 'Price',
				format : '0,000.00000',
				editor : {
					xtype : 'numberfield',
					format : '0,000.00000',
					decimalPrecision : 5,
					align : 'right'
				},
			}, {
				xtype : 'numbercolumn',
				style : 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
				width : 130,
				align : 'end',
				dataIndex : 'DOC_AMT',
				text : 'Amount',
				format : '0,000.0000',
				editor : {
					xtype : 'numberfield',
					format : '0,000.0000',
					decimalPrecision : 4,
					align : 'right'
				},
				summaryType : 'sum',
				summaryRenderer : function(value, summaryData, dataIndex) {
					return "<font color='green'>" + Ext.util.Format.number(value, '0,000.0000') + "<font>";
				},
			}, {
				xtype : 'gridcolumn',
				style : 'font-size: 12px; text-align: center; font-weight: bold;',
				dataIndex : 'INV_NO',
				text : 'INV_NO',
				hidden : true,
			}, {
				xtype : 'gridcolumn',
				style : 'font-size: 12px; text-align: center; font-weight: bold;',
				dataIndex : 'INV_SEQ',
				text : 'INV_SEQ',
				hidden : true,
			}, {
				xtype : 'gridcolumn',
				style : 'font-size: 12px; text-align: center; font-weight: bold;',
				dataIndex : 'REF_NO',
				text : 'REF_NO',
				hidden : true,
			}, {
				xtype : 'gridcolumn',
				style : 'font-size: 12px; text-align: center; font-weight: bold;',
				dataIndex : 'REF_SEQ',
				text : 'REF_SEQ',
				hidden : true,
			}, {
				xtype : 'gridcolumn',
				style : 'font-size: 12px; text-align: center; font-weight: bold;',
				dataIndex : 'REF_TYPE',
				text : 'REF_TYPE',
				hidden : true,
			}, ],
			viewConfig : {
				enableTextSelection : true,
			},
			selModel : {
				selType : 'checkboxmodel',
				checkOnly : true,
			},
			plugins : [ {
				ptype : 'gridexporter'
			}, {
				ptype : 'cellediting',
				listeners : {
					edit : function(editor, context, eOpts) {
						var PRICE = Number(context.record.data.PRICE);
						var QTY = Number(context.record.data.QTY);

						if (context.column.dataIndex == 'QTY' || context.column.dataIndex == 'PRICE') {
							var PRICE2 = (PRICE * 100000).toFixed(0) / 100000;
							var QTY2 = (QTY * 100).toFixed(0) / 100;
							context.record.set('DOC_AMT', Math.round(PRICE2 * QTY2 * 100) / 100);
						}
					},
					beforeedit: function (e, editor) {
						var rec = editor.record.data;
						var field = editor.field;
						
						if(field == 'ITEM_CD' && !!rec.REF_TYPE){
							return false;
						}
				    	
				        return true;
				    },
				    afteredit: function(editor, context, eOpts) {
	    				
	            		/*품목코드*/
	            		if(context.column.dataIndex == 'ITEM_CD' ) {
		            		Ext.Ajax.request({
								url:'sql/B_ITEM_HSPF.jsp',
								method: 'post',
								params: {
					    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
					    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
					    			V_ITEM_CD: context.record.get('ITEM_CD')
								},
								callback : function(records,operations,success){
									
							    },
							    success : function(response) {
							    	var jsonResult = Ext.JSON.decode(response.responseText);
							    	
							    	if (jsonResult.resultList.length > 0) {
							    		var ITEM_CD = jsonResult.resultList[0].ITEM_CD;
										var ITEM_NM = jsonResult.resultList[0].ITEM_NM;
										var UNIT = jsonResult.resultList[0].UNIT;
										var HS_CD = jsonResult.resultList[0].HS_CD;
										var ORIGIN = jsonResult.resultList[0].ORIGIN;
										var UNIT_WGT = jsonResult.resultList[0].UNIT_WGT;
										var PILAMENT_CD = jsonResult.resultList[0].PILAMENT_CD;
										var PRICE = jsonResult.resultList[0].PRICE;
										
										context.record.set('ITEM_NM', ITEM_NM);
										context.record.set('UNIT', UNIT);
										context.record.set('PILAMENT_CD', PILAMENT_CD);
										context.record.set('PRICE', PRICE);
							    	} else {
							    		context.record.set('ITEM_NM', '품목정보없음');
							    	}
							    	
							    },
								scope: this
							});
	            		}
	            		
	            	},
				}
			} ],
			features : [ {
				ftype : 'summary',
				dock : 'bottom'
			} ]
		}, ]
	} ]

});