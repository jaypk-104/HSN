/*
 * File: app/controller/TbButtonController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_IMP_TOT_HSPF.controller.TbButtonController', {
    extend: 'Ext.app.Controller',

    stores: ['MyStore','BlQtyStore','Popup.store.WinBpPopStore'],
    
    control: {
        "#selBtn": {
            click: 'selBtnClick'
        },
        "#saveBtn": {
            click: 'saveBtnClick'
        },
        "#clrBtn": {
            click: 'clrBtnClick'
        },
        "#clsBtn": {
            click: 'clsBtnClick'
        },
        "#w_selBtn": {
            click: 'w_selBtnClick'
        },
        "#w_saveBtn": {
            click: 'w_saveBtnClick'
        },
        "#w_saveLgBtn": {
            click: 'w_saveLgBtnClick'
        },
        "#w_printLgBtn": {
            click: 'w_printLgBtnClick'
        },
        "myform textfield[name=search_field]": {
            specialkey: 'tfEnter'
        },
    },

    selBtnClick: function(button, e, eOpts) {
    	var store = this.getMyStoreStore();
    	var promise = this.checkModify();
    	
    	promise.then(
	    	function(flag){
		    	if(flag) {
			    	store.removeAll();
			    	store.load({
			    		params : {
			    			V_TYPE : 'S',
			    			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
			    			V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
			    			V_PO_DT_FR : Ext.getCmp('V_PO_DT_FR').getValue(),
			    			V_PO_DT_TO : Ext.getCmp('V_PO_DT_TO').getValue(),
			    			V_BP_NM : Ext.getCmp('V_BP_NM').getValue(),
			    			V_PO_NO : Ext.getCmp('V_PO_NO').getValue(),
			    			V_LC_DOC_NO : Ext.getCmp('V_LC_DOC_NO').getValue(),
			    			V_BL_DOC_NO : Ext.getCmp('V_BL_DOC_NO').getValue(),
			    			V_ITEM_CD : Ext.getCmp('V_ITEM_CD').getValue(),
			    			V_ITEM_NM : Ext.getCmp('V_ITEM_NM').getValue(),
			    			V_AFFILIATE : Ext.getCmp('V_AFFILIATE').getValue(),
			    			V_MAKER : Ext.getCmp('V_MAKER').getValue(),
			    			V_PO_USR_NM : Ext.getCmp('V_PO_USR_NM').getValue(),
			    			V_GR_YN : Ext.getCmp('V_GR_YN').getValue(),
			    			V_PO_TYPE : Ext.getCmp('V_PO_TYPE').getValue(),
			    			V_SEND_YN : Ext.getCmp('V_SEND_YN').getValue(),
			    			V_INBOARD_YN : Ext.getCmp('V_INBOARD_YN').getValue(),
			    		},
			    		callback : function(records, operations, success) {
			    			Ext.getCmp('V_SELECTED_AMT').setValue('');
			    		}
			    	});
		    	}
	    	}
        );
    	 
    },
    
    w_selBtnClick: function(button, e, eOpts) {
    	var store = Ext.getStore('BlQtyStore');
    	store.removeAll();
    	store.load({
    		params: {
    			V_TYPE: 'WS',
    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    			V_PO_NO: Ext.getCmp('W_PO_NO').getValue(),
    			V_PO_SEQ: Ext.getCmp('W_PO_SEQ').getValue(),
    		},
    		callback: function(records,operations,success){
    		}
    	})
    },

    saveBtnClick: function(button, e, eOpts) {
    	var store = Ext.getStore('MyStore');
		
    	store.each(function(record, idx) {
			if(record.isDirty()) {
				record.set('V_TYPE', 'U');
			}
		})

		store.sync({
			params : {
				V_TYPE : 'I',
				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
			},
			callback : function(records, operation, success) {
				var res = records.operations[0]._response.responseText;

				if (res.match('Exception')) {
					Ext.Msg.alert('확인', res);
				} else {
					store.reload();
					Ext.toast({
						title : ' ',
						timeout : 1000,
						html : '저장완료',
						style : 'text-align: center',
						align : 't',
						width : 130,
					});
				}
				
			},
			success : function(response) {
			}
		});
			
    },
    
    w_saveBtnClick: function(button, e, eOpts) {
    	var store = Ext.getStore('BlQtyStore');
		
    	store.each(function(record, idx) {
			if(record.isDirty() && record.get('V_TYPE') != 'WI') {
				record.set('V_TYPE', 'WU');
			}
		})

		store.sync({
			params : {
				V_TYPE : 'WI',
				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				V_PO_NO: Ext.getCmp('W_PO_NO').getValue(),
    			V_PO_SEQ: Ext.getCmp('W_PO_SEQ').getValue(),
			},
			callback : function(records, operation, success) {
				var res = records.operations[0]._response.responseText;

				if (res.match('Exception')) {
					Ext.Msg.alert('확인', res);
				} else {
					store.reload();
					Ext.toast({
						title : ' ',
						timeout : 1000,
						html : '저장완료',
						style : 'text-align: center',
						align : 't',
						width : 130,
					});
				}
				
			},
			success : function(response) {
			}
		});
			
    },
    
    w_saveLgBtnClick: function(button, e, eOpts) {
    	Ext.Msg.confirm('확인', '저장하시겠습니까?', function(button) {
			if (button == 'yes') {
				
				Ext.Ajax.request({
					url : 'sql/M_LG_FORM_TOT_HSPF.jsp',
					method : 'post',
					params : {
						V_TYPE : 'I',
						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
						V_BL_DOC_NO : Ext.getCmp('W_BL_DOC_NO').getValue(),
						V_LC_DOC_NO : Ext.getCmp('W_LC_DOC_NO').getValue(),
						
						V_BP_NM : Ext.getCmp('W_BP_NM').getValue(),
						V_SHPNG_COMPANY : Ext.getCmp('W_SHPNG_COMPANY').getValue(),
						V_VESSEL_NM : Ext.getCmp('W_VESSEL_NM').getValue(),
						V_VOYAGE_NO : Ext.getCmp('W_VOYAGE_NO').getValue(),
						V_LOADING_PORT : Ext.getCmp('W_LOADING_PORT').getValue(),
						V_DISCHGE_PORT : Ext.getCmp('W_DISCHGE_PORT').getValue(),
						V_PACKAGE_CNT : Ext.getCmp('W_PACKAGE_CNT').getValue(),
					},
					success : function(response) {
						Ext.toast({
							title : ' ',
							timeout : 1000,
							html : '저장완료',
							style : 'text-align: center',
							align : 't',
							width : 130,
						});
						
						Ext.Ajax.request({
							url:'sql/M_LG_FORM_TOT_HSPF.jsp',
							method: 'post',
							params: {
				    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
				    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
								V_TYPE: 'S', //조회
								V_BL_DOC_NO: Ext.getCmp('W_BL_DOC_NO').getValue(),
							},
							callback : function(records,operations,success){
								
						    },
						    success : function(response) {
						    	var res = Ext.JSON.decode(response.responseText).resultList[0];
						    	
								if(!!res){
									Ext.getCmp('W_BP_NM').setValue(res.BP_NM);
									Ext.getCmp('W_SHPNG_COMPANY').setValue(res.SHPNG_COMPANY);
									Ext.getCmp('W_VESSEL_NM').setValue(res.VESSEL_NM);
									Ext.getCmp('W_VOYAGE_NO').setValue(res.VOYAGE_NO);
									Ext.getCmp('W_LOADING_PORT').setValue(res.LOADING_PORT);
									Ext.getCmp('W_DISCHGE_PORT').setValue(res.DISCHGE_PORT);
									Ext.getCmp('W_PACKAGE_CNT').setValue(res.PACKAGE_CNT);
									Ext.getCmp('W_BANK_CD').setValue(res.BANK_CD);
								}
						    },
							scope: this
						});
					}
				})
			}
		});
    },
    
    w_printLgBtnClick: function(button, e, eOpts) {
    	var url = '';
    	
//    	if(parent.Ext.getCmp('MAIN_SERVER_YN').getValue() == 'Y'){
    	if(Ext.getCmp('W_BANK_CD').getValue() == '32'){
	    	url = 'http://123.142.124.170:8080/aireport/on_server/M_LG_TOT_HSPF_BNK.jsp?reportParams=savename:';  	
		} else{
	    	url = 'http://123.142.124.170:8080/aireport/on_server/M_LG_TOT_HSPF_KN.jsp?reportParams=savename:';  	
		}
    	
    	if(!!Ext.getCmp('W_BL_DOC_NO').getValue()) {
    		var params = '&V_BL_DOC_NO=' + Ext.getCmp('W_BL_DOC_NO').getValue();

    		url = url +  Ext.getCmp('W_BL_DOC_NO').getValue() + params;
    		
    		Ext.Msg.confirm('확인', 'LG송금서를 출력하시겠습니까?', function(button) {
        		if (button == 'yes') {
					var myWin = new Ext.Window({
						title : 'LG송금서',
						html : '<iframe name="xxx" border =0 src="'+url+'" width="100%" height="100%"></iframe>',
						width : 1000,
						height : 768,
						modal : true
					});
					myWin.show();
					myWin.setSize(Ext.getBody().getViewSize());
					myWin.setPagePosition(0, 0);
        		}
        	})
    	} else {
    		Ext.Msg.alert('확인', 'B/L번호를 확인하세요.');
    	}
    },

    clrBtnClick: function(button, e, eOpts) {
    	var store = Ext.getStore('MyStore');

    	Ext.getCmp('V_BP_CD').setValue('');
    	Ext.getCmp('V_BP_NM').setValue('');
    	Ext.getCmp('V_LC_DOC_NO').setValue('');
    	Ext.getCmp('V_BL_DOC_NO').setValue('');
    	Ext.getCmp('V_PO_NO').setValue('');
    	
    	Ext.getCmp('V_AFFILIATE').setValue('');
    	Ext.getCmp('V_MAKER').setValue('');
    	Ext.getCmp('V_PO_USR_NM').setValue('');
    	Ext.getCmp('V_ITEM_CD').setValue('');
    	Ext.getCmp('V_ITEM_NM').setValue('');
    	
    	Ext.getCmp('V_SELECTED_AMT').setValue('');
    	
    	var promise = this.checkModify();
    	promise.then(
        	function(flag){
        	  	if(flag) {
        	   		store.removeAll();
        	   	}
        	}
        );
    },

    clsBtnClick: function(button, e, eOpts) {
    	var tab=parent.Ext.getCmp('myTab');
        var activeTab=tab.getActiveTab();
        var tabIndex=tab.items.indexOf(activeTab);
    	var store = Ext.getStore('MyStore');
    	
    	var promise = this.checkModify();
    	promise.then(
    	    function(flag){
    		   	if(flag) {
    		   		tab.remove(tabIndex, true);
    		   	}
    	    }
        );
    },

    tfEnter: function(field, e, eOpts) {
       	if (e.getKey() == e.ENTER) {
       		this.selBtnClick();
       	}
    },
    
    checkModify: function() {
    	var deferred = new Ext.Deferred();
    	var store = Ext.getStore('MyStore');
    	var saveCheck = false; 
    	
    	store.each(function(record, idx) {
			if(record.isDirty()) {
				saveCheck = true;
				return;
			}
		});
    	
    	if(saveCheck){
			Ext.Msg.confirm('확인', '저장하지 않은 정보가 존재합니다.<br>계속 진행 하시겠습니까?', function(button) {
				if (button == 'yes') {
					deferred.resolve(true);
				} else {
					deferred.resolve(false);
				}
			});
		} else {
			deferred.resolve(true);
		}
    	
    	return deferred.promise;
    },
    
    onLaunch: function() {
    	var me = M_IMP_TOT_HSPF.app.getController("TbButtonController")
    	var tab=parent.Ext.getCmp('myTab');
    	tab.getActiveTab().on({
    		beforeclose: function(component, eOpts) {
    			me.clsBtnClick();
    	    	return false;
    	    },
    	 });
        
    	var BPstore = Ext.getStore('WinBpPopStore');
        BPstore.load();
    }

});
