/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_PO_BASE_INFO.controller.MyGridController', {
    extend: 'Ext.app.Controller',
    stores: ['MyStore'],
    control: {
		"#gridSaveBtn" : {
			click : 'gridSaveBtnClick'
		},
		"#gridDelBtn" : {
			click : 'gridDelBtnClick'
		},
        "#xlsxDown": {
            click: 'xlsxDownClick'
        },
        "#gridAddBtn": {
        	click: 'gridAddBtnClick'
        },
    },

    gridSaveBtnClick: function(button, e, eOpts) {
        var store = this.getMyStoreStore();
        var gridRecord = Ext.getCmp('grid1').getSelectionModel().getSelection();
    	
    	if(gridRecord.length > 0) {
    		Ext.Msg.confirm('확인','저장하시겠습니까?<br>총 ['+gridRecord.length+'] 건', function(button){
    			if(button == 'yes') {
    				store.each(function(rec, idx) {
    					if(rec.get('V_TYPE') == 'V') {
    						if(rec.phantom == true) {
    							rec.set('V_TYPE','I');
    						} else {
    							rec.set('V_TYPE','U');
    						}
    					}
    				});
    				
    				store.sync({
    					params: {
    						V_TYPE : 'SYNC',
    						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
    					},
    		    		callback: function(records, operation, success) {
							var res = records.operations[0]._response.responseText;
							if (res.match('Exception')) {
								Ext.Msg.alert('확인', res);
							} else {
								store.reload();
	    		    			Ext.toast({
									title : ' ',
									timeout : 1000,
									html : '등록완료',
									style : 'text-align: center',
									align : 't',
									width : 130,
								});
							}
    					},
    		    	});
    			}
    		});
    	}
    },
    gridDelBtnClick: function(button, e, eOpts) {
        var store = this.getMyStoreStore();
        var gridRecord = Ext.getCmp('grid1').getSelectionModel().getSelection();
    	
    	if(gridRecord.length > 0) {
			Ext.Msg.confirm('확인','삭제하시겠습니까?<br>총 ['+gridRecord.length+'] 건', function(button){
    			if(button == 'yes') {
    				store.each(function(rec, idx) {
    					if(rec.get('V_TYPE') == 'V') {
    						rec.set('V_TYPE', 'D');
    					}
    				})
    				
    				store.sync({
    					params: {
    						V_TYPE : 'SYNC',
    						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
    					},
    		    		callback: function(records, operation, success) {
//    		    			B_CODE_HSGRP.app.getController("TbButtonController").selBtnClick()
    		    			store.reload();

    		    			Ext.toast({
								title : ' ',
								timeout : 1000,
								html : '삭제완료',
								style : 'text-align: center',
								align : 't',
								width : 130,
							});
    					}
    		    	});
    			}
    		});
    	}
    },
    gridAddBtnClick: function(button, e, eOpts) {
    	var gridRecord1 = Ext.getCmp('grid1').getSelectionModel().getSelection();
    	var popup = Ext.create("M_PO_BASE_INFO.view.WinAddRow");
    	popup.show();
		Ext.getCmp('rowCount').setValue(1); 
    	
    },
    
    xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('grid1');
    	grid.saveDocumentAs({
            type: 'xlsx',
            title: '마스터코드', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
		});
    },


});
