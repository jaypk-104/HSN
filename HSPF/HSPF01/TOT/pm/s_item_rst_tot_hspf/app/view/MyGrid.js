/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_ITEM_RST_TOT_HSPF.view.MyGrid', {
	extend : 'Ext.grid.Panel',
	alias : 'widget.myGrid',

	requires : [ 
		'S_ITEM_RST_TOT_HSPF.view.MyGridViewModel', 
		'Ext.view.Table', 
		'Ext.grid.column.RowNumberer', 
		'Ext.grid.column.Number', 
		'Ext.grid.column.Date', 
		'Ext.selection.CheckboxModel', 
		'Ext.grid.plugin.Exporter', 
		'Ext.grid.plugin.CellEditing' 
	],

	viewModel : {
		type : 'mygrid'
	},

	id : 'myGrid',
	store : 'MyStore',
	style : 'border: 1px solid lightgray; padding: 5px;',
	title : 'My Grid Panel',
	header : false,

	config : {
		tbar : [ 
//		{
//			id : 'gridAddBtn',
//			text : '',
//			margin : '0 3 0 0',
//			glyph : 'xf055@FontAwesome',
//			iconCls : 'grid-add-btn',
//		}, {
//			id : 'gridDelBtn',
//			text : '',
//			margin : '0 3 0 0',
//			glyph : 'xf056@FontAwesome',
//			iconCls : 'grid-del-btn',
//		}, {
//			id : 'gridSaveBtn',
//			xtype : 'button',
//			glyph : 'xf0c7@FontAwesome',
//			iconCls : 'grid-save-btn',
//			margin : '0 3 0 0'
//		}, 
		{
			xtype : 'container',
			flex : 1
		}, {
			xtype : 'button',
			glyph : 'xf1c3@FontAwesome',
			id : 'xlsxDown',
			cfg : {
				type : 'excel07',
				ext : 'xlsx'
			},
			iconCls : 'grid-excel-btn',
			margin : '0 3 0 0',
		} ]
	},

	viewConfig : {
		enableTextSelection : true,
	},

	columns : [ {
		xtype : 'rownumberer',
		width : 40
	}, {
		xtype : 'gridcolumn',
		text : 'V_TYPE',
		hidden : true,
	}, 
//	{
//		xtype : 'gridcolumn',
//		dataIndex : 'TO_SALES_GRP',
//		style : 'text-align: center; font-weight: bold;',
//		align : 'center',
//		text : '부서',
//		width : 100,
//		hidden: true
//	}, {
//		xtype : 'gridcolumn',
//		dataIndex : 'SALES_GRP_NM',
//		style : 'text-align: center; font-weight: bold;',
//		text : '부서명',
//		width : 130,
//	}, 
	{
		xtype : 'gridcolumn',
		dataIndex : 'SALES_GRP_NM',
		style : 'text-align: center; font-weight: bold;',
		text : '부서',
		width : 130,
		filter: { 
    		type : 'list',
        },
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'GROUP_TYPE_NM',
		style : 'text-align: center; font-weight: bold;',
		text : '품목그룹',
		width : 110,
		filter: { 
    		type : 'list',
        },
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'IV_TYPE_NM',
		style : 'text-align: center; font-weight: bold;',
		text : '매입구분',
		width : 130,
		filter: { 
    		type : 'list',
        },
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'ITEM_GROUP_NM',
		style : 'text-align: center; font-weight: bold;',
		text : '매출구분',
		width : 130,
		filter: { 
    		type : 'list',
        },
	}, {
		text : '구매 실적',
		style : 'text-align: center; font-weight: bold;',
		columns : [ {
			xtype : 'gridcolumn',
			dataIndex : 'M_BP_CD',
			style : 'text-align: center; font-weight: bold;',
			align : 'center',
			text : '구매처',
			width : 100,
			hidden: true
		}, {
			xtype : 'gridcolumn',
			dataIndex : 'M_BP_NM',
			style : 'text-align: center; font-weight: bold;',
			text : '구매처',
			width : 150,
		}, {
			xtype : 'gridcolumn',
			dataIndex : 'ITEM_CD',
			style : 'text-align: center; font-weight: bold;',
			text : '품목코드',
			width : 120,
		}, {
			xtype : 'gridcolumn',
			dataIndex : 'ITEM_NM',
			style : 'text-align: center; font-weight: bold;',
			text : '품목명',
			width : 200,
		}, {
			xtype : 'datecolumn',
			dataIndex : 'MVMT_DT',
			style : 'text-align: center; font-weight: bold;',
			text : '매입계산서등록일',
			align : 'center',
			format : 'Y-m-d',
			width : 130
		}, 
		{
			xtype : 'gridcolumn',
			dataIndex : 'CUR',
			style : 'text-align: center; font-weight: bold;',
			text : '화폐단위',
			align : 'center',
			width : 100,
		}, 
		{
			xtype : 'numbercolumn',
			dataIndex : 'IV_QTY',
			style : 'text-align: center; font-weight: bold;',
			align : 'end',
			text : '구매수량',
			width : 120,
			format : '0,000.00',
			summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
	        },
	        exportStyle: {
				 format : 'Qty',
				 alignment: {
					 horizontal: 'Right'
				 },
			},
		}, {
			xtype : 'numbercolumn',
			dataIndex : 'IV_DOC_PRC',
			style : 'text-align: center; font-weight: bold;',
			align : 'end',
			text : '구매단가(외화)',
			width : 130,
			format : '0,000.00000',
			exportRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
	            return Ext.util.Format.number(value, '0,000.00000');
	        },
			exportStyle: {
				 format : 'Price',
				 alignment: {
					 horizontal: 'Right'
				 },
			},
		}, {
			xtype : 'numbercolumn',
			dataIndex : 'IV_PRC',
			style : 'text-align: center; font-weight: bold;',
			align : 'end',
			text : '구매단가(원화)',
			width : 130,
			format : '0,000',
			exportStyle: {
				 format : 'Number',
				 alignment: {
					 horizontal: 'Right'
				 },
			},
		}, {
			xtype : 'numbercolumn',
			dataIndex : 'IV_DOC_AMT',
			style : 'text-align: center; font-weight: bold;',
			align : 'end',
			text : '구매금액(외화)',
			width : 150,
			format : '0,000.0000',
			summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.0000')+"<font>"; 
	        },
	        exportStyle: {
				 format : 'Fixed',
				 alignment: {
					 horizontal: 'Right'
				 },
			},
		}, {
			xtype : 'numbercolumn',
			dataIndex : 'IV_LOC_AMT',
			style : 'text-align: center; font-weight: bold;',
			align : 'end',
			text : '구매금액(원화)',
			width : 150,
			format : '0,000',
			summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
	        },
	        exportStyle: {
				 format : 'Number',
				 alignment: {
					 horizontal: 'Right'
				 },
			},
		}, ]
	}, {
		text : '매출 실적',
		style : 'text-align: center; font-weight: bold;',
		columns : [ {
			xtype : 'gridcolumn',
			dataIndex : 'S_BP_CD',
			style : 'text-align: center; font-weight: bold;',
			align : 'center',
			text : '판매처',
			width : 100,
			hidden: true
		}, {
			xtype : 'gridcolumn',
			dataIndex : 'S_BP_NM',
			style : 'text-align: center; font-weight: bold;',
			text : '판매처',
			width : 150,
		}, {
			xtype : 'datecolumn',
			dataIndex : 'BILL_DT',
			style : 'text-align: center; font-weight: bold;',
			text : '매출계산서등록일',
			align : 'center',
			format : 'Y-m-d',
			width : 130
		}, {
			xtype : 'gridcolumn',
			dataIndex : 'BILL_CUR',
			style : 'text-align: center; font-weight: bold;',
			text : '화폐단위',
			align : 'center',
			width : 100,
		}, {
			xtype : 'numbercolumn',
			dataIndex : 'BILL_QTY',
			style : 'text-align: center; font-weight: bold;',
			align : 'end',
			text : '판매수량',
			width : 120,
			format : '0,000.00',
			summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
	        },
	        exportStyle: {
				 format : 'Qty',
				 alignment: {
					 horizontal: 'Right'
				 },
			},
		}, {
			xtype : 'numbercolumn',
			dataIndex : 'BILL_PRC',
			style : 'text-align: center; font-weight: bold;',
			align : 'end',
			text : '판매단가(외화)',
			width : 130,
			format : '0,000.00000',
			exportRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
	            return Ext.util.Format.number(value, '0,000.00000');
	        },
			exportStyle: {
				 format : 'Price',
				 alignment: {
					 horizontal: 'Right'
				 },
			},
		}, {
			xtype : 'numbercolumn',
			dataIndex : 'BILL_LOC_PRC',
			style : 'text-align: center; font-weight: bold;',
			align : 'end',
			text : '판매단가(원화)',
			width : 120,
			format : '0,000',
			exportStyle: {
				 format : 'Number',
				 alignment: {
					 horizontal: 'Right'
				 },
			},
		}, {
			xtype : 'numbercolumn',
			dataIndex : 'BILL_DOC_AMT',
			style : 'text-align: center; font-weight: bold;',
			align : 'end',
			text : '판매금액(외화)',
			width : 150,
			format : '0,000.0000',
			summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.0000')+"<font>"; 
	        },
	        exportStyle: {
				 format : 'Fixed',
				 alignment: {
					 horizontal: 'Right'
				 },
			},
		}, {
			xtype : 'numbercolumn',
			dataIndex : 'BILL_LOC_AMT',
			style : 'text-align: center; font-weight: bold;',
			align : 'end',
			text : '판매금액(원화)',
			width : 150,
			format : '0,000',
			summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
	        },
	        exportStyle: {
				 format : 'Number',
				 alignment: {
					 horizontal: 'Right'
				 },
			},
		}, {
			xtype : 'numbercolumn',
			dataIndex : 'S_PROFIT_AMT',
			style : 'text-align: center; font-weight: bold;',
			align : 'end',
			text : '매출이익',
			width : 130,
			format : '0,000',
			summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
	        },
	        exportStyle: {
				 format : 'Number',
				 alignment: {
					 horizontal: 'Right'
				 },
			},
		},{
			xtype : 'numbercolumn',
			dataIndex : 'S_PROFIT_RATE',
			style : 'text-align: center; font-weight: bold;',
			align : 'end',
			text : '매출이익율',
			width : 120,
			format : '0,000.00',
			exportStyle: {
				 format : 'Qty',
				 alignment: {
					 horizontal: 'Right'
				 },
			},
		},]
	}],
	selModel : {
		selType : 'checkboxmodel',
		listeners : {}
	},
	features : [ {
		ftype: 'summary',
        dock: 'bottom'
	} ],
	plugins : [ {
		ptype : 'gridexporter'
	}, {
		ptype: 'gridfilters' 
    }, {
		ptype : 'cellediting',
		clicksToEdit : 1,
	// listeners : {
	// beforeedit : function(e, editor) {
	// if (e.grid.selection.data.V_TYPE === 'V') {
	// return false;
	// }
	//
	// return true;
	// }
	// }
	} ],

});