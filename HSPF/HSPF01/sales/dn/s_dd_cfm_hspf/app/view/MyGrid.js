/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_DD_CFM_HSPF.view.MyGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.myGrid',

    requires: [
        'S_DD_CFM_HSPF.view.MyGridViewModel',
        'Ext.view.Table',
        'Ext.grid.column.RowNumberer',
        'Ext.grid.column.Number',
        'Ext.form.field.Number',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.CellEditing'
    ],

    config: {
        tbar: [
            {
                id: 'gridAddBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf055@FontAwesome',
                iconCls: 'grid-add-btn',
                disabled: true
            },
            {
                id: 'gridDelBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf056@FontAwesome',
                iconCls: 'grid-del-btn',
                disabled: true
            },
            {
                id: 'cfmBtn',
                text: '확정/취소',
            	margin: '0 3 0 0',
                style: 'background-color: white; border: 0.5px solid #3367d6;',
                cls: 'blue-btn',
                width: 100
            },
            {
            	xtype: 'checkboxfield',
            	boxLabel: '확정내역 숨기기',
            	id: 'chk',
            	margin: '0 10 0 0',
            	value: true
            },
            {
                id: 'btn2',
                text: '버튼2',
            	margin: '0 3 0 0',
                style: 'background-color: white; border: 0.5px solid #3367d6;',
                cls: 'blue-btn',
                width: 100,
                hidden: true
            },
            {
                xtype: 'container',
                flex: 1
            },
            {
            	xtype: 'button',
            	text: '출고거래명세서',
            	id: 'dnTaxPrintBtn',
            	margin:'0 3 0 0',
            	style: 'background-color: white; border: 0.5px solid #3367d6;',
            	cls: 'blue-btn',
            },
            {
            	xtype: 'button',
            	text: '출하지도서출력',
            	id: 'shipPrintBtn',
            	margin:'0 3 0 0',
            	style: 'background-color: white; border: 0.5px solid #3367d6;',
            	cls: 'blue-btn',
            },
            {
                xtype: 'button',
                glyph: 'xf1c3@FontAwesome',
                id: 'xlsxDown',
                cfg: {
                    type: 'excel07',
                    ext: 'xlsx'
                },
                iconCls: 'grid-excel-btn',
            }
        ]
    },

    viewModel: {
        type: 'mygrid'
    },
    id: 'myGrid',
    style: 'border: 1px solid #659DDC; padding: 5px;',
    bodyBorder: false,
    header: false,
    store: 'MyStore',

    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            text: 'V_TYPE'
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'DD_NO',
            enableTextSelection: true,
            text: '출고지시번호',
            width: 150
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'DD_SEQ',
            enableTextSelection: true,
            text: '출고지시순번',
            format: '0,000',
            align: 'right',
            width: 110
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'TO_SL_CD',
        	enableTextSelection: true,
        	text: 'TO_SL_CD(hd)',
        	hidden: true
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'TO_SL_NM',
            enableTextSelection: true,
            text: 'TO 창고',
            width: 120
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'CUST_ORDER_NO',
            enableTextSelection: true,
            text: '고객요청번호',
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            width: 113,
            sortable: true,
            dataIndex: 'ITEM_CD',
            enableTextSelection: true,
            text: '품목코드',
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            width: 150,
            sortable: true,
            dataIndex: 'ITEM_NM',
            enableTextSelection: true,
            text: '품목명',
        },
        {
            xtype: 'numbercolumn',
            align: 'end',
            style: 'text-align: center; font-weight: bold;',
            width: 113,
            sortable: true,
            dataIndex: 'DD_QTY',
            enableTextSelection: true,
            text: '요청수량',
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
                return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
            }
        },
        {
            xtype: 'numbercolumn',
            align: 'end',
            style: 'text-align: center; font-weight: bold;',
            width: 113,
            sortable: true,
            dataIndex: 'DN_QTY',
            enableTextSelection: true,
            text: '출고수량',
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
                return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
            }
        },
        {
            xtype: 'numbercolumn',
            align: 'end',
            style: 'text-align: center; font-weight: bold;',
            width: 113,
            sortable: true,
            dataIndex: 'REMAIN_QTY',
            enableTextSelection: true,
            text: '미납수량',
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
                return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            width: 150,
            sortable: true,
            dataIndex: 'CHNG_DD_NO',
            enableTextSelection: true,
            text: '출고지시번호변경',
            align: 'center',
            editor: {
        		xtype: 'combobox',
        		editable: false,
        		valueField: 'DD_NO',
        		displayField: 'DD_NO',
        		autoLoadOnValue: true,
        		store: 'ComboStore',
        	},
        	emptyCellText: '(click)'
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            width: 100,
            sortable: true,
            dataIndex: 'END_YN',
            enableTextSelection: true,
            text: '확정유무',
            align: 'center'
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            width: 300,
            sortable: true,
            dataIndex: 'CAR_NO',
            enableTextSelection: true,
            text: '차량번호',
            editor: {
        		xtype: 'combobox',
        		editable: false,
        		valueField: 'CAR_NO',
        		displayField: 'CAR_TYPE',
        		autoLoadOnValue: true,
        		store: 'CarStore',
        		listConfig: {
                    itemTpl: [
                        '<div>{CAR_TYPE} ({CAR_NO})</div>'
                    ]
                }
        	},
        	emptyCellText: '(click)',
        	renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('CarStore').findRecord('CAR_NO',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('CarStore').findRecord('CAR_NO',value).get('CAR_TYPE');
                }
                return value;
            },
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	width: 150,
        	sortable: true,
        	dataIndex: 'FROM_DD_NO',
        	enableTextSelection: true,
        	text: '이전 출고지시번호',
        }
    ],
    features: [
               {
                   ftype: 'summary'
               }
            ],
    selModel: {
        selType: 'checkboxmodel',
        listeners: {
        	select: function(rowmodel, record, index, eOpts) {
            	record.set('V_TYPE', 'V');
            	
            	var DD_NO = record.get('DD_NO');
            	var store = Ext.getStore('MyStore');
            	var selModel= Ext.getCmp('myGrid').getSelectionModel();
            	
            	store.each(function(record){
        			if(DD_NO == record.get('DD_NO')&& DD_NO != undefined) {
    					selModel.select(record, true);
        			}
        		});
            },
            deselect: function(rowmodel, record, index, eOpts) {
            	record.set('V_TYPE', '');
            	
            	var DD_NO = record.get('DD_NO');
            	var store = Ext.getStore('MyStore');
            	var selModel= Ext.getCmp('myGrid').getSelectionModel();
            	
            	store.each(function(record){
        			if(DD_NO == record.get('DD_NO')&& DD_NO != undefined) {
    					selModel.deselect(record, true);
        			}
        		});
            }
        }
    },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        {
            ptype: 'cellediting',
            clicksToEdit: 1,
            listeners: {
            	beforeedit: function(editor, context, eOpts) {
            		if(context.record.data.END_YN =='Y') {
            			context.cancel = true;
            		} 
               }
            }
        },
        
    ],
    viewConfig: {
      	enableTextSelection: true,
      	getRowClass: function(record, index) {
            var END_YN = record.get('END_YN');
            if(END_YN == 'Y') {
            	return 'bg-green'
            }
        },
    }

});