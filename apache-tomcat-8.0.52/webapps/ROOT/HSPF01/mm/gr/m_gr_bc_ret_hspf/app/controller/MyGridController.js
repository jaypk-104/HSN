/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_GR_BC_RET_HSPF.controller.MyGridController', {
    extend: 'Ext.app.Controller',
    stores: ['MyStore'],
    control: {
        "#retOkBtn": {
            click: 'retOkBtnClick'
        },
        "#retCancelBtn": {
            click: 'retCancelBtnClick'
        },
        "#barcodePrintBtn": {
        	click: 'barcodePrintBtnClick'
        },
        "#xlsxDown": {
            click: 'xlsxDownClick'
        },
        "#gridAddBtn": {
        	click: 'gridAddBtnClick'
        },
    },

    retOkBtnClick: function(button, e, eOpts) {
    	var grid = Ext.getCmp('myGrid');
        var store = grid.getStore();
//        var store = this.getMyStoreStore();
    	var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
    	var flag = '';
    	
    	for(var i=0; i<gridRecord.length; i++) {
    		if(gridRecord[i].data['CFM_YN'] == 'Y') {
    			flag = 'F';
    			break;
    		} else {
    			flag = 'T';
    		}
    	}
    	
    	if(gridRecord.length > 0) {
    		if(flag == 'T') {
    			Ext.Msg.confirm('확인','반품확정 하시겠습니까?<br>확정시 바코드 번호가 변경됩니다.', function(button){
        			if(button == 'yes') {
        				for(var i=0; i<gridRecord.length; i++) {
        		    		if(gridRecord[i].data['V_TYPE']=='V') {
        		    			gridRecord[i].set('V_TYPE','CF');
        		    		}
        		    	}
        		    	store.sync({
        					params: {
        						V_TYPE: 'SYNC',
        						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
        						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
        					},
        		    		callback: function() {
//        		    			console.log('callback', arguments);
        		    			/*
        		    			Ext.Msg.confirm('확인','변경된 바코드를 출력 하시겠습니까?', function(button){
	    			    			if(button == 'yes') {
	    			    				this.barcodePrintBtnClick();
	    			    			}
	    		    			});
	    		    			*/
        		    			Ext.Msg.alert('확인', '반품확정 되었습니다.<br>바코드일별입고마감에서 입고확정 확인해주세요.');
        		    			store.reload();
        		    			
        		    		},
        		    		success : function(){
//        		    			console.log('success', arguments);
        		    		},
        		    		failure : function(){
//        		    			console.log('failure', arguments);
        		    		},
        		    	});
        			}
        		});
    		} else {
    			Ext.Msg.alert('확인', '반품확정 된 내역입니다.');
    		}
    		
    	}
    },

    retCancelBtnClick: function(button, e, eOpts) {
        var store = Ext.getStore('MyStore');
    	var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
    	var flag = '';

    	for(var i=0; i<gridRecord.length; i++) {
    		if(gridRecord[i].data['CFM_YN'] == 'N') {
    			flag = 'F';
    			break;
    		} else {
    			flag = 'T';
    		}
    	}
    	
    	if(gridRecord.length > 0) {
    		if(flag == 'T') {
	    		Ext.Msg.confirm('확인','반품취소 하시겠습니까?', function(button){
	    			if(button == 'yes') {
	    				for(var i=0; i<gridRecord.length; i++) {
	    		    		if(gridRecord[i].data['V_TYPE']=='V') {
	    		    			gridRecord[i].data['V_TYPE'] = 'CF_N';
	    		    		}
	    		    	}
	    		    	store.sync({
	    					params: {
	    						V_TYPE: 'SYNC',
	    						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
	    						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
	    					},
	    		    		callback: function(records, operation, success) {
	    		    			
	    		    			store.reload();
	    					}
	    		    	});
	    			}
	    		});
    		} else {
    			Ext.Msg.alert('확인', '반품 미확정 내역입니다.');
    		}
    	}
    },
    
    barcodePrintBtnClick: function(button, e, eOpts) {
    	var grid = Ext.getCmp('myGrid');
    	var store = grid.getStore();
    	var record = grid.getSelectionModel().getSelection();
    	
    	if(record.length >= 1){
    		var lot_no = record[0].data['NEW_LOT_BC_NO'];
    		for( var i = 1 ; i < record.length ; i ++){
				lot_no += '<>';
    			lot_no += record[i].data['NEW_LOT_BC_NO'];
    		}
    		lot_no = encodeURI(lot_no);
    		
    		var myWin = new Ext.Window({
				title : '바코드출력',
				html : '<iframe name="xxx" border =0 src="http://123.142.124.170:8080/aireport/on_server/DLVY_BARCODE_LOT.jsp?V_TYPE=S&V_LOT_NO='+lot_no+'" width="100%" height="100%"></iframe>',
				width : 1000,
				height : 768,
				modal : true
			});
			myWin.show();
			myWin.setSize(Ext.getBody().getViewSize());
			myWin.setPagePosition(0, 0);
    	}
    	else{
    		Ext.Msg.alert('확인', '바코드를 선택하세요.');
    	}
    },

    xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
            	var grid = Ext.getCmp('myGrid');
            	grid.saveDocumentAs({
                    type: 'xlsx',
                    title: 'test', //엑셀내타이틀
                    fileName: currentDate+'.xlsx' //엑셀파일이름
        		});
    },
    
    gridAddBtnClick: function(button, e, eOpts) {
        var popup = Ext.create("M_GR_BC_RET_HSPF.view.WinAddRow");
        popup.show();
    },

});
