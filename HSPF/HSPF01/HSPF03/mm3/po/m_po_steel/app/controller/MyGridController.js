/*
 * File: app/controller/RPoRegController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_PO_STEEL.controller.MyGridController', {
    extend: 'Ext.app.Controller',
	stores : [ 'MyStore'],
	control : {
		"#gridAddBtn" : {
			click : 'gridAddBtnClick'
		},
		'#gridDelBtn' : {
			click : 'gridDelBtnClick'
		},
		"#gridPoBtn" : { // '발주생성'
			click : 'gridPoBtn1Click'
		},
		"#gridPoSave" : { // '발주저장'
			click : 'gridPoSaveBtnClick'
		},
		"#gridPoCfm" : { // '확정/취소'
			click : 'gridPoCfmBtnClick'
		},
		"#xlsxDown" : { // '엑셀'
			click : 'xlsxDownClick'
		},
		"#gridPoEnd" : { // '발주마감'
			click : 'gridPoEndBtnClick'
		},
	},
	
	gridAddBtnClick: function() {
		var msg = '';
		var flag = 'T';

		if (Ext.getCmp('V_PO_TYPE').getValue() == '' || Ext.getCmp('V_PO_TYPE').getValue() == null || Ext.getCmp('V_PO_TYPE').getValue() == 'null') {
			msg = '발주유형';
			flag = 'F';
		} else if (Ext.getCmp('V_PO_DT').getValue() == '' || Ext.getCmp('V_PO_DT').getValue() == null || Ext.getCmp('V_PO_DT').getValue() == 'null') {
			msg = '발주일자';
			flag = 'F';
		} else if (Ext.getCmp('V_XCH_RATE').getValue() == '' || Ext.getCmp('V_XCH_RATE').getValue() == null || Ext.getCmp('V_XCH_RATE').getValue() == 'null') {
			msg = '환율';
			flag = 'F';
		} else if (Ext.getCmp('V_CUR').getValue() == '' || Ext.getCmp('V_CUR').getValue() == null || Ext.getCmp('V_CUR').getValue() == 'null') {
			msg = '화폐단위';
			flag = 'F';
		} else if (Ext.getCmp('V_IN_TERMS').getValue() == '' || Ext.getCmp('V_IN_TERMS').getValue() == null || Ext.getCmp('V_IN_TERMS').getValue() == 'null') {
			msg = '가격조건';
			flag = 'F';
		} else if (Ext.getCmp('V_PAY_METH').getValue() == '' || Ext.getCmp('V_PAY_METH').getValue() == null || Ext.getCmp('V_PAY_METH').getValue() == 'null') {
			msg = '결제방법';
			flag = 'F';
		} else if (Ext.getCmp('V_M_BP_NM').getValue() == '' || Ext.getCmp('V_M_BP_NM').getValue() == null || Ext.getCmp('V_M_BP_NM').getValue() == 'null') {
			msg = '공급사';
			flag = 'F';
		} else if (Ext.getCmp('V_TRANSPORT').getValue() == '' || Ext.getCmp('V_TRANSPORT').getValue() == null || Ext.getCmp('V_TRANSPORT').getValue() == 'null') {
			msg = '운송방법';
			flag = 'F';
		} 

		if (flag == 'T') {
			var popup = Ext.create("M_PO_STEEL.view.WinAddRow");
			popup.show();
			Ext.getCmp('rowCount').setValue(1);
		} else {
			Ext.Msg.alert('확인', '상단 발주헤더 정보를 입력하세요. (' + msg + ')');
		}
	},
	
	gridDelBtnClick: function() {
		var store = this.getMyStoreStore();
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var msg = '';
		var flag = '';
		
		for(var i=0; i<gridRecord.length; i++) {
			if(gridRecord[i].data['END_FLAG'] == 'Y') {
				flag = 'F';
				msg = '발주마감 된 내역입니다.';
				break;
			} else if(gridRecord[i].data['MAST_DB_NO'] != undefined) {
				flag = 'F';
				msg = '담보가 존재합니다.';
				break;
			} else if(gridRecord[i].data['V_TYPE'] == 'V') {
				gridRecord[i].set('V_TYPE', 'D');
			}
		}
		
		if( flag == 'T') {
		Ext.MessageBox.confirm('확인', '발주를 삭제하시겠습니까?', function(btn) {
			if(btn == 'yes') {
					store.sync({
						params : {
							V_TYPE : 'SYNC',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
						},
						callback : function(records, operation, success) {
					    	var res2 = records.operations[0]._response.responseText;
					    	
					    	if(res2.match('Exception')) {
					    		Ext.Msg.alert('확인', res2);
					    	} else {
					    		
					    		for(var i=0; i<gridRecord.length; i++) {
									if(gridRecord[i].data['V_TYPE'] == 'D') {
										store.remove(gridRecord[i]);
									}
								}
					    		
					    		if(store.getCount() == 0 ) {
					    			/*초기화*/
		    	    		    	Ext.getCmp('V_PO_NO').setEditable(true);
		    	    				Ext.getCmp('V_APPROV_NO').setEditable(true);
		    	    				Ext.getCmp('V_PO_TYPE').setDisabled(false);
		    	    		    	Ext.getCmp('V_PO_DT').setDisabled(false);
		    	    		    	Ext.getCmp('V_XCH_RATE').setDisabled(false);
		    	    		    	Ext.getCmp('V_CUR').setDisabled(false);
		    	    		    	Ext.getCmp('V_IN_TERMS').setDisabled(false);
		    	    		    	Ext.getCmp('V_PAY_METH').setDisabled(false);
		    	    		    	Ext.getCmp('V_M_BP_CD').setEditable(true);
		    	    		    	Ext.getCmp('V_M_BP_NM').setEditable(true);
		    	    		    	Ext.getCmp('V_S_BP_CD').setEditable(true);
		    	    		    	Ext.getCmp('V_S_BP_NM').setEditable(true);
		    	    		    	Ext.getCmp('V_PUR_USR').setEditable(true);
		    	    		    	Ext.getCmp('V_TRANSPORT').setEditable(true);
		    	    		    	Ext.getCmp('V_REMARK').setEditable(true);
		    	    		    	
		    	    		    	Ext.getCmp('V_PO_NO').setValue('');
		    	    		    	Ext.getCmp('V_APPROV_NO').setValue('');
		    	    		    	Ext.getCmp('V_APPROV_MGM_NO').setValue('');
		    	    		    	Ext.getCmp('V_PO_TYPE').setValue('');
		    	    		    	Ext.getCmp('V_PO_DT').setValue(new Date());
		    	    		    	Ext.getCmp('V_XCH_RATE').setValue(1);
		    	    		    	Ext.getCmp('V_CUR').setValue('USD');
		    	    		    	Ext.getCmp('V_IN_TERMS').setValue(null);
		    	    		    	Ext.getCmp('V_PAY_METH').setValue(null);
		    	    		    	Ext.getCmp('V_M_BP_NM').setValue('');
		    	    		    	Ext.getCmp('V_M_BP_CD').setValue('');
		    	    		    	Ext.getCmp('V_S_BP_NM').setValue('');
		    	    		    	Ext.getCmp('V_S_BP_CD').setValue('');
		    	    		    	Ext.getCmp('V_PUR_USR').setValue('');
		    	    		    	Ext.getCmp('V_TRANSPORT').setValue('');
		    	    		    	Ext.getCmp('V_REMARK').setValue('');
		    	    		    	Ext.getCmp('V_PO_CFM').setValue('N');
		    	    		    	
		    	    		    	Ext.getCmp('delBtn').setDisabled(false);
		    	    		    	Ext.getCmp('gridPoSave').setDisabled(false);
			    			    	Ext.getCmp('gridAddBtn').setDisabled(false);
			    			    	Ext.getCmp('gridDelBtn').setDisabled(false);
		    	    		    	/*초기화*/
					    		} else {
//					    			store.reload();
					    		}
					    	}
					    
						},
					});
				
			}
		});
		} else {
			Ext.Msg.alert('확인', msg);
		}
		
	},
	
	gridPoSaveBtnClick: function() {
		var store = this.getMyStoreStore(); 
		var flag = '';
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var V_TYPE_HDR = '';
		
		if (Ext.getCmp('V_PO_TYPE').getValue() == '' || Ext.getCmp('V_PO_TYPE').getValue() == null || Ext.getCmp('V_PO_TYPE').getValue() == 'null') {
			msg = '발주유형';
			flag = 'F';
		} else if (Ext.getCmp('V_PO_DT').getValue() == '' || Ext.getCmp('V_PO_DT').getValue() == null || Ext.getCmp('V_PO_DT').getValue() == 'null') {
			msg = '발주일자';
			flag = 'F';
		} else if (Ext.getCmp('V_XCH_RATE').getValue() == '' || Ext.getCmp('V_XCH_RATE').getValue() == null || Ext.getCmp('V_XCH_RATE').getValue() == 'null') {
			msg = '환율';
			flag = 'F';
		} else if (Ext.getCmp('V_CUR').getValue() == '' || Ext.getCmp('V_CUR').getValue() == null || Ext.getCmp('V_CUR').getValue() == 'null') {
			msg = '화폐단위';
			flag = 'F';
		} else if (Ext.getCmp('V_IN_TERMS').getValue() == '' || Ext.getCmp('V_IN_TERMS').getValue() == null || Ext.getCmp('V_IN_TERMS').getValue() == 'null') {
			msg = '가격조건';
			flag = 'F';
		} else if (Ext.getCmp('V_PAY_METH').getValue() == '' || Ext.getCmp('V_PAY_METH').getValue() == null || Ext.getCmp('V_PAY_METH').getValue() == 'null') {
			msg = '결제방법';
			flag = 'F';
		} else if (Ext.getCmp('V_M_BP_NM').getValue() == '' || Ext.getCmp('V_M_BP_NM').getValue() == null || Ext.getCmp('V_M_BP_NM').getValue() == 'null') {
			msg = '공급사';
			flag = 'F';
		} else if (Ext.getCmp('V_TRANSPORT').getValue() == '' || Ext.getCmp('V_TRANSPORT').getValue() == null || Ext.getCmp('V_TRANSPORT').getValue() == 'null') {
			msg = '운송방법';
			flag = 'F';
		} else {
			store.each(function(record, idx) {
				
				if (store.getAt(idx).get('PO_QTY') == null || store.getAt(idx).get('PO_QTY') == 0) {
					Ext.Msg.alert('확인', '수량을 확인하세요.');
					flag = 'F1';
					return false;
				} else if (store.getAt(idx).get('ITEM_CD') == null || store.getAt(idx).get('ITEM_CD') == "") {
					Ext.Msg.alert('확인', '품목을 입력하세요.');
					flag = 'F1';
					return false;
				} else if (store.getAt(idx).get('VAT_TYPE') == null || store.getAt(idx).get('VAT_TYPE') == "") {
					Ext.Msg.alert('확인', '부가세유형을 선택하세요.');
					flag = 'F1';
					return false;
				} else {
					flag = 'T';
					//발주번호가 존재하면
					if(Ext.getCmp('V_PO_NO').getValue().match('P')) {
						V_TYPE_HDR = 'U';
					} else {
						V_TYPE_HDR = 'I';
					}
				}
			}
			);
		}

		if (flag == 'T') {
			Ext.Msg.confirm('확인', '저장하시겠습니까?', function(button){
				if(button == 'yes') {
					Ext.Ajax.request({
						url : 'sql/M_PO_HSPF_STEEL_H.jsp',
						method : 'post',
						params : {
							V_TYPE : V_TYPE_HDR,
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_PO_NO : Ext.getCmp('V_PO_NO').getValue(),
							V_APPROV_NO : Ext.getCmp('V_APPROV_NO').getValue(),
							V_APPROV_MGM_NO : Ext.getCmp('V_APPROV_MGM_NO').getValue(),
							V_PO_TYPE : Ext.getCmp('V_PO_TYPE').getValue(),
							V_PO_DT : Ext.getCmp('V_PO_DT').getValue(),
							V_XCH_RATE : Ext.getCmp('V_XCH_RATE').getValue(),
							V_CUR : Ext.getCmp('V_CUR').getValue(),
							V_IN_TERMS : Ext.getCmp('V_IN_TERMS').getValue(),
							V_PAY_METH : Ext.getCmp('V_PAY_METH').getValue(),
							V_M_BP_CD : Ext.getCmp('V_M_BP_CD').getValue(),
							V_S_BP_CD : Ext.getCmp('V_S_BP_CD').getValue(),
							V_PUR_USR : Ext.getCmp('V_PUR_USR').getValue(),
							V_TRANSPORT : Ext.getCmp('V_TRANSPORT').getValue(),
							V_REMARK : Ext.getCmp('V_REMARK').getValue(),
							V_BL_YN : Ext.getCmp('V_BL_YN').getValue(),
							V_TRANSFER : Ext.getCmp('V_TRANSFER').getValue(),
						},

						// 발주상세저장
						callback : function(records,operations,success) {
						},
					    success : function(response) {
					    	var res = response.responseText;
					    	if(res.match('Exception')) {
					    		Ext.Msg.alert('확인', res);
					    	} else {
					    		store.each(function(record, idx) {
					    			if(record.phantom == true) { //신규발주이면 INSERT
					    				record.set('V_TYPE', 'I');
					    			} else { 
					    				record.set('V_TYPE', 'U');
					    			}
					    		})
					    		
					    		store.sync({
									params : {
										V_TYPE : 'SYNC',
										V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
										V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
										V_PO_NO : res
									},
									callback : function(records, operation, success) {
								    	var res2 = records.operations[0]._response.responseText;
								    	
								    	if(res2.match('Exception')) {
								    		Ext.Msg.alert('확인', res2);
								    	} else {
								    		if(V_TYPE_HDR == 'I') { //신규발주 시 발주번호 채번
								    			Ext.getCmp('V_PO_NO').setValue(res);
								    		}

								    		var tbController = M_PO_STEEL.app.getController("TbButtonController");
								    		tbController.selBtnClick();
								    	}
								    
									},
								});
					    	}
					    }
					});
				}
			});
		} else if(flag == 'F') {
			Ext.Msg.alert('확인', '상단 발주헤더 정보를 입력하세요. (' + msg + ')');
		}
	},
	gridPoCfmBtnClick: function() {
		var myMask = new Ext.LoadMask(Ext.getCmp('mycontainer') , {msg:"Please wait..."});
		var store = this.getMyStoreStore(); 
			
		var flag = '';
		var col_flag = '';

		var msg = '';
		
		store.each(function(rec, idx) {
			if(rec.get('MAST_DB_NO') == undefined) {
				col_flag = 'T';
			} else {
				col_flag = 'F';
				return false;
			}
		});
		
		if(Ext.getCmp('V_PO_CFM').getValue() == 'Y') {
			msg = '발주확정을 취소하시겠습니까?';
		} else {
			msg = '발주를 확정하시겠습니까?';
		}
		
		if(col_flag == 'T') {
			Ext.Msg.confirm('확인',msg, function(button){
				if(button == 'yes') {
					myMask.show();
					Ext.Ajax.request({
						url : 'sql/M_PO_HSPF_STEEL_H.jsp',
						method : 'post',
						params : {
							V_TYPE : 'CF',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_PO_NO : Ext.getCmp('V_PO_NO').getValue(),
							V_PO_CFM : Ext.getCmp('V_PO_CFM').getValue(),
						},
						
						// 발주상세저장
						callback : function(records,operations,success) {
						},
						success : function(response) {
							var res = response.responseText;
							
							if(res.match('Exception')) {
								Ext.Msg.alert('확인', res);
							} else {
								if(res == 'Y') {	
									Ext.getCmp('V_PO_CFM').setValue('Y');
									Ext.getCmp('gridPoSave').setDisabled(true);
									
									Ext.getCmp('V_PO_NO').setEditable(false);
									Ext.getCmp('V_PO_TYPE').setDisabled(true);
									Ext.getCmp('V_PO_DT').setDisabled(true);
									Ext.getCmp('V_XCH_RATE').setDisabled(true);
									Ext.getCmp('V_CUR').setDisabled(true);
									Ext.getCmp('V_IN_TERMS').setDisabled(true);
									Ext.getCmp('V_PAY_METH').setDisabled(true);
									Ext.getCmp('V_M_BP_CD').setEditable(false);
									Ext.getCmp('V_M_BP_NM').setEditable(false);
									Ext.getCmp('V_S_BP_CD').setEditable(false);
									Ext.getCmp('V_S_BP_NM').setEditable(false);
									Ext.getCmp('V_PUR_USR').setEditable(false);
									Ext.getCmp('V_TRANSPORT').setDisabled(true);
									Ext.getCmp('V_REMARK').setEditable(false);
									
									Ext.getCmp('gridPoSave').setDisabled(true);
									Ext.getCmp('delBtn').setDisabled(true);
									Ext.getCmp('gridAddBtn').setDisabled(true);
									Ext.getCmp('gridDelBtn').setDisabled(true);
									
									Ext.getCmp('V_BL_YN').setDisabled(true);
									Ext.getCmp('V_TRANSFER').setDisabled(true);
									
									store.reload();
									
									var dynamicTab={
											xtype:'panel',
											title : '담보등록',
											autoScroll: true,
											html : '<iframe name="xxx" border =0 src="/HSPF01/HSPF03/mm3/po/m_col_steel/M_COL_STEEL.jsp?PO_NO=12345" width="100%" height="100%"></iframe>',
											closable : true,
											id: Ext.getCmp('V_PO_NO').getValue()
									};
									parent.Ext.getCmp('myTab').add(dynamicTab).show();
									
								} else {
									Ext.getCmp('V_PO_CFM').setValue('N');
									Ext.getCmp('gridPoSave').setDisabled(false);
									
									Ext.getCmp('V_PO_NO').setEditable(true);
									Ext.getCmp('V_APPROV_NO').setEditable(true);
									Ext.getCmp('V_PO_TYPE').setDisabled(false);
									Ext.getCmp('V_PO_DT').setDisabled(false);
									Ext.getCmp('V_XCH_RATE').setDisabled(false);
									Ext.getCmp('V_CUR').setDisabled(false);
									Ext.getCmp('V_IN_TERMS').setDisabled(false);
									Ext.getCmp('V_PAY_METH').setDisabled(false);
									Ext.getCmp('V_M_BP_CD').setEditable(true);
									Ext.getCmp('V_M_BP_NM').setEditable(true);
									Ext.getCmp('V_S_BP_CD').setEditable(true);
									Ext.getCmp('V_S_BP_NM').setEditable(true);
									Ext.getCmp('V_PUR_USR').setEditable(true);
									Ext.getCmp('V_TRANSPORT').setDisabled(false);
									Ext.getCmp('V_REMARK').setEditable(true);
									
									Ext.getCmp('delBtn').setDisabled(false);
									Ext.getCmp('gridPoSave').setDisabled(false);
									Ext.getCmp('gridAddBtn').setDisabled(false);
									Ext.getCmp('gridDelBtn').setDisabled(false);
									
									Ext.getCmp('V_BL_YN').setDisabled(false);
									Ext.getCmp('V_TRANSFER').setDisabled(false);
									
									store.reload();
								}
							}
							myMask.hide();
						}
					});
				}
			});
			
		} else {
			Ext.Msg.alert('확인', '담보가 존재합니다. 확정취소 전 담보를 삭제하세요.');
		}
	},
	xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('myGrid');
    	grid.saveDocumentAs({
            type: 'xlsx',
            title: '발주등록', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
		});
	},

	gridPoEndBtnClick: function() {
		var store = this.getMyStoreStore();
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';
		
		for(var i=0; i<gridRecord.length; i++) {
			
			/*오퍼취소*/
			if(gridRecord[i].get('END_FLAG') == 'N') {
				if (gridRecord[i].get('MAST_DB_NO') != undefined) {
					flag = 'F';
					msg = '담보가 존재합니다.'
					break;
				} else if (gridRecord[i].get('END_APPROV_NO') == undefined || gridRecord[i].get('END_APPROV_NO').indexOf('품의번호') == -1) {
					flag = 'F';
					msg = '취소품의번호를 입력하세요.'
					break;
				} else {
					gridRecord[i].set('V_TYPE', 'E');
					flag = 'T';
				}
			/*오퍼취소를 취소*/
			} else if(gridRecord[i].get('END_FLAG') == 'Y') {
				gridRecord[i].set('V_TYPE', 'E');
				flag = 'T';
			}
		}
		
		if(gridRecord.length > 0) {
			if(flag == 'T') {
				Ext.Msg.confirm('확인','취소하시겠습니까?', function(button){
					if(button == 'yes') {
						store.sync({
							params : {
								V_TYPE : 'SYNC',
								V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
								V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							},
							callback : function(records, operation, success) {
						    	var res2 = records.operations[0]._response.responseText;
						    	
						    	if(res2.match('Exception')) {
						    		Ext.Msg.alert('확인', res2);
						    	} else {

						    		var tbController = M_PO_STEEL.app.getController("TbButtonController");
						    		tbController.selBtnClick();
						    	}
						    
							},
						});
					}
					
				});
			} else {
				Ext.Msg.alert('확인', msg);
			}
		} else {
			Ext.Msg.alert('확인', '발주마감/취소 할 내역을 선택하세요.');
		}
		
	
		
	}
});
