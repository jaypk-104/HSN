/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('A_AR_RECEIPT.controller.MyGridController1', {
	extend : 'Ext.app.Controller',
	stores : [ 'MyStore1', 'MyStore2', 'MyStore5', 'MyStore6', 'PopStore', 'CalcStore', 'CalcStore2', 'ArrayStore', 'FileStore' ],
	control : {
		"#findTargetBtn" : {
			click : 'findTargetBtnClick'
		},
		"#gridDelBtn1" : {
			click : 'gridDelBtn1Click'
		},
		"#gridDelBtn5" : {
			click : 'gridDelBtn5Click'
		},
		"#applyBtn" : {
			click : 'applyBtnClick'
		},
		"#arCfmBtn" : {
			click : 'arCfmBtnClick'
		},
		"#arCancelBtn" : {
			click : 'arCancelBtnClick'
		},
		"#arPrintBtn" : {
			click : 'arPrintBtnClick'
		},
		"#arRefundBtn" : {
			click : 'arRefundBtnClick'
		},
		"#arRefundBtn2" : {
			click : 'arRefundBtn2Click'
		},
		"#arDepositBtn" : {
			click : 'arDepositBtnClick'
		},
		"#arMatchBtn" : {
			click : 'arMatchBtnClick'
		},
		"#uploadBtn" : {/*증빙첨부*/
			click : 'uploadBtnClick'
		},
		"#xlsxDown1" : {
			click : 'xlsxDown1Click'
		},
		"#xlsxDown5" : {
			click : 'xlsxDown5Click'
		}
	},
	
	findTargetBtnClick: function(button, e, eOpts) {
		var popup = Ext.create("A_AR_RECEIPT.view.MyWindow");
		var store1 = Ext.getStore('MyStore1');
		var store5 = Ext.getStore('MyStore5');
		var totArAmt = 0;
		var totBcAmt = 0;
		var CLS_DT = Ext.getCmp('V_CLS_DT').getValue();
        
        popup.center();
        popup.show();

        Ext.getCmp('W_BP_NM').setValue(Ext.getCmp('V_BP_NM').getValue());
        Ext.getCmp('W_BP_CD').setValue(Ext.getCmp('V_BP_CD').getValue());
        
        if('/5124/5128'.indexOf(Ext.getCmp('V_DEPT_CD2').getValue()) > 0){
        	Ext.getCmp('W_AR_TYPE').setValue('B');
        } else {
        	Ext.getCmp('W_AR_TYPE').setValue('A');
        }
        
        if(!!CLS_DT){
        	Ext.getCmp('W_AR_DT_BS').setValue(CLS_DT);
        	if(Ext.getCmp('W_AR_TYPE').getValue() == 'B'){
        		Ext.getCmp('W_AR_DT_FR').setValue(CLS_DT);
            	Ext.getCmp('W_AR_DT_TO').setValue(CLS_DT);
        	} else {
        		Ext.getCmp('W_AR_DT_FR').setValue(Ext.Date.add(CLS_DT, Ext.Date.MONTH, -1));
    			Ext.getCmp('W_AR_DT_TO').setValue(Ext.Date.add(CLS_DT, Ext.Date.MONTH, 1));
        	}
        }
        
        store1.each(function(rec, idx) {
        	totArAmt += rec.get('REMAIN_AMT');
		});
        
        store5.each(function(rec, idx) {
        	totBcAmt += rec.get('BAL_AMT');
		});
        
        Ext.getCmp('W_TOT_AMT').setValue(totBcAmt);
        Ext.getCmp('W_REMAIN_AMT').setValue(totBcAmt-totArAmt);

        var popStore = Ext.getStore('PopStore');
        popStore.removeAll();   
    },
    
    gridDelBtn1Click : function(button, e, eOpts) {
		var store1 = Ext.getStore('MyStore1');
		var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		var flag = 'F';
		
		if (!Ext.getCmp('arCancelBtn').isDisabled()) {
			Ext.Msg.alert('확인', '전표취소 후 삭제가능합니다.');
			return;
    	}
		
		for(var i=0; i<gridRecord1.length; i++) {
			if(gridRecord1[i].get('V_TYPE') == 'I') {
				store1.remove(gridRecord1[i]);
			} else {
				gridRecord1[i].set('V_TYPE', 'D');
				flag = 'T';
			}
		}
		
		if(flag == 'T') {
			Ext.Msg.confirm('확인', '삭제하시겠습니까?', function(button) {
				if (button == 'yes') {
					
					store1.sync({
						params : {
							V_TYPE : 'T2ID',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_CLS_AR_NO : Ext.getCmp('V_CLS_AR_NO').getValue(),
						},
						callback : function(records, operation, success) {
							var tbController = A_AR_RECEIPT.app.getController("TbButtonController");
							tbController.selBtnClick();
						}, 
						success: function() {
						}
					});
				}
			});
		} else {
			this.initCalc();
		}
		
	},
	
	gridDelBtn5Click : function(button, e, eOpts) {
		var store5 = Ext.getStore('MyStore5');
		var gridRecord5 = Ext.getCmp('myGrid5').getSelectionModel().getSelection();
		var flag = 'F';
		
		if (!Ext.getCmp('arCancelBtn').isDisabled()) {
			Ext.Msg.alert('확인', '전표취소 후 삭제가능합니다.');
			return;
    	}
		
		for(var i=0; i<gridRecord5.length; i++) {
			if(gridRecord5[i].get('V_TYPE') == 'I') {
				store5.remove(gridRecord5[i]);
			} else {
				gridRecord5[i].set('V_TYPE', 'D');
				flag = 'T';
			}
		}
		
		if(flag == 'T') {
			Ext.Msg.confirm('확인', '삭제하시겠습니까?', function(button) {
				if (button == 'yes') {
					
					store5.sync({
						params : {
							V_TYPE : 'T2ID2',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_CLS_AR_NO : Ext.getCmp('V_CLS_AR_NO').getValue(),
						},
						callback : function(records, operation, success) {
//							store5.reload();
							var tbController = A_AR_RECEIPT.app.getController("TbButtonController");
							tbController.selBtnClick();
						}, 
						success: function() {
						}
					});
				}
			});
		} else {
			this.initCalc();
		}
		
	},
	
	applyBtnClick: function(button, e, eOpts) {
		var myGrid1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		var myGrid5 = Ext.getCmp('myGrid5').getSelectionModel().getSelection();
		var myGrid6 = Ext.getCmp('myGrid6').getSelectionModel().getSelection();
		var store1 = Ext.getStore('MyStore1');
		var store2 = Ext.getStore('MyStore2');
		var arrStore = Ext.getStore('ArrayStore');
		var calcStore = Ext.getStore('CalcStore');
		var calcStore2 = Ext.getStore('CalcStore2');
		
		if(myGrid1.length < 1 || (myGrid5.length < 1 && myGrid6.length < 1)){
			Ext.Msg.alert('확인', '선택된 행이 없습니다.');
			return;
		}
		
		for(var i=0; i<myGrid1.length; i++){
			if(!!!myGrid1[i].get('CLS_TYPE')){
				Ext.Msg.alert('확인', '대상구분이 선택되지 않은 행이 존재합니다.');
				return;
			} 
		}
		
		// 보증금 우선으로 떨기
		var calcCnt2 = calcStore2.getData().length;
		for(var i=0; i<myGrid6.length; i++){
			var record6 = myGrid6[i];
			var LOC_AMT = record6.get('LOC_AMT'); //금액
			var BAL_AMT = record6.get('BAL_AMT'); //잔액
			
			if(BAL_AMT > 0){
				for(var j=0; j<myGrid1.length; j++){
					var record1 = myGrid1[j];
					var REMAIN_AMT = record1.get('REMAIN_AMT'); //잔액
					var RECV_AMT = record1.get('RECV_AMT'); //수금금액
					var RECV_LOC_AMT = record1.get('RECV_LOC_AMT'); //수금자국금액
					var CLS_TYPE = record1.get('CLS_TYPE'); //대상구분
					
					if(REMAIN_AMT > 0 && CLS_TYPE.indexOf("C") >= 0){
						var diffAmt = BAL_AMT-REMAIN_AMT;
						var clsAmt = 0;
						calcCnt2++;
						
						if(diffAmt < 0){
							record1.set('REMAIN_AMT', diffAmt*-1);
							record1.set('REMAIN_DOC_AMT', diffAmt*-1);
							record1.set('RECV_AMT', RECV_AMT+BAL_AMT);
							record1.set('RECV_LOC_AMT', RECV_LOC_AMT+BAL_AMT);
							record6.set('BAL_AMT', 0);
							clsAmt = BAL_AMT;
						} else {
							BAL_AMT -= REMAIN_AMT;
							record1.set('REMAIN_AMT', 0);
							record1.set('REMAIN_DOC_AMT', 0);
							record1.set('RECV_AMT', RECV_AMT+REMAIN_AMT);
							record1.set('RECV_LOC_AMT', RECV_LOC_AMT+REMAIN_AMT);
							record6.set('BAL_AMT', diffAmt);
							clsAmt = REMAIN_AMT;
						}
						
						var rec2 = Ext.create('A_AR_RECEIPT.model.MyModel', {
							V_TYPE: 'I',
							SEQ: calcCnt2,
							MAST_DB_NO: record6.get('MAST_DB_NO'),
							COL_NO: record6.get('COL_NO'),
							COL_SEQ: record6.get('COL_SEQ'),
							BC_TYPE: record1.get('CLS_TYPE'),
							AR_NO: record1.get('AR_NO'),
							BAL_IN_AMT: record6.get('BAL_AMT'),
							CLS_IN_AMT: clsAmt,
							CLS_TYPE : record1.get('CLS_TYPE'),
						});
						
						calcStore2.insert(calcCnt2-1, rec2);
						if(record6.get('BAL_AMT') === 0) break;
					}
					
				}
			}
		}
		
		// 현금, 어음 떨기
		var calcCnt = calcStore.getData().length;
		for(var i=0; i<myGrid5.length; i++){
			var record5 = myGrid5[i];
			var LOC_AMT = record5.get('LOC_AMT'); //금액
			var BAL_AMT = record5.get('BAL_AMT'); //잔액
			var REF_TYPE = record5.get('REF_TYPE');
			
			if(BAL_AMT > 0){
				for(var j=0; j<myGrid1.length; j++){
					var record1 = myGrid1[j];
					var REMAIN_AMT = record1.get('REMAIN_AMT'); //잔액
					var RECV_AMT = record1.get('RECV_AMT'); //수금금액
					var RECV_LOC_AMT = record1.get('RECV_LOC_AMT'); //수금자국금액
					var CLS_TYPE = record1.get('CLS_TYPE'); //대상구분
					
//					if(REMAIN_AMT > 0 && "/B/N".indexOf(CLS_TYPE) > 0){
					if(REMAIN_AMT > 0 && CLS_TYPE.indexOf(REF_TYPE) >= 0){
						var diffAmt = BAL_AMT-REMAIN_AMT;
						var clsAmt = 0;
						calcCnt++;
						
						if(diffAmt < 0){
							record1.set('REMAIN_AMT', diffAmt*-1);
							record1.set('REMAIN_DOC_AMT', diffAmt*-1);
							record1.set('RECV_AMT', RECV_AMT+BAL_AMT);
							record1.set('RECV_LOC_AMT', RECV_LOC_AMT+BAL_AMT);
							record5.set('BAL_AMT', 0);
							clsAmt = BAL_AMT;
						} else {
							BAL_AMT -= REMAIN_AMT;
							record1.set('REMAIN_AMT', 0);
							record1.set('REMAIN_DOC_AMT', 0);
							record1.set('RECV_AMT', RECV_AMT+REMAIN_AMT);
							record1.set('RECV_LOC_AMT', RECV_LOC_AMT+REMAIN_AMT);
							record5.set('BAL_AMT', diffAmt);
							clsAmt = REMAIN_AMT;
						}
						
						var rec = Ext.create('A_AR_RECEIPT.model.MyModel', {
							V_TYPE: 'I',
							SEQ: calcCnt,
							BC_NO: record5.get('REF_NO'),
							BC_TYPE: record5.get('REF_TYPE'),
							AR_NO: record1.get('AR_NO'),
							BAL_IN_AMT: record5.get('BAL_AMT'),
							CLS_IN_AMT: clsAmt,
							CLS_TYPE : CLS_TYPE,
						});
						
						calcStore.insert(calcCnt-1, rec);
						if(record5.get('BAL_AMT') === 0) break;
					} 
				}
			}
		}
		
		for(var i=0; i<myGrid1.length; i++){
			if(myGrid1[i].get('V_TYPE') == 'I') {
				if(myGrid1[i].get('REMAIN_AMT') > 0 && myGrid1[i].get('REMAIN_AMT') === myGrid1[i].get('REMAIN_LOC_AMT')){
					myGrid1[i].set('V_TYPE', 'D');
					store1.remove(myGrid1[i]);
				}
			}
		}
		
		// 외화 추가계정 입력
		if(!!Ext.getCmp('V_CUR').getValue() && Ext.getCmp('V_CUR').getValue() != 'KRW' && calcStore.getData().length > 0){
			var myGrid2 = Ext.getCmp('myGrid2');
			var arrStoreItems = arrStore.data.items;
			
			for(var i=0; i<store1.getData().length; i++){
				var store1Data = store1.getData().items[i];
				var LOC_AMT = store1Data.get('REMAIN_AMT');
				if(LOC_AMT > 0){
					var records = [];
					var SEQ = this.makeStore2Seq();
					
					// INSERT
					var rec = Ext.create('A_AR_RECEIPT.model.MyModel', {
						V_TYPE: 'I',
						SEQ: SEQ,
//						DEPT_CD: Ext.getCmp('V_DEPT_CD2').getValue(),
//						DEPT_NM: Ext.getCmp('V_DEPT_CD2').getValue(),
						DEPT_CD: store1Data.get('DEPT_CD'),
						DEPT_NM: store1Data.get('DEPT_CD'),
					    COST_CD: store1Data.get('COST_CD'),
						COST_NM: store1Data.get('COST_CD'),
						CUR: Ext.getCmp('V_CUR').getValue(),
						XCH_RATE: Ext.getCmp('V_XCH_RATE').getValue(),
						CLS_TYPE: 'Z',
						ACCT_CD: '5600301',
						ACCT_NM: '5600301',
						DR_CR_FG: 'DR',
						DOC_AMT: Math.round(LOC_AMT/Ext.getCmp('V_XCH_RATE').getValue()*100)/100,
						LOC_AMT: LOC_AMT,
						AR_NO: store1.getData().items[i].get('AR_NO')
					});
					store2.insert(myGrid2.length-1, rec);
					
					records.push(this.makeStore3Rec(SEQ,'5600301','1','F3','외화금액',Math.round(LOC_AMT/Ext.getCmp('V_XCH_RATE').getValue()*100)/100));
					records.push(this.makeStore3Rec(SEQ,'5600301','2','AC','상대계정','5600301'));
					records.push(this.makeStore3Rec(SEQ,'5600301','3','MP1','장부환율',''));
					records.push(this.makeStore3Rec(SEQ,'5600301','4','F2','환율',Ext.getCmp('V_XCH_RATE').getValue()));
					records.push(this.makeStore3Rec(SEQ,'5600301','5','F1','화폐단위',Ext.getCmp('V_CUR').getValue()));
					records.push(this.makeStore3Rec(SEQ,'5600301','6','BP','거래처',Ext.getCmp('V_BP_CD').getValue()));
					records.push(this.makeStore3Rec(SEQ,'5600301','7','LC','신용장번호',''));
					records.push(this.makeStore3Rec(SEQ,'5600301','8','F15','내용',''));
					
					arrStoreItems[SEQ] = records;
				}
			}
			
			for(var i=0; i<myGrid5.length; i++){
				var LOC_AMT = myGrid5[i].get('BAL_AMT');
				if(LOC_AMT > 0 && LOC_AMT != myGrid5[i].get('BF_LOC_AMT')){
					var records = [];
					var SEQ = this.makeStore2Seq();
					
					// INSERT
					var rec = Ext.create('A_AR_RECEIPT.model.MyModel', {
						V_TYPE: 'I',
						SEQ: SEQ,
						DEPT_CD: Ext.getCmp('V_DEPT_CD2').getValue(),
						DEPT_NM: Ext.getCmp('V_DEPT_CD2').getValue(),
//						COST_CD: '', 보류
//						COST_NM: '',
						CUR: Ext.getCmp('V_CUR').getValue(),
						XCH_RATE: Ext.getCmp('V_XCH_RATE').getValue(),
						CLS_TYPE: 'Z',
						ACCT_CD: '5500900',
						ACCT_NM: '5500900',
						DR_CR_FG: 'CR',
						DOC_AMT: LOC_AMT/Ext.getCmp('V_XCH_RATE').getValue(),
						LOC_AMT: LOC_AMT,
						BC_NO: myGrid5[i].get('REF_NO')
					});
					store2.insert(myGrid2.length-1, rec);
					
					records.push(this.makeStore3Rec(SEQ,'5500900','1','F3','외화금액',Math.round(LOC_AMT/Ext.getCmp('V_XCH_RATE').getValue()*100)/100));
					records.push(this.makeStore3Rec(SEQ,'5500900','2','AC','상대계정','5500900'));
					records.push(this.makeStore3Rec(SEQ,'5500900','3','MP1','장부환율',''));
					records.push(this.makeStore3Rec(SEQ,'5500900','4','F2','환율',Ext.getCmp('V_XCH_RATE').getValue()));
					records.push(this.makeStore3Rec(SEQ,'5500900','5','F1','화폐단위',Ext.getCmp('V_CUR').getValue()));
					records.push(this.makeStore3Rec(SEQ,'5500900','6','BP','거래처',Ext.getCmp('V_BP_CD').getValue()));
					records.push(this.makeStore3Rec(SEQ,'5500900','7','LC','신용장번호',''));
					records.push(this.makeStore3Rec(SEQ,'5500900','8','F15','내용',''));
					
					arrStoreItems[SEQ] = records;
				}
			}
		} 
		
		// 고철 상대계정 입력
		if(myGrid1[0].get('GOCHUL_YN') === 'Y'){
			var myGrid2 = Ext.getCmp('myGrid2');
			var arrStoreItems = arrStore.data.items;
			
			for(var i=0; i<myGrid1.length; i++){
				var record1 = myGrid1[i];
				var records = [];
				var REMAIN_AMT = record1.get('REMAIN_AMT');
				
				if(record1.get('GOCHUL_YN') === 'Y' && record1.get('REMAIN_AMT') > 0){
					var SEQ = this.makeStore2Seq();
					var rec = Ext.create('A_AR_RECEIPT.model.MyModel', {
						V_TYPE: 'I',
						SEQ: SEQ,
						DEPT_CD: Ext.getCmp('V_DEPT_CD2').getValue(),
						DEPT_NM: Ext.getCmp('V_DEPT_CD2').getValue(),
						CUR: Ext.getCmp('V_CUR').getValue(),
						XCH_RATE: Ext.getCmp('V_XCH_RATE').getValue(),
						CLS_TYPE: 'Z',
//						AR_NO: record1.get('AR_NO'),
						COST_CD : 'B608',
						COST_NM : 'B608',
						ACCT_CD: '1111201',
						ACCT_NM: '1111201',
						DR_CR_FG: 'DR',
						DOC_AMT: REMAIN_AMT/Ext.getCmp('V_XCH_RATE').getValue(),
						LOC_AMT: REMAIN_AMT,
						REMARK: '철스크랩 부가세 실시간 납부',
					});
					store2.insert(myGrid2.length-1, rec);
					
					// 채권잔액 0으로 만들어주기 (무조건 0이 맞나..?)
					record1.set('REMAIN_AMT', 0);
					record1.set('REMAIN_DOC_AMT', 0);
//					record1.set('RECV_AMT', record1.get('RECV_AMT')+REMAIN_AMT);
//					record1.set('RECV_LOC_AMT', record1.get('RECV_LOC_AMT')+REMAIN_AMT);
					
//					records.push(this.makeStore3Rec(SEQ,'1111201','1','BP','거래처',Ext.getCmp('V_BP_CD').getValue()));
					records.push(this.makeStore3Rec(SEQ,'1111201','1','BP','거래처','00029')); //동래세무서 고정
					records.push(this.makeStore3Rec(SEQ,'1111201','2','F15','내용','철스크랩 부가세 실시간 납부'));
					arrStoreItems[SEQ] = records;
				}
			}
		}
		
    },
    
    makeStore2Seq : function() {
		var store1 = Ext.getStore('MyStore1');
		var store2 = Ext.getStore('MyStore2');
		var SEQ = store1.data.length+store2.data.length+1;
		
		store1.each(function(record,idx) {
			if(Number(record.get('SEQ')) >= SEQ){
				SEQ = Number(record.get('SEQ'))+1;
			}
		});
		store2.each(function(record,idx) {
			if(Number(record.get('SEQ')) >= SEQ){
				SEQ = Number(record.get('SEQ'))+1;
			}
		});
    	
		return SEQ;
	},
	
    makeStore3Rec : function(SEQ,ACCT_CD,DTL_SEQ,CTRL_CD,CTRL_NM,CTRL_VAL) {
    	let rec = Ext.create('A_AR_RECEIPT.model.MyModel', {
			V_TYPE: 'I',
			SEQ: SEQ,
			ACCT_CD: ACCT_CD,
			DTL_SEQ: DTL_SEQ,
			CTRL_CD: CTRL_CD,
			CTRL_NM: CTRL_NM,
			CTRL_VAL: CTRL_VAL,
		});
    	
		return rec;
	},
	
	initCalc : function() {
		var store1 = Ext.getStore('MyStore1');
		var store2 = Ext.getStore('MyStore2');
		var store3 = Ext.getStore('MyStore3');
		var store5 = Ext.getStore('MyStore5');
		var store6 = Ext.getStore('MyStore6');
		var store7 = Ext.getStore('MyStore7');
		var calcStore = Ext.getStore('CalcStore');
		var calcStore1 = Ext.getStore('CalcStore1');
		var calcStore2 = Ext.getStore('CalcStore2');
		var arrStore = Ext.getStore('ArrayStore');
		
		store1.each(function(rec,idx) {
			if(rec.get('V_TYPE') == 'I'){
				rec.set('REMAIN_AMT', rec.get('REMAIN_LOC_AMT'));
				rec.set('REMAIN_DOC_AMT', rec.get('REMAIN_LOC_AMT'));
				rec.set('RECV_AMT', 0);
				rec.set('RECV_LOC_AMT', 0);
			}
		});
		
		store5.each(function(rec,idx) {
			if(rec.get('V_TYPE') == 'I'){
				rec.set('BAL_AMT', rec.get('REMAIN_AMT'));
			}
		});
		
		store6.each(function(rec,idx) {
			rec.set('BAL_AMT', rec.get('REMAIN_AMT'));
		});
		
		store7.each(function(rec,idx) {
			if(rec.get('V_TYPE') == 'I'){
				rec.set('REMAIN_AMT', rec.get('LOC_AMT'));
				rec.set('RECV_LOC_AMT', 0);
			}
		});
		
		// 초기화시 추가계정 지워주는게 맞는지? 애매하네..
//		store2.removeAll();
//		store3.removeAll();
		
		store2.each(function(rec,idx) {
			if(rec.get('V_TYPE') == 'I'){
				store2.remove(rec);
			}
		});
		
		store3.each(function(rec,idx) {
			if(rec.get('V_TYPE') == 'I'){
				store3.remove(rec);
			}
		});
		
		calcStore.removeAll();
		calcStore1.removeAll();
		calcStore2.removeAll();
		arrStore.removeAll();
	},
	
	arRefundBtnClick : function(button, e, eOpts) {
		var store2 = Ext.getStore('MyStore2');
		var store5 = Ext.getStore('MyStore5');
		var calcStore = Ext.getStore('CalcStore');
		var arrStore = Ext.getStore('ArrayStore');
		var myGrid5 = Ext.getCmp('myGrid5').getSelectionModel().getSelection();
		var flag = 'T';
		var msg = '';
		
		if(myGrid5.length < 1){
			msg = '선택된 행이 없습니다.';
			flag = 'F';
		} else {
			store5.each(function(record, idx) {
				if (record.get('REF_TYPE').indexOf('B') < 0) {
					msg = '현금만 처리 가능합니다.';
					return;
				} else if (record.get('BF_LOC_AMT') == record.get('BAL_AMT')) {
//					flag = 'F';
//					msg = '잔액이 처리되지 않은 행이 선택되었습니다.';
//					return;
				}
			});
		}
		
		for(var i=0; i<myGrid5.length; i++){
			if(myGrid5[i].get('REFUND_AMT') == 0){
				msg = '처리금액이 입력되지 않은 행이 존재합니다.';
				flag = 'F';
			}
		}
		
		if (flag == 'T') {
			Ext.Msg.confirm('확인', '선택된 항목을 환출처리 하시겠습니까?', function(button) {
				if (button == 'yes') {
					// A_BANK_REMAIN_HSPF에 입력
					var arrStoreItems = arrStore.data.items;
					var calcCnt = calcStore.getData().length;
					
					for(var i=0; i<myGrid5.length; i++){
						var records = [];
						var records2 = [];
						var record5 = myGrid5[i];
						
						var REMAIN_AMT = record5.get('BAL_AMT');
						var BAL_AMT = record5.get('REFUND_AMT');
						calcCnt++;
						
						if(BAL_AMT > 0){
							var V_DEPT_CD2 = Ext.getCmp('V_DEPT_CD2').getValue();
							var COST_CD = '';
							if(V_DEPT_CD2 == '5124'){
								COST_CD = 'B8AI';
							}
							
							var rec = Ext.create('A_AR_RECEIPT.model.MyModel', {
								V_TYPE: 'I',
								SEQ: calcCnt,
								BC_NO: record5.get('REF_NO'),
								BC_TYPE: record5.get('REF_TYPE'),
								AR_NO: 'REFUND',
								BAL_IN_AMT: REMAIN_AMT-BAL_AMT,
								CLS_IN_AMT: BAL_AMT,
								CLS_TYPE : 'Z',
							});
							
							calcStore.insert(calcCnt-1, rec);
							record5.set('BAL_AMT', REMAIN_AMT-BAL_AMT);
							
							// 추가계정 등록 - 보통예금(대변) 잔액, 국내외상매출금(대변) 마이너스 잔액
							var myGridController1 = A_AR_RECEIPT.app.getController("MyGridController1");
							var SEQ = myGridController1.makeStore2Seq();
							var rec1 = Ext.create('A_AR_RECEIPT.model.MyModel', {
								V_TYPE: 'I',
								SEQ: SEQ,
								DEPT_CD: Ext.getCmp('V_DEPT_CD2').getValue(),
								DEPT_NM: Ext.getCmp('V_DEPT_CD2').getValue(),
								CUR: Ext.getCmp('V_CUR').getValue(),
								XCH_RATE: Ext.getCmp('V_XCH_RATE').getValue(),
								CLS_TYPE: 'Z',
								ACCT_CD: '1110104',
								ACCT_NM: '1110104',
								COST_CD: COST_CD,
								COST_NM: COST_CD,
								DR_CR_FG: 'CR',
								DOC_AMT: BAL_AMT/Ext.getCmp('V_XCH_RATE').getValue(),
								LOC_AMT: BAL_AMT,
							});
							store2.insert(store2.data.items.length-1, rec1);
							
							records.push(myGridController1.makeStore3Rec(SEQ,'1110104','1','BK','은행','32'));
							records.push(myGridController1.makeStore3Rec(SEQ,'1110104','2','BA','계좌번호','168-01-000130-9'));
							records.push(myGridController1.makeStore3Rec(SEQ,'1110104','3','BP','거래처',Ext.getCmp('V_BP_CD').getValue()));
							records.push(myGridController1.makeStore3Rec(SEQ,'1110104','4','X23','총금액',''));
							records.push(myGridController1.makeStore3Rec(SEQ,'1110104','5','X24','결제액',''));
							arrStoreItems[SEQ] = records;
							
							SEQ = myGridController1.makeStore2Seq();
							var rec2 = Ext.create('A_AR_RECEIPT.model.MyModel', {
								V_TYPE: 'I',
								SEQ: SEQ,
								DEPT_CD: Ext.getCmp('V_DEPT_CD2').getValue(),
								DEPT_NM: Ext.getCmp('V_DEPT_CD2').getValue(),
								CUR: Ext.getCmp('V_CUR').getValue(),
								XCH_RATE: Ext.getCmp('V_XCH_RATE').getValue(),
								CLS_TYPE: 'Z',
								ACCT_CD: '1110501',
								ACCT_NM: '1110501',
								COST_CD: COST_CD,
								COST_NM: COST_CD,
								DR_CR_FG: 'CR',
								DOC_AMT: -BAL_AMT/Ext.getCmp('V_XCH_RATE').getValue(),
								LOC_AMT: -BAL_AMT,
							});
							store2.insert(store2.data.items.length-1, rec2);
							
							records2.push(myGridController1.makeStore3Rec(SEQ,'1110501','1','BP','거래처',Ext.getCmp('V_BP_CD').getValue()));
							records2.push(myGridController1.makeStore3Rec(SEQ,'1110501','2','BPN','거래처명',Ext.getCmp('V_BP_NM').getValue()));
							records2.push(myGridController1.makeStore3Rec(SEQ,'1110501','3','S14','품명',''));
							records2.push(myGridController1.makeStore3Rec(SEQ,'1110501','4','C1','만기일',''));
							arrStoreItems[SEQ] = records2;
						}
					}
					
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}
	},
	
	arRefundBtn2Click : function(button, e, eOpts) {
		var store1 = Ext.getStore('MyStore1');
		var store2 = Ext.getStore('MyStore2');
		var arrStore = Ext.getStore('ArrayStore');
		var myGrid1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		var flag = 'T';
		var msg = '';
		
		if(myGrid1.length < 1){
			msg = '선택된 행이 없습니다.';
			flag = 'F';
		}
		
		for(var i=0; i<myGrid1.length; i++){
			if(myGrid1[i].get('REFUND_AMT') == 0){
				msg = '환출금액이 입력되지 않은 행이 존재합니다.';
				flag = 'F';
			}
		}
		
		if (flag == 'T') {
			Ext.Msg.confirm('확인', '선택된 항목을 환출처리 하시겠습니까?', function(button) {
				if (button == 'yes') {
					// A_BANK_REMAIN_HSPF에 입력
					var arrStoreItems = arrStore.data.items;
					
					for(var i=0; i<myGrid1.length; i++){
						var records = [];
						var records2 = [];
						var record1 = myGrid1[i];
						
						var REFUND_AMT = record1.get('REFUND_AMT');
						var REMAIN_AMT = record1.get('REMAIN_AMT');
						var RECV_LOC_AMT = record1.get('RECV_LOC_AMT');
						
						if(REFUND_AMT < 0){
							var V_DEPT_CD2 = Ext.getCmp('V_DEPT_CD2').getValue();
							var COST_CD = '';
							if(V_DEPT_CD2 == '5124'){
								COST_CD = 'B8AI';
							}
							
							var BAL_AMT = REFUND_AMT;
							record1.set('RECV_LOC_AMT', RECV_LOC_AMT+BAL_AMT);
							record1.set('REMAIN_AMT', REMAIN_AMT-BAL_AMT);
							
							// 추가계정 등록 - 보통예금(대변) 잔액, 국내외상매출금(대변) 마이너스 잔액
							var myGridController1 = A_AR_RECEIPT.app.getController("MyGridController1");
							var SEQ = myGridController1.makeStore2Seq();
							var rec1 = Ext.create('A_AR_RECEIPT.model.MyModel', {
								V_TYPE: 'I',
								SEQ: SEQ,
								DEPT_CD: Ext.getCmp('V_DEPT_CD2').getValue(),
								DEPT_NM: Ext.getCmp('V_DEPT_CD2').getValue(),
								CUR: Ext.getCmp('V_CUR').getValue(),
								XCH_RATE: Ext.getCmp('V_XCH_RATE').getValue(),
								CLS_TYPE: 'Z',
								ACCT_CD: '1110104',
								ACCT_NM: '1110104',
								COST_CD: COST_CD,
								COST_NM: COST_CD,
								DR_CR_FG: 'CR',
								DOC_AMT: BAL_AMT/Ext.getCmp('V_XCH_RATE').getValue(),
								LOC_AMT: BAL_AMT,
							});
							store2.insert(store2.data.items.length-1, rec1);
							
							records.push(myGridController1.makeStore3Rec(SEQ,'1110104','1','BK','은행','32'));
							records.push(myGridController1.makeStore3Rec(SEQ,'1110104','2','BA','계좌번호','168-01-000130-9'));
							records.push(myGridController1.makeStore3Rec(SEQ,'1110104','3','BP','거래처',Ext.getCmp('V_BP_CD').getValue()));
							records.push(myGridController1.makeStore3Rec(SEQ,'1110104','4','X23','총금액',''));
							records.push(myGridController1.makeStore3Rec(SEQ,'1110104','5','X24','결제액',''));
							arrStoreItems[SEQ] = records;
							
							SEQ = myGridController1.makeStore2Seq();
							var rec2 = Ext.create('A_AR_RECEIPT.model.MyModel', {
								V_TYPE: 'I',
								SEQ: SEQ,
								DEPT_CD: Ext.getCmp('V_DEPT_CD2').getValue(),
								DEPT_NM: Ext.getCmp('V_DEPT_CD2').getValue(),
								CUR: Ext.getCmp('V_CUR').getValue(),
								XCH_RATE: Ext.getCmp('V_XCH_RATE').getValue(),
								CLS_TYPE: 'Z',
								ACCT_CD: '1110501',
								ACCT_NM: '1110501',
								COST_CD: COST_CD,
								COST_NM: COST_CD,
								DR_CR_FG: 'CR',
								DOC_AMT: -BAL_AMT/Ext.getCmp('V_XCH_RATE').getValue(),
								LOC_AMT: -BAL_AMT,
							});
							store2.insert(store2.data.items.length-1, rec2);
							
							records2.push(myGridController1.makeStore3Rec(SEQ,'1110501','1','BP','거래처',Ext.getCmp('V_BP_CD').getValue()));
							records2.push(myGridController1.makeStore3Rec(SEQ,'1110501','2','BPN','거래처명',Ext.getCmp('V_BP_NM').getValue()));
							records2.push(myGridController1.makeStore3Rec(SEQ,'1110501','3','S14','품명',''));
							records2.push(myGridController1.makeStore3Rec(SEQ,'1110501','4','C1','만기일',''));
							arrStoreItems[SEQ] = records2;
						}
					}
					
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}
	},
	
	arDepositBtnClick : function(button, e, eOpts) {
		var store5 = Ext.getStore('MyStore5');
		var calcStore = Ext.getStore('CalcStore');
		var myGrid5 = Ext.getCmp('myGrid5').getSelectionModel().getSelection();
		var flag = 'T';
		var msg = '';
		
		if(myGrid5.length < 1){
			msg = '선택된 행이 없습니다.';
			flag = 'F';
		}
		
		for(var i=0; i<myGrid5.length; i++){
			if(myGrid5[i].get('REFUND_AMT') == 0){
				msg = '처리금액이 입력되지 않은 행이 존재합니다.';
				flag = 'F';
			}
		}
		
		if (flag == 'T') {
			Ext.Msg.confirm('확인', '선택된 항목을 과입금처리 하시겠습니까?', function(button) {
				if (button == 'yes') {
					// A_BANK_REMAIN_HSPF에 입력
					var calcCnt = calcStore.getData().length;
					
					for(var i=0; i<myGrid5.length; i++){
						var record5 = myGrid5[i];
						
						var REMAIN_AMT = record5.get('BAL_AMT');
						var BAL_AMT = record5.get('REFUND_AMT');
						calcCnt++;
						
						if(BAL_AMT > 0){
							var rec = Ext.create('A_AR_RECEIPT.model.MyModel', {
								V_TYPE: 'I',
								SEQ: calcCnt,
								BC_NO: record5.get('REF_NO'),
								BC_TYPE: record5.get('REF_TYPE'),
								AR_NO: 'NONE',
//								BAL_IN_AMT: REMAIN_AMT-BAL_AMT,
								BAL_IN_AMT: REMAIN_AMT,
								CLS_IN_AMT: BAL_AMT,
								CLS_TYPE : record5.get('REF_TYPE'),
							});
							
							calcStore.insert(calcCnt-1, rec);
//							record5.set('BAL_AMT', REMAIN_AMT-BAL_AMT);
						}
					}
					
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}
	},
	
//	arMatchBtnClick : function(button, e, eOpts) {
//		var store1 = Ext.getStore('MyStore1');
//		var store5 = Ext.getStore('MyStore5');
//		var calcStore = Ext.getStore('CalcStore');
//		var myGrid1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
//		var myGrid5 = Ext.getCmp('myGrid5').getSelectionModel().getSelection();
//		var flag = 'T';
//		var msg = '';
//		
//		if(!!!Ext.getCmp('V_CLS_AR_NO')){
//			msg = '수금등록 후 가능합니다.';
//			flag = 'F';
//		} else if(myGrid1.length != 1 || myGrid5.length != 1){
//			msg = '현금(어음) 및 채권을 하나씩 선택해야 합니다.';
//			flag = 'F';
//		} else if(myGrid5[0].get('AR_NO') != 'NONE'){
//			msg = '매치 불가능한 현금(어음) 입니다.';
//			flag = 'F';
//		}
//		
//		if (flag == 'T') {
//			Ext.Msg.confirm('확인', '선택된 현금(어음)과 채권을 매치 시키겠습니까?', function(button) {
//				if (button == 'yes') {
//					Ext.Ajax.request({
//						url : 'sql/A_AR_RECEIPT.jsp',
//						method : 'post',
//						params : {
//							V_TYPE : 'MATCH',
//							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
//							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
//							V_CLS_AR_NO : Ext.getCmp('V_CLS_AR_NO').getValue(),
//							V_BC_NO : myGrid5[0].get('BC_NO'),
//							V_AR_NO : myGrid1[0].get('AR_NO'),
//							V_BC_TYPE : myGrid5[0].get('REF_TYPE'),
//							V_CLS_IN_AMT : myGrid1[0].get('REMAIN_AMT'),
//						},
//						success : function(response) {
//							var tbController = A_AR_RECEIPT.app.getController("TbButtonController");
//							tbController.selBtnClick();
//						}
//					});
//				}
//			});
//		} else {
//			Ext.Msg.alert('확인', msg);
//		}
//	},
	
	arCfmBtnClick : function(button, e, eOpts) {
		var store1 = Ext.getStore('MyStore1');
		var store5 = Ext.getStore('MyStore5');
		var store6 = Ext.getStore('MyStore6');
		var flag = 'F';
		var msg = '';
		
		if (Ext.getCmp('V_CLS_YN').getValue() == 'Y' || !!Ext.getCmp('V_TEMP_GL_NO').getValue()) {
			flag = 'F';
			msg = '전표가 이미 생성되었습니다.';
		} else {
			msg = '대상의 전표가 이미 생성되었습니다';
			if (store1.data.length == 0 || store6.data.length > 0){ //환출 건 처리
				flag = 'T';
			} else {
				store5.each(function(rec,idx) {
					if(rec.get('TEMP_GL_YN') == 'N'){
						flag = 'T';
					}
				});
			}
		}
		
		if (flag == 'T') {
			Ext.Msg.confirm('확인', '전표를 생성하시겠습니까?', function(button) {
				if (button == 'yes') {
					Ext.Ajax.request({
						url : 'sql/A_AR_RECEIPT.jsp',
						method : 'post',
						params: {
							V_TYPE: 'ERP',
							U_TYPE: 'I',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_CLS_AR_NO : Ext.getCmp('V_CLS_AR_NO').getValue(),
						},
						success: function(response) {
					    	var jsonResult = Ext.JSON.decode(response.responseText);
//					    	var tryCnt = jsonResult.tryCnt;
//    						var finCnt = jsonResult.finCnt;
//    						var resMSG = jsonResult.resMSG;
//    						var resDATE = jsonResult.resDATE;
    						var resString = jsonResult.resString;
							
    						if(resString == 'SUCCESS') {
    							var tbController = A_AR_RECEIPT.app.getController("TbButtonController");
    							tbController.selBtnClick();
    							
    							Ext.toast({
									title : ' ',
									timeout : 1000,
									html : '전표생성완료',
									style : 'text-align: center',
									align : 't',
									width : 130,
								});
    						}else {
    							Ext.Msg.alert('확인', '전표생성실패<br>' + resString);
    						}
    						
						}
					})
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}
	},
	
	arCancelBtnClick : function(button, e, eOpts) {
		var flag = '';
		var msg = '';
		
		if (Ext.getCmp('V_CLS_YN').getValue() == 'N' || !!!Ext.getCmp('V_TEMP_GL_NO').getValue()) {
			flag = 'F';
			msg = '전표가 존재하지 않습니다.';
		} else {
			flag = 'T';
		}
		
		if (flag == 'T') {
			Ext.Msg.confirm('확인', '전표를 취소하시겠습니까?', function(button) {
				if (button == 'yes') {
					Ext.Ajax.request({
						url : 'sql/A_AR_RECEIPT.jsp',
						method : 'post',
						params: {
							V_TYPE: 'ERP',
							U_TYPE: 'D',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GEMP_NO').getValue(),
							V_CLS_AR_NO : Ext.getCmp('V_CLS_AR_NO').getValue(),
						},
						success: function(response) {
					    	var jsonResult = Ext.JSON.decode(response.responseText);
//					    	var tryCnt = jsonResult.tryCnt;
//    						var finCnt = jsonResult.finCnt;
//    						var resMSG = jsonResult.resMSG;
//    						var resDATE = jsonResult.resDATE;
    						var resString = jsonResult.resString;
					    
    						if(resString == 'SUCCESS') {
    							var tbController = A_AR_RECEIPT.app.getController("TbButtonController");
    							tbController.selBtnClick();
    							
    							Ext.toast({
									title : ' ',
									timeout : 1000,
									html : '전표취소완료',
									style : 'text-align: center',
									align : 't',
									width : 130,
								});
    						}else {
    							Ext.Msg.alert('확인', '전표취소실패<br>' + resString);
    						}
    						
						}
					})
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}
	},
	
	arPrintBtnClick : function(button, e, eOpts) {
//    	var url = 'http://123.142.124.137:8100/aireport/AIViewer55/FI/A5101MA1_S_Pay_TEST2.jsp?';
    	var url = 'http://123.142.124.137:8100/aireport/AIViewer55/FI/A5101MA1_S_Pay.jsp?';
    	
    	if(!!Ext.getCmp('V_TEMP_GL_NO').getValue()) {
    		var params = 'TEMP_GL_NO=' + Ext.getCmp('V_TEMP_GL_NO').getValue();
    		url = url + params;
    		
    		Ext.Msg.confirm('확인', '전표를 출력하시겠습니까?', function(btn) {
        		if (btn == 'yes') {
					var myWin = new Ext.Window({
						title : button.getText(),
						html : '<iframe name="xxx" border =0 src="'+url+'" width="100%" height="100%"></iframe>',
						width : 1000,
						height : 768,
						modal : true
					});
					
					myWin.show();
					myWin.setSize(Ext.getBody().getViewSize());
					myWin.setPagePosition(0, 0);
        		}
        	})
    	} else {
    		Ext.Msg.alert('확인', '전표번호가 존재하지 않습니다.');
    	}
    },
    
    uploadBtnClick : function(button, e, eOpts) {
		var flag = '';
		var msg = '';

		if (!!!Ext.getCmp('V_TEMP_GL_NO').getValue()) {
			flag = 'F';
			msg = '전표생성 후 가능합니다.';
		} else {
			flag = 'T';
		}
		
		if (flag == 'T') {
			var popup = Ext.create("A_AR_RECEIPT.view.FileWindow");
			popup.show();
			
			var width = Ext.getBody().getViewSize().width - 200;
		    var height = Ext.getBody().getViewSize().height - 200;
		    popup.setSize(width, height);
		    popup.center();
			
			var fileStore = Ext.getStore('FileStore');
			fileStore.removeAll();
		   	fileStore.load({
					params : {
						V_TYPE : 'S',
						V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
						V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
//						V_CLS_AR_NO: Ext.getCmp('V_CLS_AR_NO').getValue(),
						V_TEMP_GL_NO: Ext.getCmp('V_TEMP_GL_NO').getValue(),
					},
					callback : function(records, operations, success) {
					}
				});
		}else {
			Ext.Msg.alert('확인', msg);
		}
		
	},
	
	xlsxDown1Click: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('myGrid1');
    	grid.saveDocumentAs({
            type: 'xlsx',
            title: '수금대상', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
		});
    },
    
    xlsxDown5Click: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('myGrid5');
    	grid.saveDocumentAs({
            type: 'xlsx',
            title: '수금대상참조', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
		});
    }
    
});
