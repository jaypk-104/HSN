/*
 * File: app/controller/Navigation.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('frame.controller.Navigation', {
	extend : 'Ext.app.Controller',

	requires : [ 'Ext.util.History' ],
	stores : [ 'GbStore' ],
	refs : {
		contentPanel : '#contentPanel',
		menu : '#menu'
	},
	control : {
		"#boardOpenBtn" : {
			click : 'boardOpenBtnClick'
		},
		"#closeTabBtn" : {
			click : 'closeTabBtnClick'
		},
		"#closeTabBtn2" : {
			click : 'closeTabBtnClick'
		},
		'#infoSaveBtn' : {
			click : 'infoSaveBtnClick'
		},
		'#infoClsBtn' : {
			click : 'infoClsBtnClick'
		},
		'#logoutBtn' : {
			click : 'logoutBtnClick'
		},
		'#searchMenuBtn' : {
			click : 'searchMenuBtnClick'
		},
		'#searchMenuBtn2' : {
			click : 'searchMenuBtnClick'
		},
		'#moveToMenuBtn' : {
			click : 'moveToMenuBtnClick'
		},
		'#addFavoriteFoldBtn' : {
			click : 'addFavoriteFoldBtnClick'
		},
		'#renameFavoriteFoldBtn' : {
			click : 'renameFavoriteFoldBtnClick'
		},
	},
	boardOpenBtnClick : function() {
		var window = Ext.create("Ext.window.Window",{
			title: '게시판',
			modal: 'true',
			width: 800,
			height: 800,
			html: '<iframe name="xxx" border =0 src="http://123.142.124.164:19180/HSPF01/common/board/req/REQ.jsp?V_USR_ID=TKIA" width="100%" height="100%"></iframe>',
		});
		
		window.show();
		
		
//		{
//                xtype:'window',
////                title : '경비등록',
////                autoScroll: true,
//                html : '<iframe name="xxx" border =0 src="/HSPF01/HSPF02/samhyun/charge_out_distr_samhyun/CHARGE_OUT_DISTR_SAMHYUN.jsp" width="100%" height="100%"></iframe>',
////                closable : true
//            };
//		window.show();
	},

	/* [전체탭닫기] 버튼 */
	closeTabBtnClick : function() {
		var tabPanel = Ext.getCmp('myTab');
		var last = Ext.getCmp('myTab').items.length;
		for (var i = last; i > 0; i--) {
			tabPanel.remove(tabPanel.items.getAt(i));
		}
	},

	/* [사용자 정보 - 저장] 버튼 */
	infoSaveBtnClick : function() {
		var w_oldPassword = Ext.getCmp('w_oldPassword').getValue();
		var w_newPassword = Ext.getCmp('w_newPassword').getValue();
		var flag = '';
		var msg = '';
		
		if(w_newPassword != '' && w_oldPassword == '') {
			flag = 'F';
			msg = '현재 비밀번호를 입력하세요.' 
		} else if( Ext.getCmp('w_usr_nm').getValue() == '') {
			flag = 'F';
			msg = '사용자 명은 필수입니다.'
		} else if( (Ext.getCmp('w_usr_email_yn').getValue() == true) && Ext.getCmp('w_usr_email').getValue() =='') {
			flag = 'F';
			msg = '메일링서비스를 위한 이메일을 입력하세요.'
		} else if(w_newPassword != '') { //비밀번호 변경시도
			flag = 'P';
		} else {
			flag = 'T';
		}
		
		if(flag == 'T' || flag == 'P') {
			if(flag == 'P') {
				Ext.Ajax.request({
					url:'sql/UserInfo.jsp',
					method: 'post',
					params: {
						V_TYPE : 'P_CHECK',
						V_USR_ID : Ext.getCmp('GUSER_ID').getValue(),
						V_COMP_ID : Ext.getCmp('GCOMP_ID').getValue(),
						V_BP_CD : Ext.getCmp('GBP_CD').getValue(),
						w_oldPassword : Ext.getCmp('w_oldPassword').getValue(),
						w_newPassword : Ext.getCmp('w_newPassword').getValue(),
					},
				    success : function(response) {
				    	var password_result = response.responseText;
				    	if(password_result == 'SUCCESS') { //비밀번호 일치시....
				    		Ext.Ajax.request({
								url:'sql/UserInfo.jsp',
								method: 'post',
								params: {
									V_TYPE : 'P_CHANGE',
									V_USR_ID : Ext.getCmp('GUSER_ID').getValue(),
									V_COMP_ID : Ext.getCmp('GCOMP_ID').getValue(),
									V_BP_CD : Ext.getCmp('GBP_CD').getValue(),
									V_USR_ID : Ext.getCmp('GUSER_ID').getValue(),
									w_usr_nm : Ext.getCmp('w_usr_nm').getValue(),
									w_usr_dept : Ext.getCmp('w_usr_dept').getValue(),
									w_usr_posit : Ext.getCmp('w_usr_posit').getValue(),
									w_usr_tel_no : Ext.getCmp('w_usr_tel_no').getValue(),
									w_usr_handtel : Ext.getCmp('w_usr_handtel').getValue(),
									w_usr_fax : Ext.getCmp('w_usr_fax').getValue(),
									w_usr_email : Ext.getCmp('w_usr_email').getValue(),
									w_usr_email_yn : Ext.getCmp('w_usr_email_yn').getValue(),
									w_usr_address : Ext.getCmp('w_usr_address').getValue(),
									
									w_newPassword : Ext.getCmp('w_newPassword').getValue(),
								},
							    success : function(response) {
							    	Ext.getCmp('w_oldPassword').setValue('');
							    	Ext.getCmp('w_newPassword').setValue('');
							    	
							    	var gbStore = this.getGbStoreStore();
									gbStore.load({
										callback : function(records, operations, success) {
											Ext.toast({
												title : ' ',
												timeout : 1000,
												html : '저장완료',
												align : 't',
												style : 'text-align: center',
												width : 130,
											});
											
											var acct_info2 = records[0].data;
											Ext.getCmp('GCOMP_ID').setValue(acct_info2.comp_id);
											Ext.getCmp('GCOMP_NM').setValue(acct_info2.comp_nm);
											Ext.getCmp('GUSER_ID').setValue(acct_info2.usr_id);
											Ext.getCmp('GUSER_NM').setValue(acct_info2.usr_nm);
											Ext.getCmp('GDEPT_NM').setValue(acct_info2.dept_nm);
											Ext.getCmp('GPOSIT_NM').setValue(acct_info2.post_nm);
											Ext.getCmp('GBP_CD').setValue(acct_info2.bp_cd);
											
											Ext.getCmp('GTEL_NO').setValue(acct_info2.tel_no);
											Ext.getCmp('GHAND_TEL').setValue(acct_info2.hand_tel);
											Ext.getCmp('GFAX_NO').setValue(acct_info2.fax_no);
											Ext.getCmp('GEMAIL').setValue(acct_info2.email);
											Ext.getCmp('GEMAIL_YN').setValue(acct_info2.email_yn);
											Ext.getCmp('GADDRESS').setValue(acct_info2.address);
				
											Ext.getCmp('lblUsr').setText('[ ' + acct_info2.usr_id + ' ' + acct_info2.usr_nm + ' ]');
											Ext.getCmp('lblComp').setText('[ ' + acct_info2.comp_id + ' ' + acct_info2.comp_nm + ' ]');
											
											Ext.getCmp('GROLE_CD').setValue(acct_info2.role_cd);
											
											if(acct_info2.role_cd == 'SU') { //공급사이면
												Ext.getCmp('mentTree').expandAll();
											}
										}
									});
							    },
								scope: this
							});
				    	} else {
				    		Ext.Msg.alert('확인', '현재비밀번호가 일치하지 않습니다.');
				    	}
				    },
					scope: this
				});
			} else {
				Ext.Ajax.request({
				url:'sql/UserInfo.jsp',
				method: 'post',
				params: {
					V_USR_ID : Ext.getCmp('GUSER_ID').getValue(),
					V_COMP_ID : Ext.getCmp('GCOMP_ID').getValue(),
					V_BP_CD : Ext.getCmp('GBP_CD').getValue(),
					w_usr_nm : Ext.getCmp('w_usr_nm').getValue(),
					w_oldPassword : Ext.getCmp('w_oldPassword').getValue(),
					w_newPassword : Ext.getCmp('w_newPassword').getValue(),
					w_usr_dept : Ext.getCmp('w_usr_dept').getValue(),
					w_usr_posit : Ext.getCmp('w_usr_posit').getValue(),
					w_usr_tel_no : Ext.getCmp('w_usr_tel_no').getValue(),
					w_usr_handtel : Ext.getCmp('w_usr_handtel').getValue(),
					w_usr_fax : Ext.getCmp('w_usr_fax').getValue(),
					w_usr_email : Ext.getCmp('w_usr_email').getValue(),
					w_usr_email_yn : Ext.getCmp('w_usr_email_yn').getValue(),
					w_usr_address : Ext.getCmp('w_usr_address').getValue(),
				},
			    success : function(response) {
					var gbStore = this.getGbStoreStore();
					gbStore.load({
						callback : function(records, operations, success) {
							Ext.toast({
								title : ' ',
								timeout : 1000,
								html : '저장완료',
								align : 't',
								style : 'text-align: center',
								width : 130,
							});
							
							var acct_info2 = records[0].data;
							Ext.getCmp('GCOMP_ID').setValue(acct_info2.comp_id);
							Ext.getCmp('GCOMP_NM').setValue(acct_info2.comp_nm);
							Ext.getCmp('GUSER_ID').setValue(acct_info2.usr_id);
							Ext.getCmp('GUSER_NM').setValue(acct_info2.usr_nm);
							Ext.getCmp('GDEPT_NM').setValue(acct_info2.dept_nm);
							Ext.getCmp('GPOSIT_NM').setValue(acct_info2.post_nm);
							Ext.getCmp('GBP_CD').setValue(acct_info2.bp_cd);
							
							Ext.getCmp('GTEL_NO').setValue(acct_info2.tel_no);
							Ext.getCmp('GHAND_TEL').setValue(acct_info2.hand_tel);
							Ext.getCmp('GFAX_NO').setValue(acct_info2.fax_no);
							Ext.getCmp('GEMAIL').setValue(acct_info2.email);
							Ext.getCmp('GEMAIL_YN').setValue(acct_info2.email_yn);
							Ext.getCmp('GADDRESS').setValue(acct_info2.address);

							Ext.getCmp('lblUsr').setText('[ ' + acct_info2.usr_id + ' ' + acct_info2.usr_nm + ' ]');
							Ext.getCmp('lblComp').setText('[ ' + acct_info2.comp_id + ' ' + acct_info2.comp_nm + ' ]');
							
							Ext.getCmp('GROLE_CD').setValue(acct_info2.role_cd);
							Ext.getCmp('GEMP_NO').setValue(acct_info2.emp_no);
							
							if(acct_info2.role_cd == 'SU') { //공급사이면
								Ext.getCmp('mentTree').expandAll();
							}
						}
					});
			    
			    },
				scope: this
			});
			}

		} else {
			Ext.Msg.alert('확인', msg);
		}
		
	},
	
	/* [사용자 정보 - 닫기] 버튼 */
	infoClsBtnClick : function() {
		var popWin=  Ext.getCmp('usrInfoWindow');
    	popWin.destroy();
	},

	/* [로그아웃] 버튼 */
	logoutBtnClick : function() {
		Ext.Ajax.request({
			url : '../Logout.jsp',
			method : 'POST',
			success : function(res) {
				localStorage.removeItem('comp_id');
				localStorage.removeItem('user_id');
				window.location = '../../../index.jsp';
			}
		});
	},
	
	//좌측 하단 메뉴찾기 버튼 클릭
	searchMenuBtnClick : function() {
		var searchMenuPOP = Ext.create('frame.view.SearchMenuWindow');
		var searchMenuStore = Ext.getStore('SearchMenuStore');
		searchMenuStore.load();
		searchMenuPOP.show();
		Ext.getCmp('V_SEARCH_MENU').focus();
	},
	
	//메뉴찾기 팝업에서 이동 버튼 클릭
	moveToMenuBtnClick : function() {
		
//		console.log(Ext.getCmp('V_SEARCH_MENU').getValue());
		
		frame.app.gTabRow=frame.app.gTabRow+1;	
        var txt_tab_id='tab_txt'+frame.app.gTabRow;
        var id_txt=Ext.getCmp('V_SEARCH_MENU').getDisplayField() + frame.app.gTabRow.toString();
		
		var dynamicTab={
                xtype:'panel',
                title :Ext.getCmp('V_SEARCH_MENU').getRawValue(), 
                autoScroll: true,
                html : '<iframe name="xxx" border =0 src="'+ Ext.getCmp('V_SEARCH_MENU').getValue() +'" width="100%" height="100%"></iframe>',
                id :id_txt,
                reorderable: true,
                closable : true,
                items: [
                    {
                        xtype: 'hiddenfield',
                        id: txt_tab_id , // rec.get('menuNo'),
                        value:'N'
                    }
                ],
                listeners:
                {
                    beforeclose:function(component, eOpts) {

                        if(component.closeMe){
                            component.closeMe=false;
                            return true;
                        }
                        var  sv_check=Ext.getCmp(txt_tab_id).getValue();
                        if (sv_check==='Y')
                        {
                            Ext.Msg.confirm(
                                "확인","자료가 변경되었습니다. 저장하지 않았습니다. 닫기를 하시겠습니까?",
                                function(button){
                                    if(button==="yes")
                                    {
                                        component.closeMe=true;
                                        component.close();
                                    }
                                    else
                                    {
                                        component.closeMe=false;
                                    }
                                }
                            );
                        }
                        else
                        {
                            component.closeMe=true;
                            component.close();
                        }
                        return false;
                    }
                }
            }; 
		
		Ext.getCmp('myTab').add(dynamicTab).show();
		Ext.getCmp('searchMenuWindow').destroy();
		
	},
	addFavoriteFoldBtnClick : function() {
		Ext.Ajax.request({
    		url : 'sql/MenuFavoriteRegister.jsp',
    		method : 'post',
    		params : {
    			V_COMP_ID : Ext.getCmp('GCOMP_ID').getValue(),
    			V_USR_ID : Ext.getCmp('GUSER_ID').getValue(),
    			V_TYPE : 'I_FOLD',
    			V_PGM_ID : Ext.getCmp('V_FAVORITE_FOLD_NM').getValue(),
    		},
    	}).then(function(response) {
			var jResult = Ext.JSON.decode(response.responseText);
			
			Ext.getCmp('addfavoritefolderwindow').destroy();
			
			if(jResult.success == false){
				Ext.Msg.alert('관리자에게 문의', jResult.resultList);
			}
			else{
//				Ext.Msg.alert('확인', '폴더추가완료');
				Ext.toast({
					title : ' ',
					timeout : 1000,
					html : '폴더추가완료',
					style : 'text-align: center',
					align : 't',
					width : 130,
				});
				var store = Ext.getStore('FavoriteStore2');
				store.load({
					params:{
					},
					callback : function() {

        				Ext.getCmp('favoriteTree2').expandAll();
    				}
					
				});
			}
			
		});
	},
	renameFavoriteFoldBtnClick : function() {
		Ext.Ajax.request({
			url : 'sql/MenuFavoriteRegister.jsp',
			method : 'post',
			params : {
				V_COMP_ID : Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : Ext.getCmp('GUSER_ID').getValue(),
				V_TYPE : 'RENAME_FOLD',
				V_PGM_ID : Ext.getCmp('V_FAVORITE_FOLD_NM').getValue(),
				V_IDX : Ext.getCmp('V_RENAME_FOLD_IDX').getValue(),
			},
		}).then(function(response) {
			var jResult = Ext.JSON.decode(response.responseText);
			Ext.getCmp('renamefavoritefolderwindow').destroy();
			
			if(jResult.success == false){
				Ext.Msg.alert('관리자에게 문의', jResult.resultList);
			}
			else{
//				Ext.Msg.alert('확인', '폴더추가완료');
				Ext.toast({
					title : ' ',
					timeout : 1000,
					html : '폴더 이름변경 완료',
					style : 'text-align: center',
					align : 't',
					width : 130,
				});
				var store = Ext.getStore('FavoriteStore2');
				store.load({
					params:{
					},
					callback : function() {

        				Ext.getCmp('favoriteTree2').expandAll();
    				}
					
				});
			}
			
		});
	},

	onLaunch : function(application) {
		Ext.History.init();
		Ext.History.on('change', this.navigate, this);
		this.navigate(window.location.hash);
		Ext.getCmp('MAIN_SERVER_YN').setValue('Y'); //메인서버라는뜻.
		
		// 백버튼 실수방지 위해 알림창 표시
		var myEvent = window.attachEvent || window.addEventListener;
    	var chkevent = window.attachEvent ? 'onbeforeunload' : 'beforeunload'; /// make IE7, IE8 compitable
    	myEvent(chkevent, function(e) { // For >=IE7, Chrome, Firefox
    	    var confirmationMessage = 'Are you sure to leave the page?';  // a space
    	    (e || window.event).returnValue = confirmationMessage;
    	    return confirmationMessage;
    	});
    	
    	
//    	var favoriteStore = Ext.getStore('FavoriteStore2');
//    	favoriteStore.load();

		/* 20171110 comgen 글로벌 변수 선언 */
		var gbStore = this.getGbStoreStore();
		gbStore.load({
			callback : function(records, operations, success) {
				var acct_info2 = records[0].data;
				Ext.getCmp('GCOMP_ID').setValue(acct_info2.comp_id);
				Ext.getCmp('GCOMP_NM').setValue(acct_info2.comp_nm);
				Ext.getCmp('GUSER_ID').setValue(acct_info2.usr_id);
				Ext.getCmp('GUSER_NM').setValue(acct_info2.usr_nm);
				Ext.getCmp('GDEPT_CD').setValue(acct_info2.dept_cd);
				Ext.getCmp('GDEPT_NM').setValue(acct_info2.dept_nm);
				Ext.getCmp('GPOSIT_NM').setValue(acct_info2.post_nm);
				Ext.getCmp('GBP_CD').setValue(acct_info2.bp_cd);
				Ext.getCmp('GBP_NM').setValue(acct_info2.bp_nm);
				
				Ext.getCmp('GTEL_NO').setValue(acct_info2.tel_no);
				Ext.getCmp('GHAND_TEL').setValue(acct_info2.hand_tel);
				Ext.getCmp('GFAX_NO').setValue(acct_info2.fax_no);
				Ext.getCmp('GEMAIL').setValue(acct_info2.email);
				Ext.getCmp('GEMAIL_YN').setValue(acct_info2.email_yn);
				Ext.getCmp('GADDRESS').setValue(acct_info2.address);

				Ext.getCmp('lblUsr').setText('[ ' + acct_info2.usr_id + ' ' + acct_info2.usr_nm + ' ]');
				Ext.getCmp('lblComp').setText('[ ' + acct_info2.bp_cd + ' ' + acct_info2.bp_nm + ' ]');
				
				Ext.getCmp('GROLE_CD').setValue(acct_info2.role_cd);
				Ext.getCmp('GEMP_NO').setValue(acct_info2.emp_no);
				
				if(acct_info2.role_cd != 'AD' 
					&& acct_info2.role_cd != 'AD_DISTB' 
						&& acct_info2.role_cd != 'AD_HSPF_SWM'
							&& acct_info2.role_cd != 'AD_STEEL'
								&& acct_info2.role_cd != 'AD_SEOUL'
								&& acct_info2.role_cd != 'AD_D_S_T'
								&& acct_info2.role_cd != 'DEV_D_S_T'
				)  { //관리자가 아니면..
					Ext.getCmp('mentTree').expandAll();
				}
				
				/*고객사이면 출고요청등록 자동으로 OPEN*/
				
				if(acct_info2.role_cd == 'CU_DISTB') {
					var dynamicTab={
							xtype:'panel',
							title : '출고요청등록',
							autoScroll: true,
							html : '<iframe name="xxx" border =0 src="/HSPF01/HSPF02/cu2/cus_dn_req/CUS_DN_REQ.jsp" width="100%" height="100%"></iframe>',
							closable : true,
					};
					Ext.getCmp('myTab').add(dynamicTab).show();
				}
				
				//네트웍스(00000)이면 게시판, 전산요청 자동으로 띄우기
				if(acct_info2.bp_cd == '00000' && acct_info2.dept_cd == '2417'){
					var dynamicTab={
							xtype:'panel',
							title : '게시판',
							autoScroll: true,
							html : '<iframe name="xxx" border =0 src="/HSPF01/common/board/notice/NOTICE.jsp" width="100%" height="100%"></iframe>',
							closable : false,
					};
					Ext.getCmp('myTab').add(dynamicTab);
					
					var dynamicTab={
							xtype:'panel',
							title : '전산요청',
							autoScroll: true,
							html : '<iframe name="xxx" border =0 src="/HSPF01/common/board/req/REQ.jsp" width="100%" height="100%"></iframe>',
							closable : false,
					};
					Ext.getCmp('myTab').add(dynamicTab);
				}
				
				
				
			}
		});
		
		/* 20171110 comgen 글로벌 변수 선언 */
	},

	navigate : function(id) {
		// id may be a hash
		if (id) {

			// Remove # from id if present
			if (id[0] == '#')
				id = id.slice(1);

			// Set active view
			this.getContentPanel().layout.setActiveItem(id + 'Panel');

			// Set menu and page title
			// Iterate through each menu item
			this.getMenu().items.each(function(item) {

				// Active
				if (item.href == '#' + id) {
					// Disable
					item.disable();
					// Set page title to menu item text
					window.document.title = item.text;
				}

				// Inactive
				else {
					item.enable();
				}

			});

		}

	},

});
