/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_PO_UPLOAD.controller.MyGridController', {
    extend: 'Ext.app.Controller',

    control: {
        "#gridAddBtn": {
            click: 'gridAddBtnClick'
        },
        "#gridDelBtn": {
            click: 'gridDelBtnClick'
        },
        "#xlsxDown": {
            click: 'xlsxDownClick'
        },
        "#formDown": {
            click: 'formDownClick'
        },
        '#refreshBtn' : { /*그리드새로고침*/
			click: 'refreshBtnClick'
		},
    },

    gridAddBtnClick: function(button, e, eOpts) {
		var popup = Ext.create("M_PO_UPLOAD.view.WinAddRow");
		popup.show();
		Ext.getCmp('rowCount').setValue(1);
	},

    gridDelBtnClick: function(button, e, eOpts) {
        var store = Ext.getStore('MyStore');
    	var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();

    	var flag = '';
    	
    	if(gridRecord.length > 0) {
    		Ext.Msg.confirm('확인','삭제하시겠습니까?', function(button){
				if(button == 'yes') {
					for(var i=0; i<gridRecord.length; i++) {
			    		if(gridRecord[i].data['V_TYPE']=='V' && gridRecord[i].data['PO_CFM_YN']=='N') {
			    			gridRecord[i].set('V_TYPE','D');
			    			flag = 'T';
			    		} else if (gridRecord[i].data['PO_CFM_YN'] != 'Y') {
			    			store.remove(gridRecord[i]);
			    			flag = 'T';
			    		}
			    		else if (gridRecord[i].data['PO_CFM_YN'] == 'Y') {
			    			flag = 'F';
			    			break;
			    		} 
			    	}
					
					if(flag == 'T') {
						store.sync({
							params: {
								V_TYPE: 'SYNC',
								V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
								V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue()
							},
							callback: function(records, operation, success) {
								store.reload();
							}
						});
					} else {
						Ext.Msg.alert('확인', '발주확정 된 데이터는 삭제할 수 없습니다.');
					}
				}
    		});
    	}
    },

    /*그리드새로고침*/
    refreshBtnClick: function(button, e, eOpts) {
    	var store = Ext.getStore('MyStore');
    	store.reload();
    },
    
    xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
            	var grid = Ext.getCmp('myGrid');
            	grid.saveDocumentAs({
                    type: 'xlsx',
                    title: 'test', //엑셀내타이틀
                    fileName: currentDate+'.xlsx' //엑셀파일이름
        		});
    },

    formDownClick: function(button, e, eOpts) {
		var V_FILE_NM = encodeURI('PO_UPLOAD_FORM.xlsx');
		var V_FILE_IN_SYSTEM_NM = encodeURI('PO_UPLOAD_FORM.xlsx');
    	
    	var myWin=new Ext.Window(
				{
					title : '파일다운로드',
					html : '<iframe name="xxx" border =0 src="sql/m_po_upload_file_hspf.jsp?V_TYPE=D&V_FILE_NM='+V_FILE_NM+'&V_FILE_IN_SYSTEM_NM='+V_FILE_IN_SYSTEM_NM+'" width="1%" height="1%"></iframe>',
					width :500,
					height:500
				});
		myWin.show();
		myWin.hide();
    }

});
