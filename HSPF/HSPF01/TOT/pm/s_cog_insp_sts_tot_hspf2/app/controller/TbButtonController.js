/*
 * File: app/controller/TbButtonController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_COG_INSP_STS_TOT_HSPF2.controller.TbButtonController', {
    extend: 'Ext.app.Controller',

    stores: ['MyStore', 'MyStore1'],
    control: {
        "#selBtn": {
            click: 'selBtnClick'
        },
        "#saveBtn": {
            click: 'saveBtnClick'
        },
        "#clrBtn": {
            click: 'clrBtnClick'
        },
        "#clsBtn": {
            click: 'clsBtnClick'
        },
        "myform textfield[name=search_field]": {
            specialkey: 'tfEnter'
        },
    },

    selBtnClick: function(button, e, eOpts) {
    	var store = this.getMyStoreStore();
    	var store1 = this.getMyStore1Store();
    	store.removeAll();
    	store1.removeAll();
    	
    	store.load({
    		params: {
    			V_TYPE: 'SH',
    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
//    			V_YYYYMM: Ext.getCmp('V_YYYYMM').getValue(),
    			V_MVMT_DT_FR: Ext.getCmp('V_MVMT_DT_FR').getValue(),
    			V_MVMT_DT_TO: Ext.getCmp('V_MVMT_DT_TO').getValue(),
    			V_M_BP_CD: Ext.getCmp('V_M_BP_CD').getValue(),
    			V_LC_DOC_NO: Ext.getCmp('V_LC_DOC_NO').getValue(),
    			V_BL_DOC_NO: Ext.getCmp('V_BL_DOC_NO').getValue(),
    			V_ITEM_CD: Ext.getCmp('V_ITEM_CD').getValue(),
    			V_ITEM_NM: Ext.getCmp('V_ITEM_NM').getValue(),
    		},
    		callback: function(records,operations,success){
    		}
    	});

    },

    saveBtnClick: function(button, e, eOpts) {
    	var store = Ext.getStore('MyStore');
    	
    	store.each(function(record, idx) {
			if(record.isDirty()) {
				record.set('V_TYPE', 'U');
			}
		});
    	
    	store.sync({
			params : {
				V_TYPE : 'SYNC',
				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				V_YYYYMM: Ext.getCmp('V_YYYYMM').getValue(),
			},
			callback : function(records, operation, success) {
				var res = records.operations[0]._response.responseText;

				if (res.match('Exception')) {
					Ext.Msg.alert('확인', res);
				} else {
					store.reload();
					Ext.toast({
						title : ' ',
						timeout : 1000,
						html : '저장완료',
						style : 'text-align: center',
						align : 't',
						width : 130,
					});
				}
				
			},
			success : function(response) {
			}
		});
    },

    clrBtnClick: function(button, e, eOpts) {
    	var store = this.getMyStoreStore();
    	store.removeAll();

    	Ext.getCmp('V_M_BP_CD').setValue('');
    	Ext.getCmp('V_M_BP_NM').setValue('');
    	Ext.getCmp('V_LC_DOC_NO').setValue('');
    	Ext.getCmp('V_BL_DOC_NO').setValue('');
    	Ext.getCmp('V_ITEM_CD').setValue('');
    	Ext.getCmp('V_ITEM_NM').setValue('');
    },

    clsBtnClick: function(button, e, eOpts) {
		var tab = parent.Ext.getCmp('myTab');
		var activeTab = tab.getActiveTab();
		var tabIndex = tab.items.indexOf(activeTab);
		tab.remove(tabIndex, true);
	},

    tfEnter: function(field, e, eOpts) {
        if (e.getKey() == e.ENTER) {
        	this.selBtnClick();
        }
    },  
    
    onLaunch: function(application) {
    	var BPstore1 = Ext.getStore('WinMBpPopStore');
        BPstore1.load();
    },
    
});
