/*
 * File: app/controller/TbButtonController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('V_ALTMT_ITEM_TOT_HSPF.controller.TbButtonController', {
    extend: 'Ext.app.Controller',

    stores: ['MyStore', 'MyStore1', 'MyStore2'],
    
    control: {
        "#selBtn": {
            click: 'selBtnClick'
        },
        "#saveBtn": {
            click: 'saveBtnClick'
        },
        "#clrBtn": {
            click: 'clrBtnClick'
        },
        "#clsBtn": {
            click: 'clsBtnClick'
        },
        "myform textfield[name=search_field]": {
            specialkey: 'tfEnter'
        },
    },

    selBtnClick: function(button, e, eOpts) {
    	var store = Ext.getStore('MyStore');
    	var store1 = Ext.getStore('MyStore1');
    	var store2 = Ext.getStore('MyStore2');
    	
    	store.removeAll();
    	store1.removeAll();
    	store2.removeAll();
    	
    	store.load({
    		params: {
    			V_TYPE: 'S',
    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
//    			V_YEAR: Ext.getCmp('V_YEAR').getValue(),
    			V_ITEM_CD: Ext.getCmp('V_ITEM_CD').getValue(),
    		},
    		callback: function(records,operations,success){
    			if(!!Ext.getCmp('V_ITEM_CD').getValue() && records.length > 0){
	    			for(var i=0; i<records.length; i++){
	    				if(Ext.getCmp('V_ITEM_CD').getValue() == records[i].data.ITEM_CD){
	    					Ext.getCmp('V_HSM_ITEM_CD').setValue(records[i].data.HSM_ITEM_CD);
	        				Ext.getCmp('V_ITEM_NM').setValue(records[i].data.ITEM_NM);
	        				Ext.getCmp('V_GRADE').setValue(records[i].data.GRADE);
	        				Ext.getCmp('V_MAKER').setValue(records[i].data.MAKER);
	        				break;
	    				}
	    			}
    			}
    		}
    	});
    },

    saveBtnClick: function(button, e, eOpts) {
//    	var store = Ext.getStore('MyStore');
//		
//    	store.each(function(record, idx) {
//			if(record.isDirty()) {
//				record.set('V_TYPE', 'U');
//			}
//		})
//
//		store.sync({
//			params : {
//				V_TYPE : 'I',
//				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
//				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
//			},
//			callback : function(records, operation, success) {
//				var res = records.operations[0]._response.responseText;
//
//				if (res.match('Exception')) {
//					Ext.Msg.alert('확인', res);
//				} else {
//					store.reload();
//					Ext.toast({
//						title : ' ',
//						timeout : 1000,
//						html : '저장완료',
//						style : 'text-align: center',
//						align : 't',
//						width : 130,
//					});
//				}
//				
//			},
//			success : function(response) {
//			}
//		});
    },

    clrBtnClick: function(button, e, eOpts) {
    	var store = this.getMyStoreStore();
    	var store2 = this.getMyStore2Store();
    	var store3 = this.getMyStore3Store();
    	
    	store.removeAll();
    	store2.removeAll();
    	store3.removeAll();
    },

    clsBtnClick: function(button, e, eOpts) {
        var tab=parent.Ext.getCmp('myTab');
        var activeTab=tab.getActiveTab();
        var tabIndex=tab.items.indexOf(activeTab);
        tab.remove(tabIndex, true);
    },

    tfEnter: function(field, e, eOpts) {
       	if (e.getKey() == e.ENTER) {
       		this.selBtnClick();
       	}
    },
    
    onLaunch: function() {
    	var ItemStore = Ext.getStore('ItemStore');
        ItemStore.load();
        
        var WinMBpPopStore = Ext.getStore('WinMBpPopStore');
        WinMBpPopStore.load();
        
        var userId = parent.Ext.getCmp('GUSER_ID').getValue();
		
		if("/ADMIN/HDH/SMDSM1".indexOf(userId) < 0){
			Ext.getCmp('loadItemBtn').setHidden(true);
			
	    	Ext.getCmp('gridAddBtn').setHidden(true);
	    	Ext.getCmp('gridDelBtn').setHidden(true);
	    	Ext.getCmp('gridSaveBtn').setHidden(true);
	    	
	    	Ext.getCmp('gridAddBtn1').setHidden(true);
	    	Ext.getCmp('gridDelBtn1').setHidden(true);
	    	Ext.getCmp('gridSaveBtn1').setHidden(true);
	    	
	    	Ext.getCmp('gridAddBtn2').setHidden(true);
	    	Ext.getCmp('gridDelBtn2').setHidden(true);
	    	Ext.getCmp('gridSaveBtn2').setHidden(true);
		}
    }

});
