/*
 * File: app/controller/TbButtonController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_PO_BASE_INFO.controller.TbButtonController', {
    extend: 'Ext.app.Controller',
    stores: ['MyStore', 'Popup.store.WinBpPopStore'],
    control: {
        "#selBtn": {
            click: 'selBtnClick'
        },
        "#saveBtn": {
            click: 'saveBtnClick'
        },
        "#delBtn": {
            click: 'delBtnClick'
        },
        "#clrBtn": {
            click: 'clrBtnClick'
        },
        "#clsBtn": {
        	click: 'clsBtnClick'
        },
        "#w_selBtn": {
        	click: 'w_selBtnClick'
        },
        "myform combobox[name=search_field]": {
            specialkey: 'tfEnter'
        }
    },

    selBtnClick: function(button, e, eOpts) {
    	 var store = Ext.getStore('MyStore');
    	store.load({
    		params: {
    			V_TYPE: 'S',
    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    			V_M_BP_CD : Ext.getCmp('V_M_BP_CD').getValue()
    		},
    		callback: function(records,operations,success){
    			
    		}
		});
    },

    saveBtnClick: function() {
        var store = Ext.getStore('MyStore');
        var gridRecord = Ext.getCmp('grid1').getSelectionModel().getSelection();
        
        if(gridRecord.length == 0) {
        	Ext.Msg.alert('확인', '저장할 항목을 선택하세요.')
        } else {
        	Ext.Msg.confirm('확인','저장하시겠습니까?<br>총 ['+gridRecord.length+'] 건', function(button){
    			if(button == 'yes') {
    				for(var i=0; i<gridRecord.length; i++) {
    					if(gridRecord[i].get('V_TYPE') == 'V') {
    						if(gridRecord[i].phantom == true) { //신규
    							gridRecord[i].set('V_TYPE', 'I'); 
    						} else { //기존
    							gridRecord[i].set('V_TYPE', 'U');
    						}
    					}
    				}
    		        
    		        store.sync({
    					params: {
    						V_TYPE : 'SYNC',
    						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
    						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
    					},
    		    		callback: function(records, operation, success) {
//    		    			var tbController = M_PO_BASE_INFO.app.getController("TbButtonController");
//    				    	tbController.selBtnClick();
    		    			store.reload();
    					}
    		    	});
    			}
            });
        }
        
        
    },

    delBtnClick: function(button, e, eOpts) {
    	Ext.Ajax.request({
        	url : 'sql/M_PO_TOT_MGM.jsp',
        	method : 'post',
        	params : {
        		V_TYPE : 'DEL_CHECK',
        		V_MAST_PO_NO: Ext.getCmp('V_MAST_PO_NO').getValue(),
        		V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
        	},
        	success : function(response) {
        		var jResult = Ext.JSON.decode(response.responseText);
        		
        		var flag = jResult.resultList[0].DELETE_FLAG;
        		
        		if(flag == 'N'){
        			Ext.Msg.alert('확인', 'ASN이 생성되어 삭제 불가능합니다.');
        		}
        		else{
        			Ext.Msg.confirm('확인','전체삭제 하시겠습니까?', function(button){
        				if(button == 'yes') {
        					Ext.Ajax.request({
        						url:'sql/M_PO_TOT_MGM.jsp',
        						method: 'post',
        						params: {
        			    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
        			    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
        							V_TYPE: "D", //저장,
        							V_MAST_PO_NO: Ext.getCmp('V_MAST_PO_NO').getValue(),
        						},
        						callback : function(records,operations,success){
        							
        					    },
        					    success : function(response) {

        					    	var tbController = M_PO_TOT_MGM.app.getController("TbButtonController");
        					    	tbController.clrBtnClick();
        					    	
        					    }
        					});
        				}
        	    	});
        		}
        		
        	},
        	scope : this
        });
    	
    },
    clrBtnClick: function(button, e, eOpts) {
    	var store = Ext.getStore('MyStore');
    	store.removeAll();
    },
    
    clsBtnClick: function(button, e, eOpts) {
		var tab = parent.Ext.getCmp('myTab');
		var activeTab = tab.getActiveTab();
		var tabIndex = tab.items.indexOf(activeTab);
		tab.remove(tabIndex, true);
	},

    tfEnter: function(field, e, eOpts) {
        	if (e.getKey() == e.ENTER) {
        		this.selBtnClick();
        	}
    },
    onLaunch: function(application) { 
    	var BPstore1 = Ext.getStore('WinMBpPopStore');
        BPstore1.load({
    		params: {
    		},
    		callback: function(records,operations,success){
    			
    		}
        });
//        
    }
});
