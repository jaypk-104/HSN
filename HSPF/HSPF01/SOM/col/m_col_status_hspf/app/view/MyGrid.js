/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_COL_STATUS_HSPF.view.MyGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.mygrid',

    requires: [
        'M_COL_STATUS_HSPF.view.MyGridViewModel',
        'Ext.view.Table',
        'Ext.grid.column.RowNumberer',
        'Ext.grid.column.Number',
        'Ext.grid.column.Check',
        'Ext.form.field.Number',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.CellEditing'
    ],

    config: {
    },

    viewModel: {
        type: 'mygrid'
    },
    id: 'myGrid',
    style: 'border: 1px solid #659DDC; padding: 5px;',
    bodyBorder: false,
    header: false,
    store: 'MyStore',
    viewConfig: {
    	enableTextSelection: true,
    },
    config: {
        tbar: [
            {
                xtype: 'container',
                flex: 1
            },
            {
                xtype: 'button',
                glyph: 'xf1c3@FontAwesome',
                id: 'xlsxDown',
                cfg: {
                    type: 'excel07',
                    ext: 'xlsx'
                },
                iconCls: 'grid-excel-btn',
                margin: '0 3 0 0',
            }
        ]
    },
    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            text: 'V_TYPE',
            dataIndex: 'V_TYPE'
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'DEPT_CD',
            text: '부서코드',
            align: 'center',
            width: 70,
            filter: {
                type: 'list'
            },
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'DEPT_NM',
            text: '부서명',
            align: 'center',
            width: 100,
            filter: {
                type: 'list'
            },
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'S_BP_CD',
            text: '매출처',
            align: 'center',
            width: 65,
            filter: {
                type: 'list'
            },
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'S_BP_NM',
            text: '매출처명',
            width: 150,
            filter: {
                type: 'list'
            },
        },
        {
    		text : '보증금',
    		style : 'text-align: center; font-weight: bold;',
    		columns : [ {
    			xtype : 'numbercolumn',
    			dataIndex : 'COL_A_AMT',
    			style : 'text-align: center; font-weight: bold;',
    			align : 'end',
    			text : '잔액',
    			width : 110,
    			format : '0,000',
    			summaryType: 'sum',
                summaryRenderer: function (value, summaryData, dataIndex) {
    	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
    	        },
    		},  ]
        }, 
        {
    		text : '보증서',
    		style : 'text-align: center; font-weight: bold;',
    		columns : [ {
    			xtype : 'numbercolumn',
    			dataIndex : 'COL_B_TOT_AMT',
    			style : 'text-align: center; font-weight: bold;',
    			align : 'end',
    			text : '한도',
    			width : 110,
    			format : '0,000',
    			summaryType: 'sum',
                summaryRenderer: function (value, summaryData, dataIndex) {
    	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
    	        },
    		}, {
    			xtype : 'numbercolumn',
    			dataIndex : 'COL_B_AMT',
    			style : 'text-align: center; font-weight: bold;',
    			align : 'end',
    			text : '사용액',
    			width : 110,
    			format : '0,000',
    			summaryType: 'sum',
                summaryRenderer: function (value, summaryData, dataIndex) {
    	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
    	        },
    		}, {
    			xtype : 'numbercolumn',
    			dataIndex : 'COL_B_RM_AMT',
    			style : 'text-align: center; font-weight: bold;',
    			align : 'end',
    			text : '잔액',
    			width : 110,
    			format : '0,000',
    			summaryType: 'sum',
                summaryRenderer: function (value, summaryData, dataIndex) {
    	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
    	        },
    		}, ]
        }, 
        {
    		text : '부동산',
    		style : 'text-align: center; font-weight: bold;',
    		columns : [ {
    			xtype : 'numbercolumn',
    			dataIndex : 'COL_D_TOT_AMT',
    			style : 'text-align: center; font-weight: bold;',
    			align : 'end',
    			text : '한도',
    			width : 110,
    			format : '0,000',
    			summaryType: 'sum',
                summaryRenderer: function (value, summaryData, dataIndex) {
    	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
    	        },
    		}, {
    			xtype : 'numbercolumn',
    			dataIndex : 'COL_D_AMT',
    			style : 'text-align: center; font-weight: bold;',
    			align : 'end',
    			text : '사용액',
    			width : 110,
    			format : '0,000',
    			summaryType: 'sum',
                summaryRenderer: function (value, summaryData, dataIndex) {
    	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
    	        },
    		}, {
    			xtype : 'numbercolumn',
    			dataIndex : 'COL_D_RM_AMT',
    			style : 'text-align: center; font-weight: bold;',
    			align : 'end',
    			text : '잔액',
    			width : 110,
    			format : '0,000',
    			summaryType: 'sum',
                summaryRenderer: function (value, summaryData, dataIndex) {
    	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
    	        },
    		}, ]
        }, 
        {
			xtype : 'numbercolumn',
			dataIndex : 'COL_TOT_AMT',
			style : 'text-align: center; font-weight: bold;',
			align : 'end',
			text : '담보설정총액',
			width : 130,
			format : '0,000',
			summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
	        },
        }, {
        	xtype: 'datecolumn',
        	style: 'text-align: center; font-weight: bold;',
        	dataIndex: 'VALID_DT',
        	text: '유효일',
        	format: 'Y-m-d',
        	align: 'center'
        }, {
        	xtype: 'datecolumn',
        	style: 'text-align: center; font-weight: bold;',
        	dataIndex: 'TO_DT',
        	text: '만기일',
        	format: 'Y-m-d',
        	align: 'center'
        }, 
    ],
    listeners: {
    },
    selModel: {
        selType: 'checkboxmodel',
        mode: 'SINGLE'
    },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        {
            ptype: 'cellediting'
        },
        {
            ptype: 'gridfilters'
        }
    ],
    features : [ {
		ftype : 'summary',
		dock: 'bottom'
	} ],
    viewConfig: {
    	enableTextSelection: true,
    },

});