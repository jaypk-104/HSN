/*
 * File: app/view/LPurReqViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_PO_HSPF.view.LPurReqViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.lpurreq',

    onCheckboxModelSelect: function(rowmodel, record, index, eOpts) {
    record.set('V_TYPE', 'V');
    var gridModel = Ext.getCmp('myGrid').getSelectionModel();
       if(rowmodel.selected.length > 1) {
    	   for(var i=1; i<rowmodel.selected.length; i++) {
    		   var arr = new Array();
    		   if(rowmodel.selected.items[i-1].data['M_BP_CD'] !=
    			   rowmodel.selected.items[i].data['M_BP_CD']) {
    			   Ext.Msg.alert('확인', '동일 공급처를 선택하세요.');
    			   gridModel.deselect(record, true);
    		   } else {
    		   }
    	   }
    	   
    		   
       }
//        for(var i=0; i<rowmodel.selected.length; i++) {
//        	arr.push(record.data.M_BP_CD);
//        	console.log(record.data.M_BP_CD);
//        	if(arr.indexOf(record.data.M_BP_CD) == '-1') {
//        		Ext.Msg.alert('확인', '동일 공급사를 선택하세요.');
//        		Ext.getCmp('myGrid2').getSelectionModel().deselect(index);
//        		break;
//        	}
//        }
        
    },

    onCheckboxModelDeselect: function(rowmodel, record, index, eOpts) {
        record.set('V_TYPE', '');
    }

});
