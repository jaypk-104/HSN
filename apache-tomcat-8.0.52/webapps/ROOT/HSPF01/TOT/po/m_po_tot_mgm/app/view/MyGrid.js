/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_PO_TOT_MGM.view.MyGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.myGrid',

    requires: [
        'M_PO_TOT_MGM.view.MyGridViewModel',
        'Ext.grid.column.RowNumberer',
        'Ext.grid.column.Number',
        'Ext.grid.column.Date',
        'Ext.view.Table',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.CellEditing',
        'Ext.grid.filters.Filters',
        'Ext.grid.plugin.Clipboard',
    ],

    config: {
        tbar: [
            {
                id: 'gridAddBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf055@FontAwesome',
                iconCls: 'grid-add-btn',
            },
            {
                id: 'gridDelBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf056@FontAwesome',
                iconCls: 'grid-del-btn',
            },
            {
            	id: 'gridSaveBtn',
            	text: '',
            	margin: '0 3 0 0',
            	glyph: 'xf0c7@FontAwesome',
            	iconCls: 'grid-save-btn',
            },
            {
            	id: 'gridCfmBtn',
            	text: '확정/취소',
            	margin: '0 3 0 0',
            	 cls: 'blue-btn',
                 style: 'background-color: white; border: 0.5px solid #3367d6;'
            	
            },
            {
                xtype: 'container',
                flex: 1
            },
            {
            	disabledCls: 'af-item-disabled',
                xtype: 'textfield',
                id: 'V_PO_CFM',
                margin: '0 30 0 30',
                maxWidth: 200,
                minWidth: 200,
                width: 200,
                fieldLabel: '발주확정여부',
                labelWidth: 80,
                name: 'search_field' ,
                editable: false,
            },
            {
            	id: 'printBtn',
            	text: '',
            	margin: '0 3 0 0',
            	glyph: 'xf02f@FontAwesome',
                iconCls: 'grid-print-btn',
         	},
         	{
         	   id: 'sendBtn',
         	   text: '',
         	   margin: '0 3 0 0',
         	   style: 'background-color: white; border: 0.5px solid #3367d6;',
         	   cls: 'blue-btn',
         	   text: '발주서발송',
            },
            {
                xtype: 'button',
                glyph: 'xf1c3@FontAwesome',
                id: 'xlsxDown',
                cfg: {
                    type: 'excel07',
                    ext: 'xlsx'
                },
                iconCls: 'grid-excel-btn',
                margin: '0 3 0 0',
                
            }
        ]
    },

    viewModel: {
        type: 'mygrid'
    },
    style: 'border: 1px solid lightgray; padding: 5px;',
    header: false,
    title: 'My Grid Panel',
    store: 'MyStore',
    id: 'myGrid',
    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 114,
            dataIndex: 'V_TYPE',
            text: 'V_TYPE',
            hidden: true
        },
        {
        	
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
            width: 150,
            text: '<span style=\'color:red\'>*</span>품목코드',
            dataIndex: 'ITEM_CD',
            editor: {
                xtype: 'combobox',
                displayField: 'ITEM_CD',
                valueField: 'ITEM_CD',
                enableRegEx: true,
                minChars: 2,
                queryMode: 'local',
                allowBlank:false,
                store: 'ItemStore',
                listeners   : {
                    beforequery: function(record){  
                        record.query = new RegExp(record.query, 'i');
                        record.forceAll = true;
                    },
                    focus: function(widget, event, eOpts) {
                    	//품목사용유무를 실시간으로 반영하기 위해 스토어 다시 로드하도록 20200729 김장운
                    	var ItemStore = Ext.getStore('ItemStore');
                    	ItemStore.reload();
                    },
                }
            },
            sortable: false
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
            width: 200,
            dataIndex: 'ITEM_NM',
            text: '품목명',
            editor: {
                xtype: 'combobox',
                displayField: 'ITEM_NM',
                valueField: 'ITEM_CD',
                enableRegEx: true,
                minChars: 2,
                queryMode: 'local',
                store: 'ItemStore',
                matchFieldWidth: false,
                listeners   : {
                    beforequery: function(record){  
                        record.query = new RegExp(record.query, 'i');
                        record.forceAll = true;
                        
                    },
                    focus: function(widget, event, eOpts) {
                    	//품목사용유무를 실시간으로 반영하기 위해 스토어 다시 로드하도록 20200729 김장운
                    	var ItemStore = Ext.getStore('ItemStore');
                    	ItemStore.reload();
                    },
                },
              	listConfig: {
                    itemTpl: [
                        '<div>[{ITEM_CD}] {ITEM_NM}</div>'
                    ]
                }
            },
        	renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('ItemStore').findRecord('ITEM_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('ItemStore').findRecord('ITEM_CD',value).get('ITEM_NM');
                }
                return value;
            },
            sortable: false
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 114,
            dataIndex: 'SPEC',
            text: '규격',
            sortable: false
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6;',
        	width: 114,
        	dataIndex: 'MAKER',
        	text: 'MAKER',
        	sortable: false,
        	editor: {
        		xtype: 'textfield',
        	},
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6;',
        	width: 114,
        	dataIndex: 'AGENT',
        	text: 'AGENT',
        	sortable: false,
        	editor: {
        		xtype: 'textfield',
        	},
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 58,
            dataIndex: 'UNIT',
            text: '단위',
            sortable: false
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            align: 'end',
            dataIndex: 'TOT_PO_QTY',
            text: '총 발주수량',
            format: '0,000.00',
            sortable: false,
    		summaryType : 'sum',
    		summaryRenderer : function(value, summaryData, dataIndex) {
    			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
    		},
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
            align: 'end',
            dataIndex: 'PO_PRC',
            text: '<span style=\'color:red\'>*</span>발주단가',
            format: '0,000.00000',
            editor: {
            	xtype: 'numberfield',
                decimalPrecision:5,
                allowBlank:false
            },
            sortable: false
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            align: 'end',
            dataIndex: 'TOT_PO_AMT',
            text: '총 발주금액',
            format: '0,000.0000',
            sortable: false,
    		summaryType : 'sum',
    		summaryRenderer : function(value, summaryData, dataIndex) {
    			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.0000') + "<font>";
    		},
    		width: 120
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	dataIndex: 'PO_SEQ',
        	text: 'PO_SEQ',
        	hidden: true,
            sortable: false
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	dataIndex: 'PO_ROW',
        	text: 'PO_ROW',
        	hidden: true,
        	sortable: false
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
            text: '<span style=\'color:red\'>*</span>창고',
            dataIndex: 'HOPE_SL_CD',
            width: 180,
            editor: {
        		xtype: 'combobox',
        		editable: false,
        		allowBlank:false,
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'sl_combo',
        			proxy: {
        		           type: 'ajax',
        		           extraParams: {
        		            	V_MAST_CD: 'SL_G',
        		            	V_GRID: 'Y'
        		           },	
        		           api: {
        		               read: '/HSPF01/common/sql/Combobox.jsp'
        		           },
        		           reader: {
        		               type: 'json',
        		               rootProperty: 'resultList'
        		           }
        		       }
        		}),
        		listConfig: {
                    itemTpl: [
                        '<div>{DTL_NM} ({DTL_CD}) </div>'
                    ]
                }
        	},
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('sl_combo').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('sl_combo').findRecord('DTL_CD',value).get('DTL_NM');
                }
                return value;
            },
            sortable: false
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
        	text: '실입고창고',
        	dataIndex: 'GR_SL_CD',
        	width: 180,
        	editor: {
        		xtype: 'combobox',
//        		editable: false,
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'sl_combo',
        			proxy: {
        				type: 'ajax',
        				extraParams: {
        					V_MAST_CD: 'SL_G',
        					V_GRID: 'Y'
        				},	
        				api: {
        					read: '/HSPF01/common/sql/Combobox.jsp'
        				},
        				reader: {
        					type: 'json',
        					rootProperty: 'resultList'
        				}
        			}
        		}),
        		listConfig: {
        			itemTpl: [
        				'<div>{DTL_NM} ({DTL_CD}) </div>'
        				]
        		}
        	},
        	renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
        		if(Ext.data.StoreManager.lookup('sl_combo').findRecord('DTL_CD',value) !==null)
        		{
        			return Ext.data.StoreManager.lookup('sl_combo').findRecord('DTL_CD',value).get('DTL_NM');
        		}
        		return value;
        	},
        	sortable: false
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
        	text: '비고(공급사용)',
        	dataIndex: 'SUPP_REMARK',
        	width: 180,
        	editor: {
        		xtype: 'textfield',
        	},
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
        	text: '입고지<br>(외부, 직입고용)',
        	id: 'E103_GR_SL_NM',
        	dataIndex: 'E103_GR_SL_NM',
        	width: 180,
        	editor: {
        		xtype: 'textfield',
        	},
        	hidden: true,
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
        	text: '입고지 상세주소<br>(외부, 직입고용)',
        	id: 'E103_ADDRESS',
        	dataIndex: 'E103_ADDRESS',
        	width: 180,
        	editor: {
        		xtype: 'textfield',
        	},
        	hidden: true,
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
        	text: '입고지 담당자 이름<br>(외부, 직입고용)',
        	id: 'E103_USR_NM',
        	dataIndex: 'E103_USR_NM',
        	width: 180,
        	editor: {
        		xtype: 'textfield',
        	},
        	hidden: true,
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
        	text: '입고지 담당자 이메일<br>(외부, 직입고용)',
        	id: 'E103_USR_EMAIL',
        	dataIndex: 'E103_USR_EMAIL',
        	width: 180,
        	editor: {
        		xtype: 'textfield',
        	},
        	hidden: true,
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
        	text: '입고지 담당자 연락처<br>(외부, 직입고용)',
        	id: 'E103_USR_TEL',
        	dataIndex: 'E103_USR_TEL',
        	width: 180,
        	editor: {
        		xtype: 'textfield',
        	},
        	hidden: true,
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
        	text: '입고지 특이사항<br>(외부, 직입고용)',
        	id: 'E103_REMARK',
        	dataIndex: 'E103_REMARK',
        	width: 180,
        	editor: {
        		xtype: 'textfield',
        	},
        	hidden: true,
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            text: '<span style=\'color:red\'>*</span>발주1',
            columns: [
                {
                    xtype: 'datecolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
                    text: '납기일1',
                    dataIndex: 'DLVY_HOPE_DT1',
                    format: 'Y-m-d',
                    editor: {
                        xtype: 'datefield',
                        format: 'Y-m-d',
                        altFormats: 'm/d/Y|n/j/Y|n/j/y|m/j/y|n/d/y|m/j/Y|n/d/Y|m-d-y|m-d-Y|m/d|m-d|md|mdy|mdY|d|Y-m-d|n-j|n/j|Ymd',
//                        allowBlank:false,
                    },
                    sortable: false
                },
                {
                    xtype: 'numbercolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
                    align: 'end',
                    dataIndex: 'PO_QTY1',
                    text: '발주수량1',
                    format: '0,000.00',
                    editor: {
                    	xtype: 'numberfield',
                    	minValue: 0,
//                    	allowBlank:false,
                    },
                    sortable: false,
            		summaryType : 'sum',
            		summaryRenderer : function(value, summaryData, dataIndex) {
            			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
            		},
                    
                },
                {
                    xtype: 'numbercolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold;',
                    align: 'end',
                    dataIndex: 'PO_AMT1',
                    text: '발주금액1',
                    format: '0,000.0000',
                    editor: {
                    	xtype: 'numberfield'
                    },
                    sortable: false,
            		summaryType : 'sum',
            		summaryRenderer : function(value, summaryData, dataIndex) {
            			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.0000') + "<font>";
            		},
            		width: 120
                },
                {
                    xtype: 'gridcolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
                    text: '운송방법1',
                    dataIndex: 'TRANS_TYPE1',
                    width: 90,
                    editor: {
                		xtype: 'combobox',
                		editable: false,
                		allowBlank:false,
                		displayField: 'DTL_NM',
                		autoLoadOnValue: true,
                		valueField: 'DTL_CD',
                		store: Ext.create('Ext.data.Store',{
                      		autoLoad: true,
                      		storeId: 'transStore1',
                      		proxy: {
                                  type: 'ajax',
                                  extraParams: {
                                   	V_MAST_CD: 'BA06',
                                   	V_GRID: 'Y'
                                  },	
                                  api: {
                                      read: '/HSPF01/common/sql/Combobox.jsp'
                                  },
                                  reader: {
                                      type: 'json',
                                      rootProperty: 'resultList'
                                  }
                              }
                      	}),
                	},
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(Ext.data.StoreManager.lookup('transStore1').findRecord('DTL_CD',value) !==null)
                        {
                            return Ext.data.StoreManager.lookup('transStore1').findRecord('DTL_CD',value).get('DTL_NM');
                        }
                        return value;
                    },
                    sortable: false
                },
                {
                	xtype: 'gridcolumn',
                	style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
                	dataIndex: 'PO_REMARK1',
                	text: '비고1',
                	editor: {
                		xtype: 'textfield'
                	},
                	sortable: false,
                	width: 150
                }
            ]
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            text: '발주2',
            columns: [
                {
                    xtype: 'datecolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
                    text: '납기일2',
                    dataIndex: 'DLVY_HOPE_DT2',
                    format: 'Y-m-d',
                    editor: {
                        xtype: 'datefield',
                        format: 'Y-m-d',
                        altFormats: 'm/d/Y|n/j/Y|n/j/y|m/j/y|n/d/y|m/j/Y|n/d/Y|m-d-y|m-d-Y|m/d|m-d|md|mdy|mdY|d|Y-m-d|n-j|n/j|Ymd',
                    },
                    sortable: false
                },
                {
                    xtype: 'numbercolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
                    align: 'end',
                    dataIndex: 'PO_QTY2',
                    text: '발주수량2',
                    format: '0,000.00',
                    editor: {
                    	xtype: 'numberfield',
                    	minValue: 0
                    },
                    sortable: false,
            		summaryType : 'sum',
            		summaryRenderer : function(value, summaryData, dataIndex) {
            			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
            		},
                },
                {
                    xtype: 'numbercolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold;',
                    align: 'end',
                    dataIndex: 'PO_AMT2',
                    text: '발주금액2',
                    format: '0,000.0000',
                    editor: {
                    	xtype: 'numberfield'
                    },
                    sortable: false,
            		summaryType : 'sum',
            		summaryRenderer : function(value, summaryData, dataIndex) {
            			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.0000') + "<font>";
            		},
            		width: 120
                },
                {
                    xtype: 'gridcolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
                    text: '운송방법2',
                    dataIndex: 'TRANS_TYPE2',
                    width: 90,
                    editor: {
                		xtype: 'combobox',
                		editable: false,
                		allowBlank:false,
                		displayField: 'DTL_NM',
                		autoLoadOnValue: true,
                		valueField: 'DTL_CD',
                		store: Ext.create('Ext.data.Store',{
                      		autoLoad: true,
                      		storeId: 'transStore2',
                      		proxy: {
                                  type: 'ajax',
                                  extraParams: {
                                   	V_MAST_CD: 'BA06',
                                   	V_GRID: 'Y'
                                  },	
                                  api: {
                                      read: '/HSPF01/common/sql/Combobox.jsp'
                                  },
                                  reader: {
                                      type: 'json',
                                      rootProperty: 'resultList'
                                  }
                              }
                      	}),
                	},
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(Ext.data.StoreManager.lookup('transStore2').findRecord('DTL_CD',value) !==null)
                        {
                            return Ext.data.StoreManager.lookup('transStore2').findRecord('DTL_CD',value).get('DTL_NM');
                        }
                        return value;
                    },
                    sortable: false
                },
                {
                	xtype: 'gridcolumn',
                	style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
                	dataIndex: 'PO_REMARK2',
                	text: '비고2',
                	editor: {
                		xtype: 'textfield'
                	},
                	sortable: false,
                	width: 150
                }
            ]
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            text: '발주3',
            columns: [
                {
                    xtype: 'datecolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
                    text: '납기일3',
                    dataIndex: 'DLVY_HOPE_DT3',
                    format: 'Y-m-d',
                    editor: {
                        xtype: 'datefield',
                        format: 'Y-m-d',
                        altFormats: 'm/d/Y|n/j/Y|n/j/y|m/j/y|n/d/y|m/j/Y|n/d/Y|m-d-y|m-d-Y|m/d|m-d|md|mdy|mdY|d|Y-m-d|n-j|n/j|Ymd',
                    },
                    sortable: false
                },
                {
                    xtype: 'numbercolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
                    align: 'end',
                    dataIndex: 'PO_QTY3',
                    text: '발주수량3',
                    format: '0,000.00',
                    editor: {
                    	xtype: 'numberfield',
                    	minValue: 0
                    },
                    sortable: false,
            		summaryType : 'sum',
            		summaryRenderer : function(value, summaryData, dataIndex) {
            			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
            		},
                },
                {
                    xtype: 'numbercolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold;',
                    align: 'end',
                    dataIndex: 'PO_AMT3',
                    text: '발주금액3',
                    format: '0,000.0000',
                    editor: {
                    	xtype: 'numberfield'
                    },
                    sortable: false,
            		summaryType : 'sum',
            		summaryRenderer : function(value, summaryData, dataIndex) {
            			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.0000') + "<font>";
            		},
            		width: 120
                },
                {
                    xtype: 'gridcolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
                    text: '운송방법3',
                    dataIndex: 'TRANS_TYPE3',
                    width: 90,
                    editor: {
                		xtype: 'combobox',
                		editable: false,
                		allowBlank:false,
                		displayField: 'DTL_NM',
                		autoLoadOnValue: true,
                		valueField: 'DTL_CD',
                		store: Ext.create('Ext.data.Store',{
                      		autoLoad: true,
                      		storeId: 'transStore3',
                      		proxy: {
                                  type: 'ajax',
                                  extraParams: {
                                   	V_MAST_CD: 'BA06',
                                   	V_GRID: 'Y'
                                  },	
                                  api: {
                                      read: '/HSPF01/common/sql/Combobox.jsp'
                                  },
                                  reader: {
                                      type: 'json',
                                      rootProperty: 'resultList'
                                  }
                              }
                      	}),
                	},
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(Ext.data.StoreManager.lookup('transStore3').findRecord('DTL_CD',value) !==null)
                        {
                            return Ext.data.StoreManager.lookup('transStore3').findRecord('DTL_CD',value).get('DTL_NM');
                        }
                        return value;
                    },
                    sortable: false
                },
                {
                	xtype: 'gridcolumn',
                	style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
                	dataIndex: 'PO_REMARK3',
                	text: '비고3',
                	editor: {
                		xtype: 'textfield'
                	},
                	sortable: false,
                	width: 150
                }
            ]
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            text: '발주4',
            columns: [
                {
                    xtype: 'datecolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
                    text: '납기일4',
                    dataIndex: 'DLVY_HOPE_DT4',
                    format: 'Y-m-d',
                    editor: {
                        xtype: 'datefield',
                        format: 'Y-m-d',
                        altFormats: 'm/d/Y|n/j/Y|n/j/y|m/j/y|n/d/y|m/j/Y|n/d/Y|m-d-y|m-d-Y|m/d|m-d|md|mdy|mdY|d|Y-m-d|n-j|n/j|Ymd',
                    },
                    sortable: false
                },
                {
                    xtype: 'numbercolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
                    align: 'end',
                    dataIndex: 'PO_QTY4',
                    text: '발주수량4',
                    format: '0,000.00',
                    editor: {
                    	xtype: 'numberfield',
                    	minValue: 0
                    },
                    sortable: false,
            		summaryType : 'sum',
            		summaryRenderer : function(value, summaryData, dataIndex) {
            			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
            		},
                },
                {
                    xtype: 'numbercolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold;',
                    align: 'end',
                    dataIndex: 'PO_AMT4',
                    text: '발주금액4',
                    format: '0,000.0000',
                    editor: {
                    	xtype: 'numberfield'
                    },
                    sortable: false,
            		summaryType : 'sum',
            		summaryRenderer : function(value, summaryData, dataIndex) {
            			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.0000') + "<font>";
            		},
            		width: 120
                },
                {
                    xtype: 'gridcolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
                    text: '운송방법4',
                    dataIndex: 'TRANS_TYPE4',
                    width: 90,
                    editor: {
                		xtype: 'combobox',
                		editable: false,
                		allowBlank:false,
                		displayField: 'DTL_NM',
                		autoLoadOnValue: true,
                		valueField: 'DTL_CD',
                		store: Ext.create('Ext.data.Store',{
                      		autoLoad: true,
                      		storeId: 'transStore4',
                      		proxy: {
                                  type: 'ajax',
                                  extraParams: {
                                   	V_MAST_CD: 'BA06',
                                   	V_GRID: 'Y'
                                  },	
                                  api: {
                                      read: '/HSPF01/common/sql/Combobox.jsp'
                                  },
                                  reader: {
                                      type: 'json',
                                      rootProperty: 'resultList'
                                  }
                              }
                      	}),
                	},
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(Ext.data.StoreManager.lookup('transStore4').findRecord('DTL_CD',value) !==null)
                        {
                            return Ext.data.StoreManager.lookup('transStore4').findRecord('DTL_CD',value).get('DTL_NM');
                        }
                        return value;
                    },
                    sortable: false
                },
                {
                	xtype: 'gridcolumn',
                	style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
                	dataIndex: 'PO_REMARK4',
                	text: '비고4',
                	editor: {
                		xtype: 'textfield'
                	},
                	sortable: false,
                	width: 150
                }
            ]
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            text: '발주5',
            columns: [
                {
                    xtype: 'datecolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
                    text: '납기일5',
                    dataIndex: 'DLVY_HOPE_DT5',
                    format: 'Y-m-d',
                    editor: {
                        xtype: 'datefield',
                        format: 'Y-m-d',
                        altFormats: 'm/d/Y|n/j/Y|n/j/y|m/j/y|n/d/y|m/j/Y|n/d/Y|m-d-y|m-d-Y|m/d|m-d|md|mdy|mdY|d|Y-m-d|n-j|n/j|Ymd',
                    },
                    sortable: false
                },
                {
                    xtype: 'numbercolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
                    align: 'end',
                    dataIndex: 'PO_QTY5',
                    text: '발주수량5',
                    format: '0,000.00',
                    editor: {
                    	xtype: 'numberfield',
                    	minValue: 0
                    },
                    sortable: false,
            		summaryType : 'sum',
            		summaryRenderer : function(value, summaryData, dataIndex) {
            			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
            		},
                },
                {
                    xtype: 'numbercolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold;',
                    align: 'end',
                    dataIndex: 'PO_AMT5',
                    text: '발주금액5',
                    format: '0,000.0000',
                    editor: {
                    	xtype: 'numberfield'
                    },
                    sortable: false,
            		summaryType : 'sum',
            		summaryRenderer : function(value, summaryData, dataIndex) {
            			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.0000') + "<font>";
            		},
            		width: 120
                },
                {
                    xtype: 'gridcolumn',
                    style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
                    text: '운송방법5',
                    dataIndex: 'TRANS_TYPE5',
                    width: 90,
                    editor: {
                		xtype: 'combobox',
                		editable: false,
                		allowBlank:false,
                		displayField: 'DTL_NM',
                		autoLoadOnValue: true,
                		valueField: 'DTL_CD',
                		store: Ext.create('Ext.data.Store',{
                      		autoLoad: true,
                      		storeId: 'transStore5',
                      		proxy: {
                                  type: 'ajax',
                                  extraParams: {
                                   	V_MAST_CD: 'BA06',
                                   	V_GRID: 'Y'
                                  },	
                                  api: {
                                      read: '/HSPF01/common/sql/Combobox.jsp'
                                  },
                                  reader: {
                                      type: 'json',
                                      rootProperty: 'resultList'
                                  }
                              }
                      	}),
                	},
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(Ext.data.StoreManager.lookup('transStore5').findRecord('DTL_CD',value) !==null)
                        {
                            return Ext.data.StoreManager.lookup('transStore5').findRecord('DTL_CD',value).get('DTL_NM');
                        }
                        return value;
                    },
                    sortable: false
                },
                {
                	xtype: 'gridcolumn',
                	style: 'font-size: 12px; text-align: center; font-weight: bold;  color: #3367d6',
                	dataIndex: 'PO_REMARK5',
                	text: '비고5',
                	editor: {
                		xtype: 'textfield'
                	},
                	sortable: false,
                	width: 150
                }
            ]
        }
    ],
    viewConfig: {
        enableTextSelection: true
    },
    selModel: {
        selType: 'checkboxmodel',
        listeners: {
        	select: function(rowmodel, record, index, eOpts) {
            	record.set('V_TYPE', 'V');
            },
            deselect: function(rowmodel, record, index, eOpts) {
            	record.set('V_TYPE', '');
            }
        }
    },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        {
            ptype: 'clipboard'
        },
        {
            ptype: 'cellediting',
            clicksToEdit: 2,
            listeners: {
            	beforeedit: function(editor, context, eOpts) {
            		if(Number(context.value) == 0) {
            			context.value = '';
            		}
            	},
            	afteredit: function(editor, context, eOpts) {
    				
            		/*품목코드*/
            		if(context.column.dataIndex == 'ITEM_CD' && context.record.phantom == false) {
            			Ext.MessageBox.show({
            		        title: '확인',
            		        msg: '품목변경은 행 삭제 후 재등록하세요.',
            		        //버튼정의
            		        buttons: Ext.MessageBox.OK,
            		        //아이콘정의
            		        icon : Ext.MessageBox.WARNING
            		    });
            			context.record.set('ITEM_CD', context.originalValue);
            		} else if(context.column.dataIndex == 'ITEM_CD' ) {
	            		Ext.Ajax.request({
							url:'/HSPF01/common/popup/sql/common_item.jsp',
							method: 'post',
							params: {
				    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
				    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
				    			V_ITEM_CD: context.record.get('ITEM_CD')
							},
							callback : function(records,operations,success){
								
						    },
						    success : function(response) {
						    	var jsonResult = Ext.JSON.decode(response.responseText);
						    	
						    	if (jsonResult.resultList.length > 0) {
						    		var ITEM_CD = jsonResult.resultList[0].ITEM_CD;
									var ITEM_NM = jsonResult.resultList[0].ITEM_NM;
									var SPEC = jsonResult.resultList[0].SPEC;
									var UNIT = jsonResult.resultList[0].UNIT;
									var M_PRICE = jsonResult.resultList[0].M_PRICE;
									var AGENT = jsonResult.resultList[0].AGENT;
									var MAKER = jsonResult.resultList[0].MAKER;
									
									context.record.set('ITEM_NM', ITEM_NM);
									context.record.set('SPEC', SPEC);
									context.record.set('UNIT', UNIT);
									context.record.set('PO_PRC', M_PRICE);
									context.record.set('AGENT', AGENT);
									context.record.set('MAKER', MAKER);
						    	} else {
						    		context.record.set('ITEM_NM', '품목정보없음');
						    	}
						    	
								
						    },
							scope: this
						});
            		}
            		
            		
            		/*품목명*/
            		if(context.column.dataIndex == 'ITEM_NM' && context.record.phantom == false) {
//            			Ext.Msg.alert('확인', '품목변경은 행 삭제 후 재등록하세요.');
            			Ext.MessageBox.show({
            		        title: '확인',
            		        msg: '품목변경은 행 삭제 후 재등록하세요.',
            		        //버튼정의
            		        buttons: Ext.MessageBox.OK,
            		        //아이콘정의
            		        icon : Ext.MessageBox.WARNING
            		    });
            			context.record.set('ITEM_NM', context.originalValue);
            		} else if(context.column.dataIndex=='ITEM_NM') {
            			context.record.set('ITEM_CD', context.record.get('ITEM_NM'));
            			Ext.Ajax.request({
							url:'/HSPF01/common/popup/sql/common_item.jsp',
							method: 'post',
							params: {
				    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
				    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
				    			V_ITEM_CD: context.record.get('ITEM_CD')
							},
							callback : function(records,operations,success){
								
						    },
						    success : function(response) {
						    	var jsonResult = Ext.JSON.decode(response.responseText);
						    	
						    	if (jsonResult.resultList.length > 0) {
						    		var ITEM_CD = jsonResult.resultList[0].ITEM_CD;
									var ITEM_NM = jsonResult.resultList[0].ITEM_NM;
									var SPEC = jsonResult.resultList[0].SPEC;
									var UNIT = jsonResult.resultList[0].UNIT;
									var M_PRICE = jsonResult.resultList[0].M_PRICE;
									var AGENT = jsonResult.resultList[0].AGENT;
									var MAKER = jsonResult.resultList[0].MAKER;
									
									
									context.record.set('ITEM_NM', ITEM_NM);
									context.record.set('SPEC', SPEC);
									context.record.set('UNIT', UNIT);
									context.record.set('PO_PRC', M_PRICE);
									context.record.set('AGENT', AGENT);
									context.record.set('MAKER', MAKER);
						    	} else {
						    		context.record.set('ITEM_CD', '품목정보없음');
						    	}
						    	
								
						    },
							scope: this
						});
            		} 
            		
            		/*발주단가*/
            		if(context.column.dataIndex=='PO_PRC') {
            			var PO_PRC = context.record.get('PO_PRC');
            			var TOT_PO_QTY = context.record.get('TOT_PO_QTY');

            			var PO_QTY1 = context.record.get('PO_QTY1');
            			var PO_QTY2 = context.record.get('PO_QTY2');
            			var PO_QTY3 = context.record.get('PO_QTY3');
            			var PO_QTY4 = context.record.get('PO_QTY4');
            			var PO_QTY5 = context.record.get('PO_QTY5');
            			
            			context.record.set('PO_AMT1', PO_PRC * PO_QTY1);
            			context.record.set('PO_AMT2', PO_PRC * PO_QTY2);
            			context.record.set('PO_AMT3', PO_PRC * PO_QTY3);
            			context.record.set('PO_AMT4', PO_PRC * PO_QTY4);
            			context.record.set('PO_AMT5', PO_PRC * PO_QTY5);

            			context.record.set('TOT_PO_AMT', PO_PRC * TOT_PO_QTY);
            		} 
            		
            		/*발주수량1*/
            		if(context.column.dataIndex=='PO_QTY1') {
            			var PO_PRC = context.record.get('PO_PRC');
            			var PO_QTY1 = Number(context.record.get('PO_QTY1'));
            			var PO_QTY2 = Number(context.record.get('PO_QTY2'));
            			var PO_QTY3 = Number(context.record.get('PO_QTY3'));
            			var PO_QTY4 = Number(context.record.get('PO_QTY4'));
            			var PO_QTY5 = Number(context.record.get('PO_QTY5'));

            			var TOT_PO_QTY = PO_QTY1 + PO_QTY2 + PO_QTY3 + PO_QTY4 + PO_QTY5;
            			context.record.set('PO_AMT1', PO_PRC * PO_QTY1);
            			context.record.set('TOT_PO_QTY', TOT_PO_QTY);
            			context.record.set('TOT_PO_AMT', TOT_PO_QTY * PO_PRC);
            		} 
            		/*발주수량2*/
            		if(context.column.dataIndex=='PO_QTY2') {
            			var PO_PRC = context.record.get('PO_PRC');
            			var PO_QTY1 = Number(context.record.get('PO_QTY1'));
            			var PO_QTY2 = Number(context.record.get('PO_QTY2'));
            			var PO_QTY3 = Number(context.record.get('PO_QTY3'));
            			var PO_QTY4 = Number(context.record.get('PO_QTY4'));
            			var PO_QTY5 = Number(context.record.get('PO_QTY5'));

            			var TOT_PO_QTY = PO_QTY1 + PO_QTY2 + PO_QTY3 + PO_QTY4 + PO_QTY5;
            			context.record.set('TOT_PO_QTY', TOT_PO_QTY);
            			context.record.set('PO_AMT2', PO_PRC * PO_QTY2);
            			context.record.set('TOT_PO_AMT', TOT_PO_QTY * PO_PRC);
            		} 
            		/*발주수량3*/
            		if(context.column.dataIndex=='PO_QTY3') {
            			var PO_PRC = context.record.get('PO_PRC');
            			var PO_QTY1 = Number(context.record.get('PO_QTY1'));
            			var PO_QTY2 = Number(context.record.get('PO_QTY2'));
            			var PO_QTY3 = Number(context.record.get('PO_QTY3'));
            			var PO_QTY4 = Number(context.record.get('PO_QTY4'));
            			var PO_QTY5 = Number(context.record.get('PO_QTY5'));

            			var TOT_PO_QTY = PO_QTY1 + PO_QTY2 + PO_QTY3 + PO_QTY4 + PO_QTY5;
            			context.record.set('TOT_PO_QTY', TOT_PO_QTY);
            			context.record.set('PO_AMT3', PO_PRC * PO_QTY3);
            			context.record.set('TOT_PO_AMT', TOT_PO_QTY * PO_PRC);
            		} 
            		/*발주수량4*/
            		if(context.column.dataIndex=='PO_QTY4') {
            			var PO_PRC = context.record.get('PO_PRC');
            			var PO_QTY1 = Number(context.record.get('PO_QTY1'));
            			var PO_QTY2 = Number(context.record.get('PO_QTY2'));
            			var PO_QTY3 = Number(context.record.get('PO_QTY3'));
            			var PO_QTY4 = Number(context.record.get('PO_QTY4'));
            			var PO_QTY5 = Number(context.record.get('PO_QTY5'));

            			var TOT_PO_QTY = PO_QTY1 + PO_QTY2 + PO_QTY3 + PO_QTY4 + PO_QTY5;
            			context.record.set('TOT_PO_QTY', TOT_PO_QTY);
            			context.record.set('PO_AMT4', PO_PRC * PO_QTY4);
            			context.record.set('TOT_PO_AMT', TOT_PO_QTY * PO_PRC);
            		} 
            		/*발주수량5*/
            		if(context.column.dataIndex=='PO_QTY5') {
            			var PO_PRC = context.record.get('PO_PRC');
            			var PO_QTY1 = Number(context.record.get('PO_QTY1'));
            			var PO_QTY2 = Number(context.record.get('PO_QTY2'));
            			var PO_QTY3 = Number(context.record.get('PO_QTY3'));
            			var PO_QTY4 = Number(context.record.get('PO_QTY4'));
            			var PO_QTY5 = Number(context.record.get('PO_QTY5'));
            			
            			var TOT_PO_QTY = PO_QTY1 + PO_QTY2 + PO_QTY3 + PO_QTY4 + PO_QTY5;
            			context.record.set('TOT_PO_QTY', TOT_PO_QTY);
            			context.record.set('PO_AMT5', PO_PRC * PO_QTY5);
            			context.record.set('TOT_PO_AMT', TOT_PO_QTY * PO_PRC);
            		} 
            		
            		/*창고*/
            		if(context.column.dataIndex=='HOPE_SL_CD') {
            			var store = Ext.getStore('MyStore');
            			if(context.rowIdx == 0) {
		        			store.each(function(rec,idx) {
		        				rec.set('HOPE_SL_CD', context.record.get('HOPE_SL_CD'));
		        				if(rec.get('GR_SL_CD') == undefined || rec.get('GR_SL_CD') == ''){
		        					rec.set('GR_SL_CD', context.record.get('HOPE_SL_CD'));
		        				} else {
		        					rec.set('GR_SL_CD', context.record.get('GR_SL_CD'));
		        				}
		        			});
            			} else if(context.record.get('GR_SL_CD') == undefined || context.record.get('GR_SL_CD') == ''){
            				context.record.set('GR_SL_CD', context.record.get('HOPE_SL_CD'));
            			}
            		};
            		
            		/*실입고창고*/
            		if(context.column.dataIndex=='GR_SL_CD') {
            			if(context.rowIdx == 0) {
	            			var store = Ext.getStore('MyStore');
	            			store.each(function(rec,idx) {
	            				rec.set('GR_SL_CD', context.record.get('GR_SL_CD'));
	            			});
            			}
            		}
            		
            		
            		if(context.column.dataIndex=='DLVY_HOPE_DT1') {
            			if(context.rowIdx == 0) {
            				var store = Ext.getStore('MyStore');
                			store.each(function(rec,idx) {
                				rec.set('DLVY_HOPE_DT1', context.record.get('DLVY_HOPE_DT1'));
                			});
            			}
            		}
            		if(context.column.dataIndex=='DLVY_HOPE_DT2') {
            			if(context.rowIdx == 0) {
            				var store = Ext.getStore('MyStore');
                			store.each(function(rec,idx) {
                				rec.set('DLVY_HOPE_DT2', context.record.get('DLVY_HOPE_DT2'));
                			});
            			}
            		}
            		if(context.column.dataIndex=='DLVY_HOPE_DT3') {
            			if(context.rowIdx == 0) {
            				var store = Ext.getStore('MyStore');
                			store.each(function(rec,idx) {
                				rec.set('DLVY_HOPE_DT3', context.record.get('DLVY_HOPE_DT3'));
                			});
            			}
            		}
            		if(context.column.dataIndex=='DLVY_HOPE_DT4') {
            			if(context.rowIdx == 0) {
            				var store = Ext.getStore('MyStore');
                			store.each(function(rec,idx) {
                				rec.set('DLVY_HOPE_DT4', context.record.get('DLVY_HOPE_DT4'));
                			});
            			}
            		}
            		if(context.column.dataIndex=='DLVY_HOPE_DT5') {
            			if(context.rowIdx == 0) {
            				var store = Ext.getStore('MyStore');
                			store.each(function(rec,idx) {
                				rec.set('DLVY_HOPE_DT5', context.record.get('DLVY_HOPE_DT5'));
                			});
            			}
            		}
            		
            		//직입고 입고지 데이터
            		if(context.column.dataIndex=='E103_GR_SL_NM') {
            			var store = Ext.getStore('MyStore');
            			store.each(function(rec,idx) {
            				rec.set('E103_GR_SL_NM', context.record.get('E103_GR_SL_NM'));
            			});
            		}
            		if(context.column.dataIndex=='E103_ADDRESS') {
            			var store = Ext.getStore('MyStore');
            			store.each(function(rec,idx) {
            				rec.set('E103_ADDRESS', context.record.get('E103_ADDRESS'));
            			});
            		}
            		if(context.column.dataIndex=='E103_USR_NM') {
            			var store = Ext.getStore('MyStore');
            			store.each(function(rec,idx) {
            				rec.set('E103_USR_NM', context.record.get('E103_USR_NM'));
            			});
            		}
            		if(context.column.dataIndex=='E103_USR_EMAIL') {
            			var store = Ext.getStore('MyStore');
            			store.each(function(rec,idx) {
            				rec.set('E103_USR_EMAIL', context.record.get('E103_USR_EMAIL'));
            			});
            		}
            		if(context.column.dataIndex=='E103_USR_TEL') {
            			var store = Ext.getStore('MyStore');
            			store.each(function(rec,idx) {
            				rec.set('E103_USR_TEL', context.record.get('E103_USR_TEL'));
            			});
            		}
            		if(context.column.dataIndex=='E103_REMARK') {
            			var store = Ext.getStore('MyStore');
            			store.each(function(rec,idx) {
            				rec.set('E103_REMARK', context.record.get('E103_REMARK'));
            			});
            		}
            		
            		if(context.column.dataIndex=='TRANS_TYPE1') {
            			var store = Ext.getStore('MyStore');
            			store.each(function(rec,idx) {
            				if(rec.data['DLVY_HOPE_DT1'] != '' && rec.data['DLVY_HOPE_DT1'] != null && rec.data['DLVY_HOPE_DT1'] != undefined){
            					rec.set('TRANS_TYPE1', context.record.get('TRANS_TYPE1'));
            				}
            			});
            		}
            		if(context.column.dataIndex=='TRANS_TYPE2') {
            			var store = Ext.getStore('MyStore');
            			store.each(function(rec,idx) {
            				if(rec.data['DLVY_HOPE_DT2'] != '' && rec.data['DLVY_HOPE_DT2'] != null && rec.data['DLVY_HOPE_DT2'] != undefined){
            					rec.set('TRANS_TYPE2', context.record.get('TRANS_TYPE2'));
            				}
            			});
            		}
            		if(context.column.dataIndex=='TRANS_TYPE3') {
            			var store = Ext.getStore('MyStore');
            			store.each(function(rec,idx) {
            				if(rec.data['DLVY_HOPE_DT3'] != '' && rec.data['DLVY_HOPE_DT3'] != null && rec.data['DLVY_HOPE_DT3'] != undefined){
            					rec.set('TRANS_TYPE3', context.record.get('TRANS_TYPE3'));
            				}
            			});
            		}
            		if(context.column.dataIndex=='TRANS_TYPE4') {
            			var store = Ext.getStore('MyStore');
            			store.each(function(rec,idx) {
            				if(rec.data['DLVY_HOPE_DT4'] != '' && rec.data['DLVY_HOPE_DT4'] != null && rec.data['DLVY_HOPE_DT4'] != undefined){
            					rec.set('TRANS_TYPE4', context.record.get('TRANS_TYPE4'));
            				}
            			});
            		}
            		if(context.column.dataIndex=='TRANS_TYPE5') {
            			var store = Ext.getStore('MyStore');
            			store.each(function(rec,idx) {
            				if(rec.data['DLVY_HOPE_DT5'] != '' && rec.data['DLVY_HOPE_DT5'] != null && rec.data['DLVY_HOPE_DT5'] != undefined){
            					rec.set('TRANS_TYPE5', context.record.get('TRANS_TYPE5'));
            				}
            			});
            		}
            	},
            }
        },
        {
            ptype: 'gridfilters'
        }
    ],
	features : [ {
		ftype: 'summary',
//        dock: 'buttom'
	} ],

});