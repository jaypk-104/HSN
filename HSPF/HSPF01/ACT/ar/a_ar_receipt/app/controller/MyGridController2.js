/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('A_AR_RECEIPT.controller.MyGridController2', {
	extend : 'Ext.app.Controller',
	stores : [ 'MyStore2', 'MyStore3', 'MyStore6', 'MyStore7', 'ArrayStore' ],
	control : {
		"#gridAddBtn2" : {
			click : 'gridAddBtn2Click'
		},
		"#gridDelBtn2" : {
			click : 'gridDelBtn2Click'
		},
		"#gridSaveBtn2" : {
			click : 'gridSaveBtn2Click'
		},
		"#myGrid2" : {
			cellclick : 'myGrid2Click'
		},
		"#gridAddBtn6" : {
			click : 'gridAddBtn6Click'
		},
		"#gridDelBtn6" : {
			click : 'gridDelBtn6Click'
		},
		"#gridDelBtn7" : {
			click : 'gridDelBtn7Click'
		},
		"#replaceBtn" : {
			click : 'replaceBtnClick'
		},
		"#xlsxDown2" : {
			click : 'xlsxDown2Click'
		},
		"#xlsxDown6" : {
			click : 'xlsxDown6Click'
		},
		"#xlsxDown7" : {
			click : 'xlsxDown7Click'
		},
	},
	
	gridAddBtn2Click : function(button, e, eOpts) {
		var popup = Ext.create("A_AR_RECEIPT.view.WinAddRow");
		popup.show();
		Ext.getCmp('rowCount').setValue(1);
	},
	
	gridDelBtn2Click : function(button, e, eOpts) {
		var store2 = Ext.getStore('MyStore2');
		var gridRecord2 = Ext.getCmp('myGrid2').getSelectionModel().getSelection();
		var flag = 'F';
		
		if (!Ext.getCmp('arCancelBtn').isDisabled()) {
			Ext.Msg.alert('확인', '전표취소 후 삭제가능합니다.');
			return;
    	}
		
		for(var i=0; i<gridRecord2.length; i++) {
			if(gridRecord2[i].get('V_TYPE') == 'I') {
				store2.remove(gridRecord2[i]);
			} else {
				gridRecord2[i].set('V_TYPE', 'D');
				flag = 'T';
			}
		}
		
		if(flag == 'T') {
			Ext.Msg.confirm('확인', '삭제하시겠습니까?', function(button) {
				if (button == 'yes') {
					store2.sync({
						params : {
							V_TYPE : 'T2ID',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_CLS_AR_NO : Ext.getCmp('V_CLS_AR_NO').getValue(),
						},
						callback : function(records, operation, success) {
							store2.reload();
						}, 
					});
				}
			});
		}
	},
	
	gridSaveBtn2Click : function(button, e, eOpts) {
		
	},
	
	myGrid2Click : function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
		var arrStore = Ext.getStore('ArrayStore');
		var store3 = Ext.getStore('MyStore3');
		if (!!!record.get('ACCT_CD')) return;
		
		if(!!record.get('SEQ')){ // ITEM 저장 후
			if(store3.data.items.length > 0 && record.get('ACCT_CD') === store3.data.items[0].get('ACCT_CD')
					&& (record.get('SEQ') == store3.data.items[0].get('SEQ') || !!!store3.data.items[0].get('SEQ'))){
				// SKIP
			} else {
				var store3Data = store3.data;
				if(store3Data.items.length > 0 && !!store3Data.items[0].get('SEQ')){
					var records = [];
					store3.each(function(r){
						records.push(r.copy());
					});
					
					// 직전 아이템의 관리항목 저장
					arrStore.data.items[store3Data.items[0].get('SEQ')] = records;
				}
				
				store3.removeAll();
				
				var arrStoreItems = arrStore.data.items;
				if(!!arrStoreItems[record.get('SEQ')]){
					for(var i=0; i<arrStoreItems[record.get('SEQ')].length; i++){
						store3.add(arrStoreItems[record.get('SEQ')][i]);
					}
				} else {
					store3.load({
						params : {
							V_TYPE : 'T2T2S2',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_CLS_AR_NO : Ext.getCmp('V_CLS_AR_NO').getValue(),
							V_SEQ : record.get('SEQ'),
						},
						callback : function(records, operations, success) {
							if(records.length === 0){
								store3.load({
					        		params: {
					        			V_TYPE: 'ACCT_REF',
					        			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
					        			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
					        			V_ACCT_CD : record.get('ACCT_CD'),
					        			V_SEQ : record.get('SEQ'),
					        		},
					        		callback: function(records,operations,success){
					        			
					        		},
					        	});
							}
						}
					});
				}
			}
		} else { // ITEM 저장 전
//			if(store3.data.items.length > 0 && (!!!store3.data.items[0].get('SEQ')  
//					&& record.get('ACCT_CD') === store3.data.items[0].get('ACCT_CD'))){
//				// SKIP
//			} else {
//				store3.removeAll();
//				store3.load({
//	        		params: {
//	        			V_TYPE: 'ACCT_REF',
//	        			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
//	        			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
//	        			V_ACCT_CD : record.get('ACCT_CD'),
//	        		},
//	        		callback: function(records,operations,success){
//	        			
//	        		},
//	        	});
//			}
		}
	},
	
	gridAddBtn6Click : function(button, e, eOpts) {
		var popup = Ext.create("A_AR_RECEIPT.view.WinAddRow1");
		popup.show();
		Ext.getCmp('rowCount1').setValue(1);
	},
	
	gridDelBtn6Click : function(button, e, eOpts) {
		var store6 = Ext.getStore('MyStore6');
		var gridRecord6 = Ext.getCmp('myGrid6').getSelectionModel().getSelection();
		var flag = 'F';
		
		if (!Ext.getCmp('arCancelBtn').isDisabled()) {
			Ext.Msg.alert('확인', '전표취소 후 삭제가능합니다.');
			return;
    	}
		
		for(var i=0; i<gridRecord6.length; i++) {
			if(gridRecord6[i].get('V_TYPE') == 'I') {
				store6.remove(gridRecord6[i]);
			} else {
				gridRecord6[i].set('V_TYPE', 'D');
				flag = 'T';
			}
		}
		
		if(flag == 'T') {
			Ext.Msg.confirm('확인', '삭제하시겠습니까?', function(button) {
				if (button == 'yes') {
					store6.sync({
						params : {
							V_TYPE : 'T2ID2COL',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_CLS_AR_NO : Ext.getCmp('V_CLS_AR_NO').getValue(),
						},
						callback : function(records, operation, success) {
							var tbController = A_AR_RECEIPT.app.getController("TbButtonController");
							tbController.selBtnClick();
						}, 
						success: function() {
						}
					});
				}
			});
		} else {
			var myGridController1 = A_AR_RECEIPT.app.getController("MyGridController1");
			myGridController1.initCalc();
		}
	},
	
	gridDelBtn7Click : function(button, e, eOpts) {
		var store7 = Ext.getStore('MyStore7');
		var myGrid7 = Ext.getCmp('myGrid7').getSelectionModel().getSelection();
		var flag = 'F';
		
		if (!Ext.getCmp('arCancelBtn').isDisabled()) {
			Ext.Msg.alert('확인', '전표취소 후 삭제가능합니다.');
			return;
    	}
		
		for(var i=0; i<myGrid7.length; i++) {
			if(myGrid7[i].get('V_TYPE') == 'I') {
				store7.remove(myGrid7[i]);
			} else {
				myGrid7[i].set('V_TYPE', 'D');
				flag = 'T';
			}
		}
		
		if(flag == 'T') {
			Ext.Msg.confirm('확인', '삭제하시겠습니까?', function(button) {
				if (button == 'yes') {
					store7.sync({
						params : {
							V_TYPE : 'T3ID',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_CLS_AR_NO : Ext.getCmp('V_CLS_AR_NO').getValue(),
						},
						callback : function(records, operation, success) {
							var tbController = A_AR_RECEIPT.app.getController("TbButtonController");
							tbController.selBtnClick();
						}, 
						success: function() {
						}
					});
				}
			});
		} else {
			var myGridController1 = A_AR_RECEIPT.app.getController("MyGridController1");
			myGridController1.initCalc();
		}
	},
	
	replaceBtnClick : function(button, e, eOpts) {
		var store7 = Ext.getStore('MyStore7');
		var myGrid1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		var myGrid7 = Ext.getCmp('myGrid7').getSelectionModel().getSelection();
		var calcStore = Ext.getStore('CalcStore1');
		
		if(myGrid1.length < 1 || myGrid7.length < 1){
			Ext.Msg.alert('확인', '선택된 행이 없습니다.');
			return;
		}
		
		var calcCnt = calcStore.getData().length;
		for(var i=0; i<myGrid7.length; i++){
			var record7 = myGrid7[i];
			var LOC_AMT = record7.get('LOC_AMT'); //금액
			var BAL_AMT = record7.get('REFUND_AMT'); //잔액
			
			if(BAL_AMT > 0){
				for(var j=0; j<myGrid1.length; j++){
					var record1 = myGrid1[j];
					var REMAIN_AMT = record1.get('REMAIN_AMT'); //잔액
					var RECV_AMT = record1.get('RECV_AMT'); //수금금액
					var RECV_LOC_AMT = record1.get('RECV_LOC_AMT'); //수금자국금액
					
					if(REMAIN_AMT > 0){
						var diffAmt = BAL_AMT-REMAIN_AMT;
						var clsAmt = 0;
						calcCnt++;
						
						if(diffAmt < 0){
							record1.set('REMAIN_AMT', diffAmt*-1);
							record1.set('REMAIN_DOC_AMT', diffAmt*-1);
							record1.set('RECV_AMT', RECV_AMT+BAL_AMT);
							record1.set('RECV_LOC_AMT', RECV_LOC_AMT+BAL_AMT);
							record7.set('REMAIN_AMT', record7.get('REMAIN_AMT')-BAL_AMT);
							record7.set('RECV_LOC_AMT', record7.get('RECV_LOC_AMT')+BAL_AMT);
							clsAmt = BAL_AMT;
						} else {
							BAL_AMT -= REMAIN_AMT;
							record1.set('REMAIN_AMT', 0);
							record1.set('REMAIN_DOC_AMT', 0);
							record1.set('RECV_AMT', RECV_AMT+REMAIN_AMT);
							record1.set('RECV_LOC_AMT', RECV_LOC_AMT+REMAIN_AMT);
							record7.set('REMAIN_AMT', record7.get('REMAIN_AMT')-REMAIN_AMT);
							record7.set('RECV_LOC_AMT', record7.get('RECV_LOC_AMT')+REMAIN_AMT);
							clsAmt = REMAIN_AMT;
						}
						
						var rec = Ext.create('A_AR_RECEIPT.model.MyModel', {
							V_TYPE: 'I',
							SEQ: calcCnt,
							IV_NO: record7.get('IV_NO'),
							AR_NO: record1.get('AR_NO'),
							BAL_IN_AMT: record7.get('REMAIN_AMT'),
							CLS_IN_AMT: clsAmt,
						});
						
						calcStore.insert(calcCnt-1, rec);
						if(record7.get('REMAIN_AMT') === 0) break;
					} 
				}
			}
		}
	},
	
	xlsxDown2Click: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('myGrid2');
    	grid.saveDocumentAs({
            type: 'xlsx',
            title: '추가계정등록', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
		});
    },
    
    xlsxDown6Click: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('myGrid6');
    	grid.saveDocumentAs({
            type: 'xlsx',
            title: '보증금', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
		});
    },
    
    xlsxDown7Click: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('myGrid7');
    	grid.saveDocumentAs({
            type: 'xlsx',
            title: '매입대체', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
		});
    },
    
});
