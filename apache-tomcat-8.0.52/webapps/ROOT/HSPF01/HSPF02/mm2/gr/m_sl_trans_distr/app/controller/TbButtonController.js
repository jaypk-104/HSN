/*
 * File: app/controller/TbButtonController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_SL_TRANS_DISTR.controller.TbButtonController', {
    extend: 'Ext.app.Controller',
    stores: ['MyStore', 'MyStore1', 'MyStore2_1', 'MyStore2_2', 'MyStore3_1', 'MyStore3_2'],
    control: {
        "#selBtn": {
            click: 'selBtnClick'
        },
        "#saveBtn": {
            click: 'saveBtnClick'
        },
        "#delBtn": {
            click: 'delBtnClick'
        },
        "#clsBtn": {
            click: 'clsBtnClick'
        },
        "[name=search_field1]": {
            specialkey: 'tfEnter'
        }
    },

    selBtnClick: function(button, e, eOpts) {
		
    	if(Ext.getCmp('myTab').activeTab.title == '이고료등록') {
    		var store = this.getMyStoreStore();
	    		store.removeAll();
	        	store.load({
	    		params: {
	    			V_TAB_TYPE: 'T1',
	    			V_TYPE: 'SH',
	    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
	    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
	    			V_PO_NO : Ext.getCmp('V_PO_NO').getValue(),
	    			V_APPROV_NO : Ext.getCmp('V_APPROV_NO').getValue(),
	    			V_BP_NM : Ext.getCmp('V_BP_NM').getValue(),
	    			V_GR_DT_FR : Ext.getCmp('V_GR_DT_FR').getValue(),
	    			V_GR_DT_TO : Ext.getCmp('V_GR_DT_TO').getValue(),
	    			V_FR_SL_CD : Ext.getCmp('V_FR_SL_CD').getValue(),
	    			V_BL_DOC_NO : Ext.getCmp('V_BL_DOC_NO').getValue(),
	    		},
	    		callback: function(records,operations,success){
	    			
	    		}
	    	});
    	} else if(Ext.getCmp('myTab').activeTab.title == '항운노조비등록') {
    		var store3_1 = this.getMyStore3_1Store();
    		store3_1.removeAll();
    		store3_1.load({
    		params: {
    			V_TAB_TYPE: 'T3',
    			V_TYPE: 'SH',
    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    		},
    		callback: function(records,operations,success){
    			
    		}
    	});
    	}
    	
    },

    saveBtnClick: function(button, e, eOpts) {
    	if(Ext.getCmp('myTab').activeTab.title == '이고료등록') {
    		
    		var store = Ext.getStore('MyStore');
    		var store1 = Ext.getStore('MyStore1');
    		var flag = '';
    		var msg = '';
    		
    		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
    		
    		for(var i=0; i<gridRecord.length; i++) {
				if(gridRecord[i].get('MV_DT') == '' || gridRecord[i].get('MV_DT') == null) {
					flag = 'F';
					msg = '이고일을 입력하세요.';
					break;
				} else if(gridRecord[i].get('TO_SL_CD') == '' || gridRecord[i].get('TO_SL_CD') == null) {
					flag = 'F';
					msg = 'TO창고를 입력하세요.'
					break;
				} else if(gridRecord[i].get('MV_BP_CD') == '' || gridRecord[i].get('MV_BP_CD') == null) {
					flag = 'F';
					msg = '이고업체코드를 입력하세요.'
					break;
				} else if(gridRecord[i].get('MV_AMT') == '' || gridRecord[i].get('MV_AMT') == null) {
					flag = 'F';
					msg = '이고료를 입력하세요.'
					break;
				} else if(gridRecord[i].get('MV_VAT_TYPE') == '' || gridRecord[i].get('MV_VAT_TYPE') == null) {
					flag = 'F';
					msg = '부가세유형을 선택하세요.'
					break;
				} else {
					flag = 'T';
					if(gridRecord[i].get('MV_NO') == undefined) {
						gridRecord[i].set('V_TYPE', 'I');
					} else {
						gridRecord[i].set('V_TYPE', 'U');
					}
				}
			}
    		
    		if(gridRecord.length > 0) {
    			if(flag == 'T') {
        			Ext.Msg.confirm('확인', '저장하시겠습니까?', function(button) {
            			if (button == 'yes') {

            				var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();

            				store.sync({
            					params : {
            						V_TAB_TYPE: 'T1',
            						V_TYPE : 'SYNC',
            						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
            						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
            					},
            					callback : function(records, operation, success) {
            						var res = records.operations[0]._response.responseText;
            						
            						if(res.match('Exception')) {
            							Ext.Msg.alert('확인', res);
            						} else {
            							store.reload();
//            							store1.reload();
            						}
            					}, 
            					success: function() {
            					}
            				});
            			}
            		});
        		} else {
        			Ext.Msg.alert('확인', msg);
        		}
    		} else {
    			Ext.Msg.alert('확인', '항목을 선택하세요.');
    		}
    		
    	} 
    	
    	/* 항운노조비등록 */
    	else if(Ext.getCmp('myTab').activeTab.title == '항운노조비등록') {
    		
    		var store3_1 = Ext.getStore('MyStore3_1');
    		var store3_2 = Ext.getStore('MyStore3_2');
    		var flag = '';
    		var msg = '';
    		
    		var gridRecord = Ext.getCmp('myGrid3_1').getSelectionModel().getSelection();
    		
    		for(var i=0; i<gridRecord.length; i++) {
    			if(gridRecord[i].get('PH_DT') == '' || gridRecord[i].get('PH_DT') == null) {
    				flag = 'F';
    				msg = '기준일을 입력하세요.';
    				break;
    			} else if(gridRecord[i].get('PH_AMT') == '' || gridRecord[i].get('PH_AMT') == null) {
    				flag = 'F';
    				msg = '노임을 입력하세요.'
					break;
    			} else {
    				flag = 'T';
    				if(gridRecord[i].get('PH_NO') == undefined) {
    					gridRecord[i].set('V_TYPE', 'I');
    				} else {
    					gridRecord[i].set('V_TYPE', 'U');
    				}
    			}
    		}
    		if(gridRecord.length > 0) {
	    		if(flag == 'T') {
	    			Ext.Msg.confirm('확인', '저장하시겠습니까?', function(button) {
	    				if (button == 'yes') {
	    					
	    					var gridRecord = Ext.getCmp('myGrid3_1').getSelectionModel().getSelection();
	    					
	    					store3_1.sync({
	    						params : {
	    							V_TAB_TYPE: 'T3',
	    							V_TYPE : 'SYNC',
	    							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
	    							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
	    						},
	    						callback : function(records, operation, success) {
	    							var res = records.operations[0]._response.responseText;
	    							
	    							if(res.match('Exception')) {
	    								Ext.Msg.alert('확인', res);
	    							} else {
	    								store3_1.reload();
	    							}
	    						}, 
	    						success: function() {
	    						}
	    					});
	    				}
	    			});
	    		} else {
	    			Ext.Msg.alert('확인', msg);
	    		}
    		} else {
    			Ext.Msg.alert('확인', '항목을 선택하세요.');
    		}
    	}
    },

    delBtnClick: function(button, e, eOpts) {

    	if(Ext.getCmp('myTab').activeTab.title == '이고료등록') {
    		
    		var store = Ext.getStore('MyStore');
    		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
    		
	    	if(gridRecord.length > 0) {
	    		Ext.Msg.confirm('확인','삭제하시겠습니까?', function(button){
	    			if(button == 'yes') {
	    				for(var i=0; i<gridRecord.length; i++) {
	    		    		if(gridRecord[i].data['V_TYPE'] == 'V') {
	    		    			gridRecord[i].set('V_TYPE', 'D');
	    		    		}
	    		    	}
	    					store.sync({
	        					params: {
	        						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
	        						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
	        						V_TAB_TYPE: 'T1',
	        						V_TYPE: 'SYNC'
	        					},
	        		    		callback: function(records, operation, success) {
	        						var res = records.operations[0]._response.responseText;
	        						
	        						if(res.match('Exception')) {
	        							Ext.Msg.alert('확인', res);
	        						} else {
	        							store.reload();
	//        							store1.reload();
	        						}
	        					}
	        		    	});
	    		    	
	    			}
	    		});
	    	}
    	} else if(Ext.getCmp('myTab').activeTab.title == '항운노조비등록') {
    		
    		var store3_1 = Ext.getStore('MyStore3_1');
    		var gridRecord = Ext.getCmp('myGrid3_1').getSelectionModel().getSelection();
    		
	    	if(gridRecord.length > 0) {
	    		Ext.Msg.confirm('확인','삭제하시겠습니까?', function(button){
	    			if(button == 'yes') {
	    				for(var i=0; i<gridRecord.length; i++) {
	    		    		if(gridRecord[i].data['V_TYPE'] == 'V') {
	    		    			gridRecord[i].set('V_TYPE', 'D');
	    		    		}
	    		    	}
    						store3_1.sync({
	        					params: {
	        						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
	        						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
	        						V_TAB_TYPE: 'T3',
	        						V_TYPE: 'SYNC'
	        					},
	        		    		callback: function(records, operation, success) {
	        						var res = records.operations[0]._response.responseText;
	        						
	        						if(res.match('Exception')) {
	        							Ext.Msg.alert('확인', res);
	        						} else {
	        							store3_1.reload();
	        						}
	        					}
	        		    	});
	    		    	
	    			}
	    		});
	    	}
    	}
    },


    tfEnter: function(field, e, eOpts) {
        	if (e.getKey() == e.ENTER) {
        		this.selBtnClick();
        	}
    }

});
