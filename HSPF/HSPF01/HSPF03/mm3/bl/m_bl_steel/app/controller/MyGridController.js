/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_BL_STEEL.controller.MyGridController', {
    extend: 'Ext.app.Controller',

    control: {
        "#gridAddBtn2": {
            click: 'gridAddBtn2Click'
        },
        "#gridDelBtn2": {
            click: 'gridDelBtn2Click'
        },
        "#xlsxDown": {
            click: 'xlsxDownClick'
        },
    },

    gridAddBtn2Click: function(button, e, eOpts) {
    	var gridRecord = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
    	if(gridRecord.length == 1) {
    		console.log(gridRecord);
    		if(gridRecord[0].get('CHARGE_YN') == 'Y'){
    			Ext.Msg.alert('확인', '경비가 존재합니다. 변경할 수 없습니다.');
    		}
    		else if (gridRecord[0].get('CC_YN') == 'Y'){
    			Ext.Msg.alert('확인', '통관이 존재합니다. 변경할 수 없습니다.');
    		}
    		else{
    			var popup = Ext.create("M_BL_STEEL.view.WinAddRow");
    			popup.show();
    			Ext.getCmp('rowCount').setValue(1);
    		}
    	} else {
    		Ext.Msg.alert('확인', '품목정보를 추가할 B/L을 좌측에서 1건 선택하세요.');
    	}
    },

    gridDelBtn2Click: function(button, e, eOpts) {
		
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');
		var store2 = Ext.getStore('MyStore2');
		var flag = 'T';
		var msg = '';
		
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		
		store2.each(function(rec, idx) {
			if (rec.get('CHARGE_YN') == 'Y') {
				flag = 'F';
				msg = '경비가 존재합니다. 변경할 수 없습니다.';
				return false;
			} 
			if (rec.get('CC_YN') == 'Y') {
				flag = 'F';
				msg = '통관이 존재합니다. 변경할 수 없습니다.';
				return false;
			} 
		});
		
		if (flag == 'T') {
			Ext.Msg.confirm('확인', '삭제하시겠습니까?', function(button) {
				if (button == 'yes') {
					
					store2.each(function(rec, idx) {
						if(rec.get('V_TYPE') == 'V') {
							rec.set('V_TYPE', 'D');
						}
					});
					store2.sync({
						params : {
							V_TYPE : 'SYNC',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
						},
						callback : function(records, operation, success) {
							store1.reload();
							store2.reload();
							
						}, 
						success: function() {
						}
					});
				}
			});
			
		} else {
			Ext.Msg.alert('확인',  msg);
		}
	},

    xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
            	var grid = Ext.getCmp('myGrid');
            	grid.saveDocumentAs({
                    type: 'xlsx',
                    title: 'B/L등록1', //엑셀내타이틀
                    fileName: currentDate+'.xlsx' //엑셀파일이름
        		});
    },
    
});
