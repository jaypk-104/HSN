/*
 * File: app/controller/MyGridController1.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_IV_DISTR.controller.MyGridController1', {
	extend : 'Ext.app.Controller',
	stores : [ 'MyStore', 'MyStore1' ],
	control : {
		"#gridAddBtn" : {
			click : 'gridAddBtnClick'
		},
		"#gridDelBtn" : {
			click : 'gridDelBtnClick'
		},
		"#xlsxDown1" : {
			click : 'xlsxDown1Click'
		},
		"#ivRegBtn" : {
			click: 'ivRegBtnClick'
		},
		"#tempGlCfmBtn" : {
			click : 'tempGlCfmBtnClick'
		},
		"#tempGlCancelBtn" : {
			click : 'tempGlCancelBtnClick'
		},
	},

	gridAddBtnClick : function(button, e, eOpts) {
		var popup = Ext.create("M_IV_DISTR.view.WinAddRow");
		popup.show();
		Ext.getCmp('rowCount').setValue(1);
	},
	
	gridDelBtnClick : function(button, e, eOpts) {
		
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');
		var flag = '';
		var msg = '';
		
		var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		
		Ext.Msg.confirm('확인', '삭제하시겠습니까?', function(button) {
			if (button == 'yes') {

				var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
				var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();

				for(var i=0; i<gridRecord1.length; i++) {
					if(gridRecord1[i].get('V_TYPE') == 'V') {
						gridRecord1[i].set('V_TYPE', 'D');
					}
				}
				
				store1.sync({
					params : {
						V_TYPE : 'SYNC',
						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
						V_IV_NO: Ext.getCmp('V_IV_NO').getValue()
					},
					callback : function(records, operation, success) {
						store.reload();
						store1.reload();
						
						if(store1.getCount() == gridRecord1.length) {
							
							var tbController = M_IV_DISTR.app.getController("TbButtonController");
				    		tbController.clrBtnClick();

//							Ext.getCmp('V_BILL_NO').setValue('');
//							var nows = new Date();
//
//							Ext.getCmp('V_BILL_DT').setValue(nows);
//			    			Ext.getCmp('V_SALE_TYPE').setValue(null);
//			    			Ext.getCmp('V_S_BP_CD2').setValue('');
//			    			Ext.getCmp('V_S_BP_NM2').setValue('');
//			    			Ext.getCmp('V_R_BP_CD').setValue('');
//			    			Ext.getCmp('V_R_BP_NM').setValue('');
//							Ext.getCmp('V_DN_ISSUE_DT').setValue(nows);
//							Ext.getCmp('V_TAX_CD').setValue('TX3');
//							Ext.getCmp('V_CUR').setValue('USD');
//							Ext.getCmp('V_IN_TERMS').setValue(null);
//							Ext.getCmp('V_PAY_METH').setValue(null);
						}
					}, 
					success: function() {
					}
				});
			}
		});
	},
	
	ivRegBtnClick: function() {

    	var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';
    	var rb1 = Ext.ComponentQuery.query('radiofield[name=rb1]');
    	var rb2 = Ext.ComponentQuery.query('radiofield[name=rb2]');
    	

    	if (Ext.getCmp('V_M_BP_NM2').getValue() == '' || Ext.getCmp('V_M_BP_NM2').getValue() == null) {
			flag = 'F';
			msg = '매입처를 선택하세요.';
		} else if (Ext.getCmp('V_IV_DT').getValue() == null) {
			flag = 'F';
			msg = '매입일자를 입력하세요.';
		} else if (Ext.getCmp('V_IV_ISSUE_DT').getValue() == null) {
			flag = 'F';
			msg = '지불예정일을 선택하세요.';
		} else if (Ext.getCmp('V_T_BP_NM').getValue() == '') {
			flag = 'F';
			msg = '지급처를 선택하세요.';
		} else if (Ext.getCmp('V_IV_TYPE').getValue() == null) {
			flag = 'F';
			msg = '매입형태를 선택하세요.';
		} else if (Ext.getCmp('V_TAX_CD').getValue() == null) {
			flag = 'F';
			msg = '세금계산서 신고사업장을 선택하세요.';
		} else if (Ext.getCmp('V_CUR').getValue() == null) {
			flag = 'F';
			msg = '화폐단위를 선택하세요.';
		} else if (Ext.getCmp('V_PAY_METH').getValue() == null) {
			flag = 'F';
			msg = '결제방법을 선택하세요.';
//		} else if (Ext.getCmp('V_IN_TERMS').getValue() == null) {
//			flag = 'F';
//			msg = '가격조건을 선택하세요.';
		} else {
			flag = 'T';
		}
    	
    	if(flag == 'T') {
    	Ext.Msg.confirm('확인', '매입등록 하시겠습니까?', function(button) {
			if (button == 'yes') {
		    		if(Ext.getCmp('V_IV_NO').getValue() == '') {
		    			Ext.Ajax.request({
		        			url : 'sql/M_IV_DISTR.jsp',
		        			method : 'post',
		        			params: {
		        				V_TYPE: 'IH',
		            			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
		        				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
		        				V_IV_DT : Ext.getCmp('V_IV_DT').getValue(),
		        				V_IV_TYPE : Ext.getCmp('V_IV_TYPE').getValue(),
		        				V_M_BP_CD2 : Ext.getCmp('V_M_BP_CD2').getValue(),
		        				V_T_BP_CD : Ext.getCmp('V_T_BP_CD').getValue(),
		        				V_IV_ISSUE_DT : Ext.getCmp('V_IV_ISSUE_DT').getValue(),
		        				V_CUR : Ext.getCmp('V_CUR').getValue(),
		        				V_XCHG_RT : Ext.getCmp('V_XCHG_RT').getValue(),
		        				V_BL_DOC_NO : Ext.getCmp('V_BL_DOC_NO').getValue(),
		        				V_TAX_CD : Ext.getCmp('V_TAX_CD').getValue(),
		        				V_PAY_METH : Ext.getCmp('V_PAY_METH').getValue(),
		        				V_IN_TERMS : Ext.getCmp('V_IN_TERMS').getValue(),
		        				V_ELEC_VAT_YN : rb1[0].getGroupValue(),
		        			},
		        			success: function(response) {
		        				var res = response.responseText;
		        				
		        				store1.each(function(record, idx) {
		    						record.set('V_TYPE', 'I');
		        				});
		        				
		        				if(!res.match('Exception')) {
		        					Ext.getCmp('V_IV_NO').setValue(res);
		        					
		        					store1.sync({ 
		        						params : {
		        							V_TYPE : 'SYNC',
		        							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
		        							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
		        							V_IV_NO : res,
		        						},
		        						callback : function(records, operation, success) {
		        				    		var tbController = M_IV_DISTR.app.getController("TbButtonController");
		        				    		tbController.selBtnClick();
		        						}, 
		        						success: function() {
		        							
		        						}
		        					});
		        				} else {
		        					Ext.Msg.alert('확인', res);
		        				}
		        			}
		            	});
		    		} else {

		    			Ext.Ajax.request({
		        			url : 'sql/M_IV_DISTR.jsp',
		        			method : 'post',
		        			params: {
		        				V_TYPE: 'IU',
		        				V_IV_NO: Ext.getCmp('V_IV_NO').getValue(),
		            			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
		        				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
		        				V_IV_DT : Ext.getCmp('V_IV_DT').getValue(),
		        				V_IV_TYPE : Ext.getCmp('V_IV_TYPE').getValue(),
		        				V_M_BP_CD2 : Ext.getCmp('V_M_BP_CD2').getValue(),
		        				V_T_BP_CD : Ext.getCmp('V_T_BP_CD').getValue(),
		        				V_IV_ISSUE_DT : Ext.getCmp('V_IV_ISSUE_DT').getValue(),
		        				V_CUR : Ext.getCmp('V_CUR').getValue(),
		        				V_XCHG_RT : Ext.getCmp('V_XCHG_RT').getValue(),
		        				V_BL_DOC_NO : Ext.getCmp('V_BL_DOC_NO').getValue(),
		        				V_TAX_CD : Ext.getCmp('V_TAX_CD').getValue(),
		        				V_PAY_METH : Ext.getCmp('V_PAY_METH').getValue(),
		        				V_IN_TERMS : Ext.getCmp('V_IN_TERMS').getValue(),
		        				V_ELEC_VAT_YN : rb1[0].getGroupValue(),
		        			},
		        			success: function(response) {
		        				var res = response.responseText;
		        				
		        				store1.each(function(record, idx) {
		        					if(record.get('V_TYPE') != 'I') record.set('V_TYPE', 'U');
		        				});
		        				
		        				if(!res.match('Exception')) {
		        					Ext.getCmp('V_IV_NO').setValue(res);
		        					
		        					store1.sync({ 
		        						params : {
		        							V_TYPE : 'SYNC',
		        							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
		        							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
		        							V_IV_NO : Ext.getCmp('V_IV_NO').getValue()
		        						},
		        						callback : function(records, operation, success) {
		        				    		var tbController = M_IV_DISTR.app.getController("TbButtonController");
		        				    		tbController.selBtnClick();
		        						}, 
		        						success: function() {
		        							
		        						}
		        					});
		        				} else {
		        					Ext.Msg.alert('확인', res);
		        				}
		        			}
		            	});
		    		}
			}
    	});
    	} else {
    		Ext.Msg.alert('확인', msg);
    	}
	},
	
	tempGlCfmBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';
		
		if (Ext.getCmp('V_IV_NO').getValue() == '' || Ext.getCmp('V_IV_NO').getValue() == null) {
			flag = 'F';
			msg = '매입번호를 입력하세요.';
		} else {
			flag = 'T';
		}
		
		if (flag == 'T') {
			var selModel1 = Ext.getCmp('myGrid1').getSelectionModel();
			selModel1.selectAll();
			
			Ext.Msg.confirm('확인', '전표를 생성하시겠습니까?', function(button) {
				if (button == 'yes') {
					
					var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
					var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
					
					Ext.Ajax.request({
						url : 'sql/M_IV_DISTR.jsp',
						method : 'post',
						params: {
							V_TYPE: 'I',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GEMP_NO').getValue(),
							V_IV_NO : Ext.getCmp('V_IV_NO').getValue(),
						},
						success: function(response) {
							try{
						    	var jsonResult = Ext.JSON.decode(response.responseText);
						    	var tryCnt = jsonResult.tryCnt;
	    						var finCnt = jsonResult.finCnt;
	    						var resMSG = jsonResult.resMSG;
	    						var resDATE = jsonResult.resDATE;
	    						var resString = jsonResult.resString;
						    
	    						if(resMSG == 'SUCCESS') {
	    							var tbController = M_IV_DISTR.app.getController("TbButtonController");
	    							tbController.selBtnClick();
									
	    							Ext.toast({
										title : ' ',
										timeout : 1000,
										html : '전표생성완료',
										style : 'text-align: center',
										align : 't',
										width : 130,
									});
	    						} else {
	    							Ext.Msg.alert('확인', '전표생성실패<br>' + resString);
	    						}
							}
							catch (e){
								Ext.Msg.alert('확인', '전표생성실패<br>' + response.responseText);
							}

							
							
						}
					})
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}
		
	},
	tempGlCancelBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';
		
		if (Ext.getCmp('V_IV_NO').getValue() == '' || Ext.getCmp('V_IV_NO').getValue() == null) {
			flag = 'F';
			msg = '매입번호를 입력하세요.';
		} else {
			flag = 'T';
		}
		
		if (flag == 'T') {
			var selModel1 = Ext.getCmp('myGrid1').getSelectionModel();
			selModel1.selectAll();
			
			Ext.Msg.confirm('확인', '전표를 취소하시겠습니까?', function(button) {
				if (button == 'yes') {
					
					var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
					var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
					
					Ext.Ajax.request({
						url : 'sql/M_IV_DISTR.jsp',
						method : 'post',
						params: {
							V_TYPE: 'D',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GEMP_NO').getValue(),
							V_IV_NO : Ext.getCmp('V_IV_NO').getValue(),
						},
						success: function(response) {
							
							var jsonResult = Ext.JSON.decode(response.responseText);
					    	var tryCnt = jsonResult.tryCnt;
    						var finCnt = jsonResult.finCnt;
    						var resMSG = jsonResult.resMSG;
    						var resDATE = jsonResult.resDATE;
    						var resString = jsonResult.resString;
    						
    						if(resMSG == 'SUCCESS') {
    							var tbController = M_IV_DISTR.app.getController("TbButtonController");
    							tbController.selBtnClick();
    							
    							Ext.toast({
									title : ' ',
									timeout : 1000,
									html : '전표취소완료',
									style : 'text-align: center',
									align : 't',
									width : 130,
								});
    						} else {
    							Ext.Msg.alert('확인', '전표취소실패<br>' + resString);
    						}
							
							
						}
					})
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}
		
	},

});
