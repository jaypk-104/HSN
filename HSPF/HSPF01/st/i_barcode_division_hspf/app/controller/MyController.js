/*
 * File: app/controller/MyController.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('I_BARCODE_DIVISION_HSPF.controller.MyController', {
    extend: 'Ext.app.Controller',

    onLaunch: function(application) {
    	
//    	function gridSpan(grid, rowOrCol, cols, sepCol){  
//    	    var array1 = new Array();  
//    	    var arraySep = new Array();  
//    	    var count1 = 0;  
//    	    var count2 = 0;  
//    	    var index1 = 0;  
//    	    var index2 = 0;  
//    	    var aRow = undefined;  
//    	    var preValue = undefined;  
//    	    var firstSameCell = 0;  
//    	    var allRecs = grid.getStore().getRange();  
//    	    console.log(grid.getView().getHeaderCt().getGridColumns()[5].dataIndex);
//    	    if(rowOrCol == "row"){  
//    	        count1 = grid.getView().getHeaderCt().getGridColumns().length;
//    	        count2 = grid.getStore().getCount();  
//    	    } else {  
//    	        count1 = grid.getStore().getCount();  
//    	        count2 = grid.getView().getHeaderCt().getGridColumns().length; 
//    	    }  
//    	    for(i = 0; i < count1; i++){  
//    	        if(rowOrCol == "row"){  
//    	            var curColName = grid.getView().getHeaderCt().getGridColumns()[i].dataIndex;  
//    	            var curCol = "[" + curColName + "]";  
//    	            if(cols.indexOf(curCol) < 0)  
//    	            continue;  
//    	        }  
//    	        preValue = undefined;  
//    	        firstSameCell = 0;  
//    	        array1[i] = new Array();  
//    	        for(j = 0; j < count2; j++){  
//    	            if(rowOrCol == "row"){  
//    	                index1 = j;  
//    	                index2 = i;  
//    	            } else {  
//    	                index1 = i;  
//    	                index2 = j;  
//    	            }  
//    	            var colName = grid.getColumnModel().getDataIndex(index2);  
//    	            if(sepCol && colName == sepCol)  
//    	            arraySep[index1] = allRecs[index1].get(sepCol);  
//    	            var seqOldValue = seqCurValue = "1";  
//    	            if(sepCol && index1 > 0){  
//    	                seqOldValue = arraySep[index1 - 1];  
//    	                seqCurValue = arraySep[index1];  
//    	            }  
//    	               
//    	            if(allRecs[index1].get(colName) == preValue && (colName == sepCol || seqOldValue == seqCurValue)){  
////    	                 alert(colName + "======" + seqOldValue + "======" + seqCurValue);  
//    	                 allRecs[index1].set(colName, "");  
//    	                 array1[i].push(j);  
//    	                 if(j == count2 - 1){  
//    	                     var index = firstSameCell + Math.round((j + 1 - firstSameCell) / 2 - 1);  
//    	                     if(rowOrCol == "row"){  
//    	                         allRecs[index].set(colName, preValue);  
//    	                       } else {  
//    	                           allRecs[index1].set(grid.getColumnModel().getColumnId(index), preValue);  
//    	                       }  
//    	                   }  
//    	               } else {  
//    	                   if(j != 0){  
//    	                       var index = firstSameCell + Math.round((j + 1 - firstSameCell) / 2 - 1);  
//    	                       if(rowOrCol == "row"){  
//    	                           allRecs[index].set(colName, preValue);  
//    	                       } else {  
//    	                           allRecs[index1].set(grid.getColumnModel().getColumnId(index), preValue);  
//    	                    }  
//    	                   }  
//    	               firstSameCell = j;  
//    	               preValue = allRecs[index1].get(colName);  
//    	               allRecs[index1].set(colName, "");  
//    	               if(j == count2 - 1){  
//    	                   allRecs[index1].set(colName, preValue);  
//    	               }  
//    	           }  
//    	        }  
//    	    }  
//    	    grid.getStore().commitChanges();  
//    	    //添加所有分隔线  
//    	    var rCount = grid.getStore().getCount();  
//    	    for(i = 0; i < rCount; i ++){  
//    	        for(j = 0; j < grid.getView().getHeaderCt().getGridColumns().length; j ++){  
//    	               aRow = grid.getView().getCell(i,j);  
//    	             if(i == 0){  
//    	                 aRow.style.borderTop = "none";  
//    	                 aRow.style.borderLeft = "1px solid #ccc";  
//    	             }else if(i == rCount - 1){  
//    	                 aRow.style.borderTop = "1px solid #ccc";  
//    	                 aRow.style.borderLeft = "1px solid #ccc";  
//    	                aRow.style.borderBottom = "1px solid #ccc";  
//    	             }else{  
//    	                 aRow.style.borderTop = "1px solid #ccc";  
//    	                 aRow.style.borderLeft = "1px solid #ccc";  
//    	             }  
//    	             if(j == grid.getView().getHeaderCt().getGridColumns().length-1)  
//    	                 aRow.style.borderRight = "1px solid #ccc";  
//    	            if(i == rCount-1)       
//    	             aRow.style.borderBottom = "1px solid #ccc";  
//    	           }  
//    	       }  
//    	       //去除合并的单元格的分隔线  
//    	       for(i = 0; i < array1.length; i++){  
//    	           if(!Ext.isEmpty(array1[i])){  
//    	               for(j = 0; j < array1[i].length; j++){  
//    	                   if(rowOrCol == "row"){  
//    	                       aRow = grid.getView().getCell(array1[i][j],i);  
//    	                       aRow.style.borderTop = "none";  
//    	                   } else {  
//    	                       aRow = grid.getView().getCell(i, array1[i][j]);  
//    	                       aRow.style.borderLeft = "none";  
//    	                   }  
//    	               }  
//    	           }  
//    	       }  
//    	}  
//    	
//    	var grid = Ext.getCmp('myGrid');
//    	var store = grid.getStore();
//    	store.on("load",function(){gridSpan(grid,"row","[wd],[topic],[target],[measure],[plan]");});  
    },
    
});
