/*
 * File: app/controller/TbButtonController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_PO_TOT_MGM.controller.TbButtonController', {
    extend: 'Ext.app.Controller',
    stores: ['MyStore', 'MyStore1','Popup.store.WinBpPopStore', 'PoBaseInfoStore'],
    control: {
        "#selBtn": {
            click: 'selBtnClick'
        },
        "#saveBtn": {
            click: 'saveBtnClick'
        },
        "#delBtn": {
            click: 'delBtnClick'
        },
        "#clrBtn": {
            click: 'clrBtnClick'
        },
        "#clsBtn": {
        	click: 'clsBtnClick'
        },
        "#w_selBtn": {
        	click: 'w_selBtnClick'
        },
		"#popgrid" : {
			celldblclick : 'cellDblClick'
		},
		"#poRefBtn": {
			click: 'poRefBtnClick'
		},
    },

    w_selBtnClick: function(button, e, eOpts) {
    	var store1 = Ext.getStore('MyStore1');
    	store1.removeAll();
    	
    	store1.load({
    		params: {
    			V_TYPE: 'SP',
    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    			W_PO_DT_FR : Ext.getCmp('W_PO_DT_FR').getValue(),
    			W_PO_DT_TO : Ext.getCmp('W_PO_DT_TO').getValue(),
    			W_M_BP_NM : Ext.getCmp('W_M_BP_NM').getValue()
    		},
    		callback: function(records,operations,success){
    			
    		}
    	});
    	
    },
    selBtnClick: function(button, e, eOpts) {
    	if( Ext.getCmp('V_MAST_PO_NO').getValue() == '') {
    		Ext.Msg.alert('확인', '발주번호를 입력하세요.');
    	} else {
    		Ext.Ajax.request({
    			url:'sql/M_PO_TOT_MGM.jsp',
    			method: 'post',
    			params: {
    				V_TYPE: 'SH',
        			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
        			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    				V_MAST_PO_NO: Ext.getCmp('V_MAST_PO_NO').getValue(),
    			},
    			callback : function(records,operations,success){
    				
    		    },
    		    success : function(response) {
    		    	var jsonResult = Ext.JSON.decode(response.responseText);
    		    	
    		    	if (jsonResult.resultList.length > 0) {
    		    		var PO_TYPE = jsonResult.resultList[0].PO_TYPE;
    		    		var PO_DT = jsonResult.resultList[0].PO_DT;
    		    		var CUR = jsonResult.resultList[0].CUR;
    		    		var XCH_RATE = jsonResult.resultList[0].XCH_RATE;
    		    		var IN_TERMS = jsonResult.resultList[0].IN_TERMS;
    		    		var PAY_METH = jsonResult.resultList[0].PAY_METH;
    		    		var VAT_TYPE = jsonResult.resultList[0].VAT_TYPE;
    		    		var GR_TYPE = jsonResult.resultList[0].GR_TYPE;
    		    		var DLV_TYPE = jsonResult.resultList[0].DLV_TYPE;
    		    		var BP_CD = jsonResult.resultList[0].BP_CD;
    		    		var BP_NM = jsonResult.resultList[0].BP_NM;
    		    		var S_BP_CD = jsonResult.resultList[0].S_BP_CD;
    		    		var S_BP_NM = jsonResult.resultList[0].S_BP_NM;
    		    		var REMARK = jsonResult.resultList[0].REMARK;
    		    		var SYS_TYPE = jsonResult.resultList[0].SYS_TYPE;
    		    		var S_BP_CD = jsonResult.resultList[0].S_BP_CD;
    		    		var PO_CFM = jsonResult.resultList[0].PO_CFM;
    		    		var TRANS_TYPE = jsonResult.resultList[0].TRANS_TYPE;
    		    		var DISCHGE_PORT = jsonResult.resultList[0].DISCHGE_PORT;

    		    		Ext.getCmp('V_M_BP_NM').setValue(BP_NM);
    					Ext.getCmp('V_M_BP_CD').setValue(BP_CD);
    			    	Ext.getCmp('V_PO_TYPE').setValue(PO_TYPE);
    					Ext.getCmp('V_PO_DT').setValue(PO_DT);
    					Ext.getCmp('V_CUR').setValue(CUR);
    					Ext.getCmp('V_XCHG_RATE').setValue(XCH_RATE)
    					Ext.getCmp('V_IN_TERMS').setValue(IN_TERMS);
    					Ext.getCmp('V_PAY_METH').setValue(PAY_METH);
    					Ext.getCmp('V_VAT_TYPE').setValue(VAT_TYPE);
    					Ext.getCmp('V_DLV_TYPE').setValue(DLV_TYPE);
    					Ext.getCmp('V_GR_TYPE').setValue(GR_TYPE);
    					Ext.getCmp('V_S_BP_NM').setValue(S_BP_NM);
    					Ext.getCmp('V_S_BP_CD').setValue(S_BP_CD);
    					Ext.getCmp('V_REMARK').setValue(REMARK);
    					Ext.getCmp('V_SYS_TYPE').setValue(SYS_TYPE);
    					Ext.getCmp('V_PO_CFM').setValue(PO_CFM);
    					Ext.getCmp('V_TRANS_TYPE').setValue(TRANS_TYPE);
    					Ext.getCmp('V_DISCHGE_PORT').setValue(DISCHGE_PORT);
    					
    					if(PO_CFM == 'Y') {
    						Ext.getCmp('V_PO_TYPE').setDisabled(true);
    						Ext.getCmp('V_PO_DT').setDisabled(true);
    						Ext.getCmp('V_CUR').setDisabled(true);
    						Ext.getCmp('V_XCHG_RATE').setDisabled(true);
    						Ext.getCmp('V_IN_TERMS').setDisabled(true);
    						Ext.getCmp('V_PAY_METH').setDisabled(true);
    						Ext.getCmp('V_VAT_TYPE').setDisabled(true);
    						Ext.getCmp('V_DLV_TYPE').setDisabled(true);
    						Ext.getCmp('V_GR_TYPE').setDisabled(true);
    						Ext.getCmp('V_M_BP_CD').setDisabled(true);
    						Ext.getCmp('V_M_BP_NM').setDisabled(true);
    						Ext.getCmp('V_S_BP_CD').setDisabled(true);
    						Ext.getCmp('V_S_BP_NM').setDisabled(true);
    						Ext.getCmp('V_REMARK').setDisabled(true);
    						Ext.getCmp('V_SYS_TYPE').setDisabled(true);
    						Ext.getCmp('V_PO_CFM').setDisabled(true);
    						Ext.getCmp('V_PO_CFM').setStyle('background-color','#6ddb6f');
    						Ext.getCmp('V_TRANS_TYPE').setDisabled(true);
    						Ext.getCmp('V_DISCHGE_PORT').setDisabled(true);
    						
    						
    						Ext.getCmp('saveBtn').setDisabled(true);
    						Ext.getCmp('delBtn').setDisabled(true);
    						Ext.getCmp('gridAddBtn').setDisabled(true);
    						Ext.getCmp('gridDelBtn').setDisabled(true);
    						Ext.getCmp('gridSaveBtn').setDisabled(true);
    						Ext.getCmp('poRefBtn').setDisabled(true);
    						
    						Ext.getCmp('remarkChgBtn').show();
    						
    						
    						
    					} else {
    						Ext.getCmp('V_PO_TYPE').setDisabled(false);
    						Ext.getCmp('V_PO_DT').setDisabled(false);
    						Ext.getCmp('V_CUR').setDisabled(false);
    						Ext.getCmp('V_XCHG_RATE').setDisabled(false);
    						Ext.getCmp('V_IN_TERMS').setDisabled(false);
    						Ext.getCmp('V_PAY_METH').setDisabled(false);
    						Ext.getCmp('V_VAT_TYPE').setDisabled(false);
    						Ext.getCmp('V_DLV_TYPE').setDisabled(false);
    						Ext.getCmp('V_GR_TYPE').setDisabled(false);
    						Ext.getCmp('V_M_BP_CD').setDisabled(false);
    						Ext.getCmp('V_M_BP_NM').setDisabled(false);
    						Ext.getCmp('V_S_BP_CD').setDisabled(false);
    						Ext.getCmp('V_S_BP_NM').setDisabled(false);
    						Ext.getCmp('V_REMARK').setDisabled(false);
    						Ext.getCmp('V_SYS_TYPE').setDisabled(false);
    						Ext.getCmp('V_PO_CFM').setDisabled(false); 
    						Ext.getCmp('V_PO_CFM').setStyle('background-color','#fc8080');
    						Ext.getCmp('V_TRANS_TYPE').setDisabled(false);
    						Ext.getCmp('V_DISCHGE_PORT').setDisabled(false);
    						
    						Ext.getCmp('saveBtn').setDisabled(false);
    						Ext.getCmp('delBtn').setDisabled(false);
    						Ext.getCmp('gridAddBtn').setDisabled(false);
    						Ext.getCmp('gridDelBtn').setDisabled(false);
    						Ext.getCmp('gridSaveBtn').setDisabled(false);
    						Ext.getCmp('poRefBtn').setDisabled(false);
    						
    						Ext.getCmp('remarkChgBtn').hide();
    					}
    		    	}
    		    	
    		    	var store = this.getMyStoreStore();
    	    		store.removeAll();

	    			store.load({
    	        		params: {
    	        			V_TYPE: 'S',
    	        			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    	        			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    	        			V_MAST_PO_NO : Ext.getCmp('V_MAST_PO_NO').getValue()
    	        		},
    	        		callback: function(records,operations,success){
    	        			
    	        		}
    	    		});
    		    },
    			scope: this
    		});
    	}
    },

    saveBtnClick: function() {
        var store = Ext.getStore('MyStore');
        var grid= Ext.getCmp('myGrid');
        var gridRecord = 'temp';
        
        var checkField = {};
        checkField['V_M_BP_CD'] = '공급사';
        checkField['V_PO_TYPE'] = '발주유형';
        checkField['V_PO_DT'] = '발주일자';
        checkField['V_CUR'] = '화폐단위';
        checkField['V_XCHG_RATE'] = '환율';
        checkField['V_IN_TERMS'] = '가격조건';
        checkField['V_PAY_METH'] = '결제방법';
        checkField['V_VAT_TYPE'] = '부가세유형';
        checkField['V_DLV_TYPE'] = '입고구분';
        checkField['V_GR_TYPE'] = '입고단위';
        checkField['V_SYS_TYPE'] = '시스템구분';
        checkField['V_TRANS_TYPE'] = '운송방법';
        checkField['V_DISCHGE_PORT'] = '도착항';
//        checkField['V_REMARK'] = '비고';
        
        var validationFields = ['ITEM_CD', 'PO_PRC', 'HOPE_SL_CD',  'PO_QTY1', 'PO_QTY2', 'PO_QTY3', 'PO_QTY4', 'PO_QTY5']; // 그리드 필수 컬럼
        
        var flag = 'T';
        var msg = '필수항목이 누락되었습니다.<br>';
        
        store.each(function(rec,idx) {
    		if(rec.phantom == true) {
    			rec.set('V_TYPE','I');
    			
    			//그리드 필수값 체크
        		let invalidFields = '';
        		for(var i=0; i<validationFields.length; i++){
        			let validationField = rec.get(validationFields[i]);
        			
        			if((validationFields[i] == 'PO_QTY1' && !!!rec.get('DLVY_HOPE_DT1'))
        				||(validationFields[i] == 'PO_QTY2' && !!!rec.get('DLVY_HOPE_DT2'))
        				|| (validationFields[i] == 'PO_QTY3' && !!!rec.get('DLVY_HOPE_DT3'))
        				|| (validationFields[i] == 'PO_QTY4' && !!!rec.get('DLVY_HOPE_DT4'))
        				|| (validationFields[i] == 'PO_QTY5' && !!!rec.get('DLVY_HOPE_DT5'))){
        				continue;
        			}
        			
        			if(!!!validationField){
        				if(validationFields[i] == 'PO_QTY1'){
        					rec.set('DLVY_HOPE_DT1', '');
                		} else if(validationFields[i] == 'PO_QTY2'){
                			rec.set('DLVY_HOPE_DT2', '');
                		} else if(validationFields[i] == 'PO_QTY3'){
                			rec.set('DLVY_HOPE_DT3', '');
                		} else if(validationFields[i] == 'PO_QTY4'){
                			rec.set('DLVY_HOPE_DT4', '');
                		} else if(validationFields[i] == 'PO_QTY5'){
                			rec.set('DLVY_HOPE_DT5', '');
                		} else {
                			let colFullTxt = grid.getColumnManager().getHeaderByDataIndex(validationFields[i]).text;
            				let colTxt = colFullTxt.substring(colFullTxt.lastIndexOf('>')+1, colFullTxt.length); 
            				flag = 'F';
            				invalidFields += colTxt+',';
                		}
        			}
        		}
        		
        		if(invalidFields != '') msg += '<br>' + (idx+1) + '행: ' + invalidFields.substring(0, invalidFields.length-1);
        		
    		} else {
    			rec.set('V_TYPE','U');
    		}
    	});
       
        for(var key in checkField){
        	if(Ext.getCmp(key).getValue() == null  || Ext.getCmp(key).getValue() == undefined  || Ext.getCmp(key).getValue() == ''){
        		flag = 'F';
        		msg += checkField[key] + '를 확인해주세요';
        		break;
        	}
        }
        
        var h_check = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;
        
        if(h_check.test(Ext.getCmp('V_S_BP_CD').getValue())){
        	flag = 'F';
        	msg = '고객사 코드를 확인해주세요.(한글 입력 불가능)';
        } 
        if(h_check.test(Ext.getCmp('V_M_BP_CD').getValue())){
        	flag = 'F';
        	msg = '공급사 코드를 확인해주세요.(한글 입력 불가능)';
        }
        

    	if(flag == 'T') {
    		Ext.Msg.confirm('확인','저장하시겠습니까?', function(button){
    			if(button == 'yes') {
    				var V_TYPE = '';
    				if(Ext.getCmp('V_MAST_PO_NO').getValue() == '') {
    					V_TYPE = 'I'
    				} else {
    					V_TYPE = 'U'
    				}
    				
    				Ext.Ajax.request({
						url:'sql/M_PO_TOT_MGM.jsp',
						method: 'post',
						params: {
			    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
			    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
							V_TYPE: V_TYPE, //저장
							V_MAST_PO_NO: Ext.getCmp('V_MAST_PO_NO').getValue(),
							V_PO_TYPE: Ext.getCmp('V_PO_TYPE').getValue(),
							V_PO_DT: Ext.getCmp('V_PO_DT').getValue(),
							V_CUR: Ext.getCmp('V_CUR').getValue(),
							V_XCHG_RATE: Ext.getCmp('V_XCHG_RATE').getValue(),
							V_IN_TERMS: Ext.getCmp('V_IN_TERMS').getValue(),
							V_PAY_METH: Ext.getCmp('V_PAY_METH').getValue(),
							V_VAT_TYPE: Ext.getCmp('V_VAT_TYPE').getValue(),
							V_GR_TYPE: Ext.getCmp('V_GR_TYPE').getValue(),
							V_DLV_TYPE: Ext.getCmp('V_DLV_TYPE').getValue(),
							V_M_BP_CD: Ext.getCmp('V_M_BP_CD').getValue(),
							V_M_BP_NM: Ext.getCmp('V_M_BP_NM').getValue(),
							V_S_BP_CD: Ext.getCmp('V_S_BP_CD').getValue(),
							V_S_BP_NM: Ext.getCmp('V_S_BP_NM').getValue(),
							V_REMARK: Ext.getCmp('V_REMARK').getValue(),
							V_SYS_TYPE: Ext.getCmp('V_SYS_TYPE').getValue(),
							V_TRANS_TYPE: Ext.getCmp('V_TRANS_TYPE').getValue(),
							V_DISCHGE_PORT: Ext.getCmp('V_DISCHGE_PORT').getValue(),
						},
						callback : function(records,operations,success){
							
					    },
					    success : function(response) {
					    	var PO_NO = response.responseText;
					    	Ext.getCmp('V_MAST_PO_NO').setValue(PO_NO);
					    	
					    	store.each(function(rec, idx) {
					    		if(rec.phantom == true) {
					    			rec.set('V_TYPE', 'I');
					    		} else {
					    			rec.set('V_TYPE', 'U');
					    		}
					    	});
					    	
					    	store.sync({
		    					params: {
		    						V_TYPE : 'SYNC',
		    						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
		    						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
		    						V_MAST_PO_NO: Ext.getCmp('V_MAST_PO_NO').getValue(),
									V_VAT_TYPE: Ext.getCmp('V_VAT_TYPE').getValue(),
									V_S_BP_CD: Ext.getCmp('V_S_BP_CD').getValue(),
		    					},
		    		    		callback: function(records, operation, success) {
		    		    			var tbController = M_PO_TOT_MGM.app.getController("TbButtonController");
		    				    	tbController.selBtnClick();
		    					}
		    		    	});
					    },
						scope: this
					});
    				
    			}
    		});
    	}
    	else{
    		Ext.Msg.alert('확인', msg);
    	}
    },

    delBtnClick: function(button, e, eOpts) {
    	Ext.Ajax.request({
        	url : 'sql/M_PO_TOT_MGM.jsp',
        	method : 'post',
        	params : {
        		V_TYPE : 'DEL_CHECK',
        		V_MAST_PO_NO: Ext.getCmp('V_MAST_PO_NO').getValue(),
        		V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
        	},
        	success : function(response) {
        		var jResult = Ext.JSON.decode(response.responseText);
        		
        		var flag = jResult.resultList[0].DELETE_FLAG;
        		
        		if(flag == 'N'){
        			Ext.Msg.alert('확인', 'ASN이 생성되어 삭제 불가능합니다.');
        		}
        		else{
        			Ext.Msg.confirm('확인','전체삭제 하시겠습니까?', function(button){
        				if(button == 'yes') {
        					Ext.Ajax.request({
        						url:'sql/M_PO_TOT_MGM.jsp',
        						method: 'post',
        						params: {
        			    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
        			    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
        							V_TYPE: "D", //저장,
        							V_MAST_PO_NO: Ext.getCmp('V_MAST_PO_NO').getValue(),
        						},
        						callback : function(records,operations,success){
        							
        					    },
        					    success : function(response) {

        					    	var tbController = M_PO_TOT_MGM.app.getController("TbButtonController");
        					    	tbController.clrBtnClick();
        					    	
        					    }
        					});
        				}
        	    	});
        		}
        		
        	},
        	scope : this
        });
    	
    },
    clrBtnClick: function(button, e, eOpts) {
    	var store = Ext.getStore('MyStore');
    	store.removeAll();
    	
    	Ext.getCmp('V_MAST_PO_NO').setValue('');
    	Ext.getCmp('V_PO_TYPE').setValue('');
		Ext.getCmp('V_PO_DT').setValue(new Date());
		Ext.getCmp('V_CUR').setValue('');
		Ext.getCmp('V_IN_TERMS').setValue('');
		Ext.getCmp('V_PAY_METH').setValue('');
		Ext.getCmp('V_VAT_TYPE').setValue('');
		Ext.getCmp('V_GR_TYPE').setValue('');
		Ext.getCmp('V_DLV_TYPE').setValue('');
		Ext.getCmp('V_M_BP_CD').setValue('');
		Ext.getCmp('V_M_BP_NM').setValue('');
		Ext.getCmp('V_S_BP_NM').setValue('');
		Ext.getCmp('V_S_BP_CD').setValue('');
		Ext.getCmp('V_REMARK').setValue('');
		Ext.getCmp('V_SYS_TYPE').setValue('');
		Ext.getCmp('V_PO_CFM').setValue('');
		Ext.getCmp('V_PO_CFM').setStyle('background-color','#f6f6f6');
		Ext.getCmp('V_TRANS_TYPE').setValue('');
		Ext.getCmp('V_DISCHGE_PORT').setValue('');
		
		Ext.getCmp('V_XCHG_RATE').setValue('');
		

		Ext.getCmp('V_PO_TYPE').setDisabled(false);
		Ext.getCmp('V_PO_DT').setDisabled(false);
		Ext.getCmp('V_CUR').setDisabled(false);
		Ext.getCmp('V_XCHG_RATE').setDisabled(false);
		Ext.getCmp('V_IN_TERMS').setDisabled(false);
		Ext.getCmp('V_PAY_METH').setDisabled(false);
		Ext.getCmp('V_VAT_TYPE').setDisabled(false);
		Ext.getCmp('V_GR_TYPE').setDisabled(false);
		Ext.getCmp('V_DLV_TYPE').setDisabled(false);
		Ext.getCmp('V_M_BP_CD').setDisabled(false);
		Ext.getCmp('V_M_BP_NM').setDisabled(false);
		Ext.getCmp('V_S_BP_CD').setDisabled(false);
		Ext.getCmp('V_S_BP_NM').setDisabled(false);
		Ext.getCmp('V_REMARK').setDisabled(false);
		Ext.getCmp('V_SYS_TYPE').setDisabled(false);
		Ext.getCmp('V_PO_CFM').setDisabled(false); 
		Ext.getCmp('V_PO_CFM').setStyle('backgroundcolor','#fc8080');
		Ext.getCmp('V_TRANS_TYPE').setDisabled(false); 
		Ext.getCmp('V_DISCHGE_PORT').setDisabled(false); 
		
		Ext.getCmp('saveBtn').setDisabled(false);
		Ext.getCmp('delBtn').setDisabled(false);
		Ext.getCmp('gridAddBtn').setDisabled(false);
		Ext.getCmp('gridDelBtn').setDisabled(false);
		Ext.getCmp('gridSaveBtn').setDisabled(false);
		Ext.getCmp('poRefBtn').setDisabled(false);
    	
    },
    
    clsBtnClick: function(button, e, eOpts) {
		var tab = parent.Ext.getCmp('myTab');
		var activeTab = tab.getActiveTab();
		var tabIndex = tab.items.indexOf(activeTab);
		tab.remove(tabIndex, true);
	},

    tfEnter: function(field, e, eOpts) {
        	if (e.getKey() == e.ENTER) {
        		this.selBtnClick();
        	}
    },
    poRefBtnClick: function(button, e, eOpts) {
    	var refWindow = Ext.create("M_PO_TOT_MGM.view.RefWindow");
    	refWindow.show();
    },
    
    onLaunch: function(application) { 
    	var BPstore1 = Ext.getStore('WinMBpPopStore');
        BPstore1.load({
    		params: {
    			V_PARAM1: 'PO',
    		},
    		callback: function(records,operations,success){
    			
    		}
        });
        
        var BPstore2 = Ext.getStore('WinSBpPopStore');
        BPstore2.load();
        
        var ItemStore = Ext.getStore('ItemStore');
        ItemStore.load();
        
        var myFieldSet = Ext.getCmp('myFieldSet');
        myFieldSet.setWidth(Ext.getBody().getViewSize().width-30);
        
        var PoBaseInfoStore = Ext.getStore('PoBaseInfoStore');
        PoBaseInfoStore.load();
        
        
        
//        var store = Ext.getStore('MyStore');
//		var count = store.getCount();
//		var rowCount = 1;
		
//		for (var i = 0; i < rowCount; i++) {
//			count = count + 1;
//			var rec = Ext.create('M_PO_TOT_MGM.model.MyModel', {
//				ITEM_CD: 'BRTEST-0001',
//				ITEM_NM: 'TEST01',
//				SPEC: 'SPEC01',
//				UNIT: 'EA',
//				PO_PRC: 12,
//				HOPE_SL_CD: 'SL1',
//				
//				DLVY_HOPE_DT1: '2020-03-10',
//				PO_QTY1: 10,
//				PO_AMT1: 120,
//				
//				DLVY_HOPE_DT2: '2020-03-20',
//				PO_QTY2: 100,
//				PO_AMT2: 1200,
//				
//				DLVY_HOPE_DT3: '2020-03-27',
//				PO_QTY3: 1,
//				PO_AMT3: 1
//			});
//			var rec1 = Ext.create('M_PO_TOT_MGM.model.MyModel', {
//				ITEM_CD: 'BRTEST-0002',
//				ITEM_NM: 'TEST02',
//				SPEC: 'SPEC02',
//				UNIT: 'EA',
//				PO_PRC: 10,
//				HOPE_SL_CD: 'SL1',
//				
//				DLVY_HOPE_DT1: '2020-03-10',
//				PO_QTY1: 5,
//				PO_AMT1: 50,
//				
//				DLVY_HOPE_DT2: '2020-03-20',
//				PO_QTY2: 15,
//				PO_AMT2: 150,
//				
//				DLVY_HOPE_DT3: '2020-03-27',
//				PO_QTY3: 1,
//				PO_AMT3: 1
//			});
//			var rec2 = Ext.create('M_PO_TOT_MGM.model.MyModel', {
//				ITEM_CD: 'BRTEST003',
//				ITEM_NM: 'TEST03',
//				SPEC: 'SPEC03',
//				UNIT: 'EA',
//				PO_PRC: 10,
//				HOPE_SL_CD: 'SL1',
//				
//				DLVY_HOPE_DT1: '2020-03-10',
//				PO_QTY1: 7,
//				PO_AMT1: 70,
//				
//				DLVY_HOPE_DT2: '2020-03-20',
//				PO_QTY2: 775,
//				PO_AMT2: 770,
//
//				DLVY_HOPE_DT3: '2020-03-27',
//				PO_QTY3: 7,
//				PO_AMT3: 7
//			});
//			store.insert(0, rec);
//			store.insert(1, rec1);
//			store.insert(2, rec2);
//		}
    }

});
