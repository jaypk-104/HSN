/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('B_STORAGE_LOCATION_HSPF.view.MyGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.myGrid',

    requires: [
        'B_STORAGE_LOCATION_HSPF.view.MyGridViewModel',
        'B_STORAGE_LOCATION_HSPF.view.MyGridViewController',
        'Ext.view.Table',
        'Ext.grid.column.RowNumberer',
        'Ext.form.field.Text',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.RowEditing'
    ],

    config: {
        tbar: [
            {
                id: 'gridAddBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf055@FontAwesome',
                iconCls: 'grid-add-btn'
            },
            {
                id: 'gridDelBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf056@FontAwesome',
                iconCls: 'grid-del-btn'
            },
            {
                id: 'gridSaveBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf0c7@FontAwesome',
                iconCls: 'grid-save-btn'
            },
            {
                xtype: 'container',
                flex: 1
            },
            {
                xtype: 'button',
                glyph: 'xf1c3@FontAwesome',
                id: 'xlsxDown',
                cfg: {
                    type: 'excel07',
                    ext: 'xlsx'
                },
                iconCls: 'grid-excel-btn',
            	margin: '0 3 0 0',
            }
        ]
    },

    controller: 'myGrid',
    viewModel: {
        type: 'myGrid'
    },
    id: 'myGrid',
    style: '',
    bodyBorder: false,
    header: false,
    store: 'MyStore',

    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            text: 'V_TYPE'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 90,
            sortable: true,
            dataIndex: 'SL_CD',
            enableTextSelection: true,
            text: '창고코드',
            editor: {
                xtype: 'textfield',
                style: 'text-align:left',
                allowBlank: false,
                blankText: '필수 입력사항입니다.'
            },
            emptyCellText: '(입력)'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
            width: 100,
            sortable: true,
            dataIndex: 'SL_NM',
            enableTextSelection: true,
            text: '창고명',
            editor: {
                xtype: 'textfield',
                style: 'text-align:left',
                allowBlank: false,
                blankText: '필수 입력사항입니다.'
            },
            emptyCellText: '(입력)'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
            width: 100,
            sortable: true,
            dataIndex: 'SL_LOC',
            enableTextSelection: true,
            text: '창고위치',
            editor: {
                xtype: 'textfield',
                style: 'text-align:left',
                allowBlank: false,
                blankText: '필수 입력사항입니다.'
            },
            emptyCellText: '(입력)'
        }
    ],
    selModel: {
        selType: 'checkboxmodel',
        checkOnly: true,
        listeners: {
            select: 'onCheckboxModelSelect',
            deselect: 'onCheckboxModelDeselect'
        }
    },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        {
            ptype: 'cellediting',
            clicksToEdit: 1,
            listeners: {
            	edit: function(editor, context, eOpts) {
            		var selModel= Ext.getCmp('myGrid').getSelectionModel();
            		selModel.select(context.record, true);
            	},
            	beforeedit: function(editor, context, eOpts) {
            		if((context.record.phantom == false) 
	            		&& (context.field == 'SL_CD')) {
            			context.cancel = true;
            		} else {
            			context.cancel = false;
            		}
               }
            }
        }
    ]

});