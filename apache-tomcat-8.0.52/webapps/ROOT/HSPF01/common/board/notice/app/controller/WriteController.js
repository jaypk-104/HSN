/*
 * File: app/controller/WriteController.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('HSPF_BOARD.controller.WriteController', {
    extend: 'Ext.app.Controller',

    control: {
        "#regBtn": {
            click: 'regBtnClick'
        },
        "#returnBtn": {
            click: 'returnBtnClick'
        },
        "#fileAddBtn": {
            click: 'fileAddBtnClick'
        },
        "#fileDeleteBtn": {
            click: 'fileDeleteBtnClick'
        },
        "#fileGrid": {
            celldblclick: 'fileGridCellDblClick'
        }
    },

    regBtnClick: function(button, e, eOpts) {
        var store = this.getStore('MainStore');
        var fileStore = this.getStore('FileStore');
        var V_TYPE = '';

        if (Ext.getCmp('V_IDX_NUM').getValue() == undefined || Ext.getCmp('V_IDX_NUM').getValue() == '' || Ext.getCmp('V_IDX_NUM').getValue() == null){
            V_TYPE = 'I';
        }
        else{
            V_TYPE = 'U';
        }

        var errFlag = 0; //1이면 에러, 0이면 정상
        var errMsg = '';


        if(Ext.getCmp('V_WRITE_TITLE').getValue() == '' || Ext.getCmp('V_WRITE_TITLE').getValue() == null || Ext.getCmp('V_WRITE_TITLE').getValue() == undefined){
            errFlag = 1;
            errMsg = '제목을 입력해주세요.';
        }


        if(Ext.getCmp('V_WRITE_IMP_YN').getValue() == true && Ext.getCmp('V_WRITE_SHOW_DT_ALL').getValue() == false){
            if(Ext.getCmp('V_WRITE_SHOW_DT_FR').getValue() == null || Ext.getCmp('V_WRITE_SHOW_DT_FR').getValue() == undefined || Ext.getCmp('V_WRITE_SHOW_DT_FR').getValue() == ''){
                errFlag = 1;
                errMsg = '공지게시기간을 입력해주세요.';
            }
            if(Ext.getCmp('V_WRITE_SHOW_DT_TO').getValue() == null || Ext.getCmp('V_WRITE_SHOW_DT_TO').getValue() == undefined || Ext.getCmp('V_WRITE_SHOW_DT_TO').getValue() == ''){
                errFlag = 1;
                errMsg = '공지게시기간을 입력해주세요.';
            }
        }


        if(errFlag == 1){
            Ext.Msg.alert('확인', errMsg);
        }
        else{
            Ext.Msg.confirm('확인', '등록/저장 하시겠습니까?', function(btn) {
                if (btn == 'yes') {
                    Ext.Ajax.request({
                        url:'sql/board_mgm.jsp',
                        method: 'post',
                        params: {
                            V_COMP_ID : 'HSN',
                            V_TYPE: V_TYPE,
                            V_IDX_NUM : Ext.getCmp('V_IDX_NUM').getValue(),
                            V_WRITE_TITLE : Ext.getCmp('V_WRITE_TITLE').getValue(),
                            V_WRITE_CONTENT : Ext.getCmp('V_WRITE_CONTENT').getValue(),
                            V_WRITE_IMP_YN : Ext.getCmp('V_WRITE_IMP_YN').getValue(),
                            V_WRITE_SHOW_DT_ALL : Ext.getCmp('V_WRITE_SHOW_DT_ALL').getValue(),
                            V_WRITE_SHOW_DT_FR : Ext.getCmp('V_WRITE_SHOW_DT_FR').getValue(),
                            V_WRITE_SHOW_DT_TO : Ext.getCmp('V_WRITE_SHOW_DT_TO').getValue(),
                            V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
                        },

                        success : function(response) {
                            var jResult = Ext.JSON.decode(response.responseText);

                            fileStore.sync({
                                params:{
                                    V_TYPE : 'SYNC',
                                    V_IDX_NUM : jResult.resultList[0].IDX_NUM,
                                }
                            });


                            Ext.getCmp('list_container').show();
                            Ext.getCmp('board_container').hide();
                            Ext.getCmp('write_container').hide();

                            store.load({
                                params:{
                                    V_COMP_ID : 'HSN',
                                    V_TYPE : 'S',
                                    V_TITLE : '',
                                    V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
                                }
                            });

                        },
                        scope: this
                    });
                }
            });
        }
    },

    returnBtnClick: function(button, e, eOpts) {
        Ext.Msg.confirm('확인', '작성중인 내용은 저장되지 않습니다.<br>목록으로 되돌아가시겠습니까?', function(btn) {
            if (btn == 'yes') {
                Ext.getCmp('list_container').show();
                Ext.getCmp('board_container').hide();
                Ext.getCmp('write_container').hide();

                Ext.getCmp('list_container').setWidth(Ext.getBody().getViewSize().width);
                Ext.getCmp('list_container').setHeight(Ext.getBody().getViewSize().height);

                var store = this.getStore('MainStore');
                store.reload();
            }
        });
    },

    fileAddBtnClick: function(button, e, eOpts) {
        var window = Ext.create('HSPF_BOARD.view.MyWindow');
        window.show();
    },

    fileDeleteBtnClick: function(button, e, eOpts) {
        var store = this.getStore('FileStore');
        var record = Ext.getCmp('fileGrid').getSelectionModel().getSelection();

        for(var i = 0 ; i < record.length ; i ++){
            record[i].set('V_TYPE', 'D');
        }

        Ext.Msg.confirm('확인', '첨부파일 삭제 하시겠습니까?', function(btn) {
            if (btn == 'yes') {
                store.sync({
                    params:{
                        V_IDX_NUM : Ext.getCmp('V_IDX_NUM').getValue(),
                        V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
                    },
                    callback: function(){
                        for(var i = 0 ; i < record.length ; i ++){
                            store.remove(record[i]);
                        }
                    }

                });
            }
        });
    },

    fileGridCellDblClick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
        var V_FILE_NM = record.data['FILE_NM'];
        var V_FILE_NM_PC = record.data['FILE_NM_PC'];
        V_FILE_NM = encodeURI(V_FILE_NM);
        V_FILE_NM_PC = encodeURI(V_FILE_NM_PC);
        var myWin=new Ext.Window(
            {
                title : '파일다운로드',
                html : '<iframe name="xxx" border =0 src="sql/board_file.jsp?V_TYPE=DOWN&V_FILE_NM='+V_FILE_NM+'&V_FILE_NM_PC='+V_FILE_NM_PC+'" width="1%" height="1%"></iframe>',
                width :500,
                height:500
            });
        myWin.show();
        myWin.hide();
    }

});
