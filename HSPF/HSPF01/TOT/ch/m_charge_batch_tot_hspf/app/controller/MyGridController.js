/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_CHARGE_BATCH_TOT_HSPF.controller.MyGridController', {
	extend : 'Ext.app.Controller',
	stores : [ 'MyStore', 'MyStore1', 'MyStore2' ],
	control : {
		"#batchCfmBtn" : {
			click : 'batchCfmBtnClick'
		},
		"#batchCancelBtn" : {
			click : 'batchCancelBtnClick'
		},
		"#myGrid1" : {
			cellclick : 'myGrid1Click'
		},
		"#xlsxDown" : {
			click : 'xlsxDownClick'
		},
		"#xlsxDown1" : {
			click : 'xlsxDown1Click'
		}
	},

	batchCfmBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';

		if (gridRecord.length < 1) {
			flag = 'F';
			msg = '선택된 행이 없습니다.';
		} else if (!!!Ext.getCmp('V_TEMP_GL_DT').getValue()) {
			flag = 'F';
			msg = '전표일자를 입력하세요.';
		} else {
			flag = 'T'
		}

		if (flag == 'T') {
			Ext.Msg.confirm('확인', '전표를 생성하시겠습니까?', function(button) {
				if (button == 'yes') {
					
					for(var i=0; i<gridRecord.length; i++){
						gridRecord[i].set('V_TYPE', 'I');
					}
					
					store.sync({
						params : {
							V_TYPE : 'SYNC',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_TEMP_GL_DT : Ext.getCmp('V_TEMP_GL_DT').getValue(),
						},
						callback : function(records, operation, success) {
							var V_BATCH_NO = records.getOperations()[0]._response.responseText;
							Ext.Ajax.request({
								url : 'sql/M_CHARGE_BATCH_TOT_HSPF.jsp',
								method : 'post',
								params : {
									V_TYPE : 'ERP',
									U_TYPE : 'I',
									V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
									V_USR_ID : parent.Ext.getCmp('GEMP_NO').getValue(),
									V_TEMP_GL_DT : Ext.getCmp('V_TEMP_GL_DT').getValue(),
									V_BATCH_NO : V_BATCH_NO,
								},
								success : function(response) {
									try{
										var jsonResult = Ext.JSON.decode(response.responseText);
										// var tryCnt = jsonResult.tryCnt;
										// var finCnt = jsonResult.finCnt;
										 var resMSG = jsonResult.resMSG;
										// var resDATE = jsonResult.resDATE;
	//									var resString = jsonResult.resString;
										 var TEMP_GL_NO = jsonResult.TEMP_GL_NO;
	
										if (resMSG == 'SUCCESS') {
											Ext.getCmp('V_TEMP_GL_NO').setValue(TEMP_GL_NO);
											Ext.getCmp('myTab').setActiveTab(Ext.getCmp('myTab').items.items[1]);
											
											var tbController = M_CHARGE_BATCH_TOT_HSPF.app.getController("TbButtonController");
											tbController.selBtnClick();
	
											Ext.toast({
												title : ' ',
												timeout : 1000,
												html : '전표생성완료',
												style : 'text-align: center',
												align : 't',
												width : 130,
											});
										} else {
											Ext.Msg.alert('확인', '전표생성실패<br>' + resString);
										}
									}
									catch (e){
										Ext.Msg.alert('확인', '전표생성실패<br>' + response.responseText);
									}

								}
							});
						},
					});
					
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}
	},

	batchCancelBtnClick : function(button, e, eOpts) {
		var store1 = Ext.getStore('MyStore1');
		var gridRecord = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';

		if (gridRecord.length < 1) {
			flag = 'F';
			msg = '선택된 행이 없습니다.';
		} else {
			flag = 'T'
		}

		if (flag == 'T') {
			Ext.Msg.confirm('확인', '전표를 취소하시겠습니까?', function(button) {
				if (button == 'yes') {
					
					Ext.Ajax.request({
						url : 'sql/M_CHARGE_BATCH_TOT_HSPF.jsp',
						method : 'post',
						params : {
							V_TYPE : 'ERP',
							U_TYPE : 'D',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GEMP_NO').getValue(),
							V_BATCH_NO : gridRecord[0].get('BATCH_NO'),
							V_TEMP_GL_NO : gridRecord[0].get('TEMP_GL_NO'),
						},
						success : function(response) {
							var jsonResult = Ext.JSON.decode(response.responseText);
							// var tryCnt = jsonResult.tryCnt;
							// var finCnt = jsonResult.finCnt;
							 var resMSG = jsonResult.resMSG;
							// var resDATE = jsonResult.resDATE;
//							var resString = jsonResult.resString;

							if (resMSG == 'SUCCESS') {
								var store2 = Ext.getStore('MyStore2');
								store2.removeAll();
								
								var tbController = M_CHARGE_BATCH_TOT_HSPF.app.getController("TbButtonController");
								tbController.selBtnClick();

								Ext.toast({
									title : ' ',
									timeout : 1000,
									html : '전표취소완료',
									style : 'text-align: center',
									align : 't',
									width : 130,
								});
							} else {
								Ext.Msg.alert('확인', '전표취소실패<br>' + resString);
							}

						}
					});
					
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}
	},
	
	myGrid1Click : function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
		var store2 = Ext.getStore('MyStore2');
		store2.removeAll();

		store2.load({
			params : {
				V_TYPE : 'T2SD',
				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				V_TEMP_GL_NO : record.get('TEMP_GL_NO'),
				V_BATCH_NO : record.get('BATCH_NO'),
			},
			callback : function(records, operations, success) {
			}
		});

	},

	xlsxDownClick : function(button, e, eOpts) {
		var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
		var grid = Ext.getCmp('myGrid');
		grid.saveDocumentAs({
			type : 'xlsx',
			title : '전표일괄생성', // 엑셀내타이틀
			fileName : currentDate + '.xlsx' // 엑셀파일이름
		});
	},

	xlsxDown1Click : function(button, e, eOpts) {
		var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
		var grid = Ext.getCmp('myGrid1');
		grid.saveDocumentAs({
			type : 'xlsx',
			title : '전표일괄생성취소', // 엑셀내타이틀
			fileName : currentDate + '.xlsx' // 엑셀파일이름
		});
	},

});
