/*
 * File: app/view/MyGrid1.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_BL_MST_TOT_HSPF.view.MyGrid1', {
	extend : 'Ext.grid.Panel',
	alias : 'widget.mygrid1',

	requires : [ 
		'S_BL_MST_TOT_HSPF.view.MyGrid1ViewModel', 
		'Ext.view.Table', 
		'Ext.grid.column.RowNumberer', 
		'Ext.form.field.Text', 
		'Ext.grid.column.Number', 
		'Ext.selection.CheckboxModel', 
		'Ext.grid.plugin.Exporter', 
		'Ext.grid.plugin.CellEditing' ],

	config : {
		tbar : [ {
			id : 'gridAddBtn',
			text : '',
			margin : '0 3 0 0',
			glyph : 'xf055@FontAwesome',
			iconCls : 'grid-add-btn',
			disabled : true
		}, {
			id : 'gridDelBtn',
			text : '',
			margin : '0 3 0 0',
			glyph : 'xf056@FontAwesome',
			iconCls : 'grid-del-btn',
		}, {
			xtype : 'button',
			id : 'blRegBtn',
			margin : '0 3 0 0',
			text : 'B/L저장',
			style : 'background-color: white; border: 0.5px solid #3367d6;',
			cls : 'blue-btn',
		}, {
			xtype : 'button',
			id : 'blDocRegBtn',
			margin : '0 3 0 0',
			text : '선적서류저장',
			style : 'background-color: white; border: 0.5px solid #3367d6;',
			cls : 'blue-btn',
		}
		, {
			xtype : 'container',
			flex : 1
		},
        {
     	   xtype: 'textfield',
     	   id: 'V_TEMP_GL_NO',
     	   margin: '0 3 0 0',
     	   width: 150,
     	   emptyText: '전표번호',
     	   editable: false
        },
		{
			xtype : 'button',
			id : 'blCfmBtn',
			margin : '0 3 0 0',
			text : 'ERP전표생성',
			style : 'background-color: white; border: 0.5px solid #3367d6;',
			cls : 'blue-btn',
			//hidden: true,
			listeners : {
				mouseover : function(button, e, eOpts) {
					var theTip = Ext.create('Ext.tip.ToolTip', {
						html : 'ERP 결의전표 생성',
						target : 'blCfmBtn',
						showDelay : 0,
						mouseOffset : [ 5, 5 ],
						trackMouse : true,
						shadow : false
					});
				}
			}
		}, {
			xtype : 'button',
			id : 'blCancelBtn',
			margin : '0 3 0 0',
			text : 'ERP전표취소',
			style : 'background-color: white; border: 0.5px solid #3367d6;',
			cls : 'blue-btn',
			//hidden: true,
			listeners : {
				mouseover : function(button, e, eOpts) {
					var theTip = Ext.create('Ext.tip.ToolTip', {
						html : 'ERP 결의전표 삭제',
						target : 'blCancelBtn',
						showDelay : 0,
						mouseOffset : [ 5, 5 ],
						trackMouse : true,
						shadow : false
					});
				}
			}
		}, {
			xtype : 'button',
			glyph : 'xf1c3@FontAwesome',
			id : 'xlsxDown1',
			cfg : {
				type : 'excel07',
				ext : 'xlsx'
			},
			iconCls : 'grid-excel-btn',
			margin : '0 3 0 0',

		} ]
	},

	viewModel : {
		type : 'mygrid1'
	},
	id : 'myGrid1',
	style : 'border: 1px solid #659DDC; padding: 5px;',
	bodyBorder : false,
	header : false,
	store : 'MyStore1',
	columns : [ {
		xtype : 'rownumberer',
		width : 40
	}, {
		xtype : 'gridcolumn',
		hidden : true,
		text : 'V_TYPE'
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'BL_NO',
		text : 'BL_NO',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'BL_SEQ',
		text : 'BL_SEQ',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		sortable : true,
		dataIndex : 'ITEM_CD',
		enableTextSelection : true,
		text : '품목코드',
		width : 130
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		sortable : true,
		dataIndex : 'ITEM_NM',
		enableTextSelection : true,
		text : '품목명',
		width : 250
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		sortable : true,
		dataIndex : 'ED_DOC_NO',
		enableTextSelection : true,
		width : 150,
		text : '통관신고번호',
		editor : {
			xtype : 'textfield'
		}
	}, {
        xtype: 'datecolumn',
        style: 'text-align: center; font-weight: bold; color: #3367d6',
        width: 100,
        align: 'center',
        dataIndex: 'ED_DT',
        text: '통관신고일',
        format: 'Y-m-d',
        editor : {
			xtype : 'datefield',
			format : 'Y-m-d'
		},
    }, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		sortable : true,
		dataIndex : 'INVOICE_NO',
		enableTextSelection : true,
		width : 130,
		text : 'INVOICE NO',
		hidden: true,
//		editor : {
//			xtype : 'textfield'
//		}
	}, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;  color: #3367d6',
		text : '수량',
		format : '0,000.00',
		align : 'right',
		dataIndex : 'QTY',
		summaryType : 'sum',
		summaryRenderer : function(value, summaryData, dataIndex) {
			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
		},
		editor : {
			xtype : 'numberfield',
			format : '0,000.00',
			align : 'right'
		},
		exportStyle: {
  			 format : 'Qty',
  			 alignment: {
  				 horizontal: 'Right'
  			 },
       },
	}, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		text : '단가',
		dataIndex : 'PRICE',
		format : '0,000.00000',
		align : 'right',
		editor : {
			xtype : 'numberfield',
			format : '0,000.00000',
			decimalPrecision : 5,
			align : 'right'
		},
		exportStyle: {
  			 format : 'Price',
  			 alignment: {
  				 horizontal: 'Right'
  			 },
       },
	}, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		text : '금액',
		dataIndex : 'DOC_AMT',
		format : '0,000.00',
		align : 'right',
		summaryType : 'sum',
		summaryRenderer : function(value, summaryData, dataIndex) {
			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
		},
		width : 150,
		editor : {
			xtype : 'numberfield',
			format : '0,000.00',
			decimalPrecision : 2,
			align : 'right'
		},
		exportStyle: {
  			 format : 'Qty',
  			 alignment: {
  				 horizontal: 'Right'
  			 },
       },
	}, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		text : '자국금액',
		dataIndex : 'LOC_AMT',
		format : '0,000',
		align : 'right',
		summaryType : 'sum',
		summaryRenderer : function(value, summaryData, dataIndex) {
			return "<font color='green'>" + Ext.util.Format.number(value, '0,000') + "<font>";
		},
		width : 150,
		editor : {
			xtype : 'numberfield',
			format : '0,000',
			align : 'right'
		},
		exportStyle: {
  			 format : 'Number',
  			 alignment: {
  				 horizontal: 'Right'
  			 },
       },
	}, {
        xtype: 'gridcolumn',
        style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
        width: 180,
        dataIndex: 'VAT_TYPE',
        text: '부가세유형',
        renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
            if(Ext.data.StoreManager.lookup('storeVAT').findRecord('DTL_CD',value) !==null)
            {
                return Ext.data.StoreManager.lookup('storeVAT').findRecord('DTL_CD',value).get('DTL_NM');
            }
            return value;
        },
        exportRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
            if(Ext.data.StoreManager.lookup('storeVAT').findRecord('DTL_CD',value) !==null)
            {
                return Ext.data.StoreManager.lookup('storeVAT').findRecord('DTL_CD',value).get('DTL_NM');
            }
            return value;
        },
        editor: {
    		xtype: 'combobox',
    		displayField: 'DTL_NM',
    		autoLoadOnValue: true,
    		valueField: 'DTL_CD',
    		editable: false,
    		store: Ext.create('Ext.data.Store',{
    			autoLoad: true,
    			storeId: 'storeVAT',
    			proxy: {
    		           type: 'ajax',
    		           extraParams: {
    		        	   V_MAST_CD: 'VAT_RATE',
//    		            	V_MAST_CD: 'BA05',
    		            	V_GRID: 'Y'
    		           },	
    		           api: {
    		               read: '/HSPF01/common/sql/Combobox.jsp'
    		           },
    		           reader: {
    		               type: 'json',
    		               rootProperty: 'resultList'
    		           }
    		       }
    		}),
    		listConfig: {
                itemTpl: [
                    '<div>{DTL_NM} ({DTL_CD})</div>'
                ]
            },
    	}
    }, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		text : '부가세금액',
		dataIndex : 'VAT_AMT',
		format : '0,000',
		align : 'right',
		value: 0,
		summaryType : 'sum',
		summaryRenderer : function(value, summaryData, dataIndex) {
			return "<font color='green'>" + Ext.util.Format.number(value, '0,000') + "<font>";
		},
		width : 130,
		editor : {
			xtype : 'numberfield',
			format : '0,000',
			align : 'right'
		},
		exportStyle: {
  			 format : 'Number',
  			 alignment: {
  				 horizontal: 'Right'
  			 },
       },
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'DN_NO',
		text : 'DN_NO',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'DN_SEQ',
		text : 'DN_SEQ',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		sortable : true,
		dataIndex : 'CONT_NO',
		enableTextSelection : true,
		width : 150,
		text : '컨테이너번호',
		editor : {
			xtype : 'textfield'
		}
	}, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		text : '컨테이너수량',
		format : '0,000.00',
		dataIndex : 'CONT_QTY',
		align : 'right',
		width : 110,
		editor : {
			xtype : 'numberfield',
			format : '0,000.00',
			align : 'right'
		},
		summaryType : 'sum',
		summaryRenderer : function(value, summaryData, dataIndex) {
			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
		},
		exportStyle: {
  			 format : 'Qty',
  			 alignment: {
  				 horizontal: 'Right'
  			 },
       },
	}, ],
	selModel : {
		selType : 'checkboxmodel',
		checkOnly : true,
		listeners : {
			select : function(rowmodel, record, index, eOpts) {
				record.set('V_TYPE', 'V');
			},
			deselect : function(rowmodel, record, index, eOpts) {
				record.set('V_TYPE', '');
			}
		}
	},
	plugins : [ {
		ptype : 'gridexporter'
	}, {
        ptype: 'clipboard',
    }, {
		ptype : 'cellediting',
		listeners : {
			edit : function(editor, context, eOpts) {
				var PRICE = Number(context.record.data.PRICE);
				var QTY = Number(context.record.data.QTY);
				var DOC_AMT = Number(context.record.data.DOC_AMT);
				var XCH_RATE = Ext.getCmp('V_XCHG_RT').getValue();
				var store1 = Ext.getStore('MyStore1');
				var vatType = context.record.data.VAT_TYPE;

				if (context.column.dataIndex == 'QTY' || context.column.dataIndex == 'PRICE' 
					|| context.column.dataIndex == 'DOC_AMT' || context.column.dataIndex == 'VAT_TYPE') {
					
					if(context.column.dataIndex != 'VAT_TYPE'){
						var PRICE2 = (PRICE * 100000).toFixed(0) / 100000;
						var QTY2 = (QTY * 100).toFixed(0) / 100;
						var XCH_RATE2 = (XCH_RATE * 100).toFixed(0) / 100;
						
						if(context.column.dataIndex == 'QTY' || context.column.dataIndex == 'PRICE'){
							context.record.set('DOC_AMT', Math.round(PRICE2 * QTY2 * 100) / 100);
						}
						context.record.set('LOC_AMT', (context.record.get('DOC_AMT') * XCH_RATE2).toFixed(0));
						
						// 원화차이 정리
						var totalDocAmt = 0;
						var totalLocAmt = 0;
						var totalCalcLocAmt = 0;
						store1.each(function(record, idx) {
							totalDocAmt = Math.round((totalDocAmt+record.get('DOC_AMT'))*100)/100;
							totalLocAmt += record.get('LOC_AMT');
						});
						totalCalcLocAmt = Math.floor(totalDocAmt * XCH_RATE2);
						
						var diffAmt = totalCalcLocAmt-totalLocAmt;
						var diff = Number((diffAmt / store1.data.length).toFixed(0));
						var mod = diffAmt % store1.data.length;
						
						if(Math.abs(diffAmt / store1.data.length) < 1){
							diff = 0;
						}
						
						if(diffAmt != 0){
							store1.each(function(record, idx) {
								record.set('LOC_AMT', record.get('LOC_AMT')+diff);
								if(idx === 0 ) record.set('LOC_AMT', record.get('LOC_AMT')+mod);
							});
						}
					}
					
					// 부가세금액 자동계산
					var storeVAT = Ext.getStore('storeVAT');
            		var match = storeVAT.findBy(function(record,id) {
            	        if(record.get('DTL_CD') == vatType) {
            	            return true;
            	        }
            	    });
            		
            		var vatRecord = storeVAT.getData().getAt(match);
            		var VAT_RATE = vatRecord.get('VAT_RATE');
            		var LOC_AMT = context.record.data.LOC_AMT;
            		var VAT_AMT = 0;
        			if(LOC_AMT > 0 && VAT_RATE > 0){
        				VAT_AMT = Math.floor(LOC_AMT * VAT_RATE / 100); 
        			}
        			context.record.set('VAT_AMT', VAT_AMT);
				}
			}, afteredit : function(e) {
				var record = e.grid.getSelection()[0];
				var field = e.context.field;
				var val = e.context.value;
				var store = Ext.getStore('MyStore1');
				
				store.each(function(rec, idx) {
            		if(!!!rec.get(field) && (field == 'ED_DOC_NO' || field == 'ED_DT' || field == 'INVOICE_NO')) {
						rec.set(field, val);
					}
            	});
			},
		}
	} ],
	viewConfig : {
		enableTextSelection : true,
	},
    features : [ {
		ftype : 'summary',
		dock : 'bottom'
	} ],
	listeners:
    {
    	cellkeydown: function(cell, td, cellIndex, record, tr, rowIndex, e, eOpts ) {
    		var pastedColumn = cell.getColumnManager().columns[cellIndex].dataIndex;
            if (e.ctrlKey && e.getKey() == e.V && pastedColumn == 'PRICE'){
            	var task = new Ext.util.DelayedTask(function(){
            		var myGridController = S_BL_MST_TOT_HSPF.app.getController("MyGridController1");
            		myGridController.syncItem();
            	});

            	task.delay(1000);
            }
        }
    }
});