/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SAMPLE_GR_DN_MGM.view.MyGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.myGrid',

    requires: [
        'SAMPLE_GR_DN_MGM.view.MyGridViewModel',
        'SAMPLE_GR_DN_MGM.view.MyGridViewController',
        'Ext.view.Table',
        'Ext.grid.column.RowNumberer',
        'Ext.grid.column.Number',
        'Ext.form.field.Number',
        'Ext.grid.column.Date',
        'Ext.form.field.Date',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.RowEditing'
    ],

    config: {
        tbar: [
            {
                id: 'gridAddBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf055@FontAwesome',
                iconCls: 'grid-add-btn',
            },
            {
                id: 'gridDelBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf056@FontAwesome',
                iconCls: 'grid-del-btn'
            },
            {
                xtype: 'container',
                flex: 1
            },
            {
                xtype: 'button',
                glyph: 'xf1c3@FontAwesome',
                id: 'xlsxDown',
                cfg: {
                    type: 'excel07',
                    ext: 'xlsx'
                },
                iconCls: 'grid-excel-btn',
            }
        ]
    },

    controller: 'mygrid',
    viewModel: {
        type: 'mygrid'
    },
    id: 'myGrid',
    style: 'border: 1px solid #659DDC; padding: 5px;',
    bodyBorder: false,
    header: false,
    store: 'MyStore',

    viewConfig : {
		enableTextSelection : true,
	},
	
    columns: [
        {
            xtype: 'rownumberer',
            width: 40,
            locked: true,
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            text: 'V_TYPE'
        },
        {
        	xtype: 'gridcolumn',
        	hidden: true,
        	text: 'MGM_NO',
        	dataIndex: 'MGM_NO',
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            width: 90,
            dataIndex: 'MONEY_YN',
            text: '유/무상 구분',
            editor: {
        		xtype: 'combobox',
        		displayField: 'DTL_NM',
        		valueField: 'DTL_CD',
        		editable: false,
        		store : Ext.create('Ext.data.Store',{
        			storeId: 'moneyYNStore',
					fields : ['DTL_CD', 'DTL_NM'],
					data : [['Y','유상'],['N', '무상']]
    			}),
            },
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('moneyYNStore').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('moneyYNStore').findRecord('DTL_CD',value).get('DTL_NM');
                }
                return value;
            },
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            width: 200,
            dataIndex: 'ITEM_NM',
            text: '품목명',
            editor: {
                xtype: 'textfield',
            }
            	
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	width: 150,
        	dataIndex: 'SPEC',
        	text: '단위',
        	editor: {
                xtype: 'textfield',
            }
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	width: 200,
        	dataIndex: 'BP_NM',
        	text: '공급사명',
        	editor: {
                xtype: 'textfield',
            }
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	width: 145,
        	dataIndex: 'HOPE_SL_CD',
        	text: '입고예정창고',
        	editor: {
        		xtype: 'combobox',
        		editable: false,
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'sl_combo',
        			proxy: {
        		           type: 'ajax',
        		           extraParams: {
        		            	V_MAST_CD: 'SL_G',
        		            	V_GRID: 'Y'
        		           },	
        		           api: {
        		               read: '/HSPF01/common/sql/Combobox.jsp'
        		           },
        		           reader: {
        		               type: 'json',
        		               rootProperty: 'resultList'
        		           }
        		       }
        		})
        	},
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('sl_combo').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('sl_combo').findRecord('DTL_CD',value).get('DTL_NM');
                }
                return value;
            },
        },
        {
        	xtype: 'datecolumn',
        	style: 'text-align: center; font-weight: bold;',
        	width: 120,
        	dataIndex: 'HOPE_GR_DT',
        	text: '입고예정일',
        	format: 'Y-m-d',
        	editor: {
                xtype: 'datefield',
                format: 'Y-m-d',
            }
        },
        {
        	xtype: 'numbercolumn',
        	style: 'text-align: center; font-weight: bold;',
        	width: 120,
        	dataIndex: 'HOPE_GR_QTY',
        	text: '입고예정수량',
        	editor: {
                xtype: 'numberfield',
            }
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	width: 100,
        	dataIndex: 'DEPT_NM',
        	text: '요청부서',
        	editor: {
                xtype: 'textfield',
            }
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	width: 120,
        	dataIndex: 'HOPE_USR_NM',
        	text: '요청자',
        	editor: {
                xtype: 'textfield',
            }
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	width: 145,
        	dataIndex: 'SL_CD',
        	text: '입고창고',
        	editor: {
        		xtype: 'combobox',
        		editable: false,
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'sl_combo2',
        			proxy: {
        		           type: 'ajax',
        		           extraParams: {
        		            	V_MAST_CD: 'SL_G',
        		            	V_GRID: 'Y'
        		           },	
        		           api: {
        		               read: '/HSPF01/common/sql/Combobox.jsp'
        		           },
        		           reader: {
        		               type: 'json',
        		               rootProperty: 'resultList'
        		           }
        		       }
        		})
        	},
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('sl_combo2').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('sl_combo2').findRecord('DTL_CD',value).get('DTL_NM');
                }
                return value;
            },
        },
        {
        	xtype: 'datecolumn',
        	style: 'text-align: center; font-weight: bold;',
        	width: 115,
        	dataIndex: 'GR_DT',
        	text: '입고일',
        	format: 'Y-m-d',
        	editor: {
                xtype: 'datefield',
                format: 'Y-m-d',
            }
        },
        {
        	xtype: 'numbercolumn',
        	style: 'text-align: center; font-weight: bold;',
        	width: 120,
        	dataIndex: 'GR_QTY',
        	text: '입고수량',
        	editor: {
                xtype: 'numberfield',
            }
        },
        {
			xtype : 'gridcolumn',
			dataIndex : 'REMARK',
			style : 'text-align: center; font-weight: bold;',
			text : '비고',
			width : 150,
			editor: {
                xtype: 'textfield',
            }
        },
    ],
    selModel: {
        selType: 'checkboxmodel',
        checkOnly: true,
        listeners: {}
    },
    features : [ {
		ftype: 'summary',
        dock: 'bottom'
	} ],
    plugins: [
        {
            ptype: 'gridexporter'
        }, 
        {
    		ptype : 'cellediting',
    	    clicksToEdit: 1,
    	    listeners : {
    	    	beforeedit: function(editor, context, eOpts) {
            		if((context.record.phantom == false) 
	            		&& ((context.field == 'ITEM_NM') || (context.field == 'BP_NM')) 
	            		
	            		) 
            		{
            			
            			context.cancel = true;
            		} else {
            			context.cancel = false;
            		}
               }
			},
    	}
    ]

});