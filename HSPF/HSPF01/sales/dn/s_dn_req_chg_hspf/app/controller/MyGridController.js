/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_REQ_DN_CHG.controller.MyGridController', {
    extend: 'Ext.app.Controller',

    stores: [
        'MyStore'
    ],

    control: {
        "#gridAddBtn": {
            click: 'gridAddBtnClick'
        },
        "#gridDelBtn": {
            click: 'gridDelBtnClick'
        },
        "#gridSaveBtn": {
        	click: 'gridSaveBtnClick'
        },
        "#xlsxDown": {
            click: 'xlsxDownClick'
        },
        '#myGrid': {
    		celldblclick: 'gridDblClick'
    	},
    	"#addCfmBtn": {
            click: 'addCfmBtnClick'
        },
        "#printBtn": {
        	click: 'printBtnClick'
        },
    },

    gridAddBtnClick: function(button, e, eOpts) {
        //var popup = Ext.create("B_COMP_HSPF.view.WinAddRow");
        //popup.show();
        //Ext.getCmp('rowCount').setValue(1);
    },

    gridDelBtnClick: function(button, e, eOpts) {
        var store = Ext.getStore('MyStore');
    	var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
    	var flag = 0; //출고수량이 있으면 1로 바뀌고 삭제 못하게함.
    	for(var i = 0 ; i < gridRecord.length ; i++){
    		if(gridRecord[i].data['DN_QTY'] != 0){
    			flag = 1;
    		}
    	}
    	
    	if(flag == 1){
    		Ext.Msg.alert('확인', '출고수량이 존재합니다.');
    	}
    	else{
    		if(gridRecord.length > 0) {
        		Ext.Msg.confirm('확인','삭제하시겠습니까?', function(button){
        			if(button == 'yes') {
        				for(var i=0; i<gridRecord.length; i++) {
        		    		if(gridRecord[i].data['V_TYPE']=='V') {
        		    			gridRecord[i].set('V_TYPE','D');
        		    		}
        		    	}
        		    	store.sync({
        					params: {
        						V_TYPE : 'SYNC',
        						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
        						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
        					},
        		    		callback: function(records, operation, success) {
        		    			store.reload();
        					}
        		    	});
        			}
        		});
        	}
    	}
    	
    },

    xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
            	var grid = Ext.getCmp('myGrid');
            	grid.saveDocumentAs({
                    type: 'xlsx',
                    title: '출고지시서수정', //엑셀내타이틀
                    fileName: currentDate+'.xlsx' //엑셀파일이름
        		});
    },

    gridSaveBtnClick: function(button, e, eOpts) {
    	var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
    	var store = Ext.getStore('MyStore');
    	Ext.Msg.confirm('확인','요청수량을 변경하시겠습니까?', function(button){
			if(button == 'yes') {
				for( var i = 0 ; i < gridRecord.length ; i ++){
					if(gridRecord[i].data['V_TYPE'] == 'V'){
						gridRecord[i].set('V_TYPE', 'U');
					}
				}
				store.sync({
					params:{
						V_TYPE : 'SYNC',
						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
						
					},
					callback: function(records, operation, success) {
		    			store.reload();
					}
				});
			}
		});
    },
    
    gridDblClick:  function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
    	if(cellIndex == 12){
    		// 분할
    		var divPopup = Ext.create("S_REQ_DN_CHG.view.WinDiv");
    		divPopup.show();
    	}
    	if(cellIndex == 13){
    		// 추가
    		var appendPopup = Ext.create("S_REQ_DN_CHG.view.WinAppend");
    		var store2 = Ext.getCmp('myGrid1').getStore();
    		store2.removeAll();
    		appendPopup.show();
    	}
    },
    
    addCfmBtnClick: function(button, e, eOpts) {
    	var grid = Ext.getCmp('myGrid');
    	var grid1 = Ext.getCmp('myGrid1');
    	var record = grid.getSelectionModel().getSelection();
    	var record1 = grid1.getSelectionModel().getSelection();
    	var store = grid.getStore();
    	var store1 = grid1.getStore();
    	
    	if(record1.length > 0) {
    		Ext.Msg.confirm('확인','추가하시겠습니까?', function(button){
    			if(button == 'yes') {
    				for( var i = 0 ; i < record1.length ; i ++){
    					if(record1[i].data['V_TYPE'] == 'V'){
    						record1[i].set('V_TYPE', 'A');
    					}
    				}
    				store1.sync({
    					params:{
    						V_TYPE : 'SYNC',
    						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
    						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
    						V_DD_NO : record[0].data['DD_NO']
    						
    					},
    					callback: function(records, operation, success) {
    		    			store.reload();
    		    			Ext.getCmp('winAppend').destroy();
    					}
    				});
    			}
    		});
    	}
    	
    },
    
    printBtnClick: function(button, e, eOpts) {
    	var grid = Ext.getCmp('myGrid');
    	var record = grid.getSelectionModel().getSelection();
    	
    	if(record.length > 0) {
    		var myWin = new Ext.Window({
				title : '출고지시서',
				html : '<iframe name="xxx" border =0 src="http://123.142.124.170:8080/aireport/on_server/DN_DIRECT_PRINT.jsp?V_TYPE=S&V_DD_NO='+record[0].data['DD_NO']+'&V_REQ_TEXT='+record[0].data['DD_NO']+'" width="100%" height="100%"></iframe>',
				width : 1000,
				height : 768,
				modal : true
			});
			myWin.show();
			myWin.setSize(Ext.getBody().getViewSize());
			myWin.setPagePosition(0, 0);
    	}
    	else{
    		Ext.Msg.alert('확인', '항목을 선택해주세요.');
    	}
    }

});
