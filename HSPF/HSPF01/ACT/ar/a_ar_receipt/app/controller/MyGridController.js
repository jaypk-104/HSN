/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('A_AR_RECEIPT.controller.MyGridController', {
	extend : 'Ext.app.Controller',
	stores : [ 'MyStore', 'MyStore4', 'MyStore5' ],
	control : 
	{
		"#addTarget1Btn" : {
			click : 'addTarget1BtnClick'
		},
		"#addTarget2Btn" : {
			click : 'addTarget2BtnClick'
		},
		"#xlsxDown" : {
			click : 'xlsxDownClick'
		},
		"#xlsxDown4" : {
			click : 'xlsxDown4Click'
		}

	},
	
	addTarget1BtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store5 = Ext.getStore('MyStore5');
		var myGrid = Ext.getCmp('myGrid');
		var selectedRecords = myGrid.getSelectionModel().getSelection();
		var flag = 'T';
		
		if (selectedRecords.length < 1) {
			Ext.Msg.alert('확인', '선택된 행이 없습니다.');
			return;
		} else {
//			store5.removeAll();
			for(var i=0; i<selectedRecords.length; i++){
				var selectedBcNo = selectedRecords[i].get('BC_NO');
				store5.each(function(rec, idx) {
					var storeBcNo = rec.get('REF_NO');
					if (selectedBcNo == storeBcNo) {
						flag = 'F';
						return;
					}
				});	
			}
			
			if(flag == 'F'){
				Ext.Msg.alert('확인', '동일한 예금(어음) 번호가 이미 존재합니다.');
				return;
			}
			
			for(var i=0; i<selectedRecords.length; i++){
				var selectedRecord = selectedRecords[i];
				var record = Ext.create('A_AR_RECEIPT.model.MyModel', {
					V_TYPE: 'I',
					REF_NO: selectedRecord.get('BC_NO'),
					REF_TYPE: 'B',
					DEPT_CD: selectedRecord.get('DEPT_CD'),
					DEPT_NM: selectedRecord.get('DEPT_NM'),
					BP_CD: selectedRecord.get('BP_CD'),
					BP_NM: selectedRecord.get('BP_NM'),
					CUR: selectedRecord.get('CUR'),
					BANK_DT: selectedRecord.get('BANK_DT'),
					BANK_CD: selectedRecord.get('BANK_CD'),
					BANK_NM: selectedRecord.get('BANK_NM'),
					BANK_ACCT_NO: selectedRecord.get('BANK_ACCT_NO'),
					DOC_AMT: selectedRecord.get('IN_AMT'),
					LOC_AMT: selectedRecord.get('IN_LOC_AMT'),
					BAL_AMT: selectedRecord.get('REMAIN_AMT'),
					BF_LOC_AMT: selectedRecord.get('REMAIN_AMT'),
					REMAIN_AMT: selectedRecord.get('REMAIN_AMT'),
					TEMP_GL_YN: selectedRecord.get('TEMP_GL_YN'),
	    		});
				
				store5.insert(0, record);
				
				if(i === 0){
					Ext.getCmp('V_CLS_TYPE').setValue('B');
					Ext.getCmp('V_CLS_DT').setValue(selectedRecord.get('BANK_DT'));
					Ext.getCmp('V_BP_NM').setValue(selectedRecord.get('BP_NM'));
					Ext.getCmp('V_BP_CD').setValue(selectedRecord.get('BP_CD'));
					Ext.getCmp('V_DEPT_CD2').setValue(selectedRecord.get('DEPT_CD'));
					Ext.getCmp('V_CUR').setValue(selectedRecord.get('CUR'));
					Ext.getCmp('V_XCH_RATE').setValue(selectedRecord.get('XCH_RATE'));
					Ext.getCmp('V_BANK_CD').setValue(selectedRecord.get('BANK_CD'));
					Ext.getCmp('V_BANK_ACCT_NO').setValue(selectedRecord.get('BANK_ACCT_NO'));
				}
			}
			
			var selModel = Ext.getCmp('myGrid5').getSelectionModel();
			selModel.selectAll();
			
			Ext.toast({
				title : ' ',
				timeout : 1000,
				html : '추가완료',
				style : 'text-align: center',
				align : 't',
				width : 130,
			});
		}
		
	},
	
	addTarget2BtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore4');
		var store5 = Ext.getStore('MyStore5');
		var myGrid = Ext.getCmp('myGrid4');
		var selectedRecords = myGrid.getSelectionModel().getSelection();
		var flag = 'T';
		
		if (selectedRecords.length < 1) {
			Ext.Msg.alert('확인', '선택된 행이 없습니다.');
			return;
		} else {
			
//			for(var i=0; selectedRecords.length; i++){
//				var record = selectedRecords[i];
//				if(record.get('FNOTE_YN') == 'N'){
//					Ext.Msg.alert('확인', '어음등록 후 추가할 수 있습니다.');
//					return;
//				}
//			}
			
			for(var i=0; i<selectedRecords.length; i++){
				var selectedBcNo = selectedRecords[i].get('NOTE_NO');
				store5.each(function(rec, idx) {
					var storeBcNo = rec.get('REF_NO');
					if (selectedBcNo == storeBcNo) {
						flag = 'F';
						return;
					}
				});	
			}
			
			if(flag == 'F'){
				Ext.Msg.alert('확인', '동일한 예금(어음) 번호가 이미 존재합니다.');
				return;
			}
			
			for(var i=0; i<selectedRecords.length; i++){
				var selectedRecord = selectedRecords[i];
				var record = Ext.create('A_AR_RECEIPT.model.MyModel', {
					V_TYPE: 'I',
					REF_NO: selectedRecord.get('NOTE_NO'),
					REF_TYPE: 'N',
					DEPT_CD: selectedRecord.get('DEPT_CD'),
					DEPT_NM: selectedRecord.get('DEPT_NM'),
					BP_CD: selectedRecord.get('BP_CD'),
					BP_NM: selectedRecord.get('BP_NM'),
					CUR: selectedRecord.get('CUR'),
					BANK_DT: !!selectedRecord.get('BAE_DT') ? selectedRecord.get('BAE_DT') : selectedRecord.get('ISSUE_DT'),
					BANK_CD: selectedRecord.get('BANK_CD'),
					BANK_NM: selectedRecord.get('BANK_NM'),
					BANK_ACCT_NO: selectedRecord.get('BANK_ACCT_NO'),
					LOC_AMT: !!selectedRecord.get('BAE_AMT') ? selectedRecord.get('BAE_AMT') : selectedRecord.get('NOTE_AMT'),
					BAL_AMT: selectedRecord.get('REMAIN_AMT'),
					BF_LOC_AMT: selectedRecord.get('REMAIN_AMT'),
					REMAIN_AMT: selectedRecord.get('REMAIN_AMT'),
					TEMP_GL_YN: selectedRecord.get('TEMP_GL_YN'),
	    		});
				
				store5.insert(0, record);
				
				if(i === 0){
					Ext.getCmp('V_CLS_TYPE').setValue('N');
					Ext.getCmp('V_CLS_DT').setValue(!!selectedRecord.get('BAE_DT') ? selectedRecord.get('BAE_DT') : selectedRecord.get('ISSUE_DT'));
					Ext.getCmp('V_BP_NM').setValue(selectedRecord.get('BP_NM'));
					Ext.getCmp('V_BP_CD').setValue(selectedRecord.get('BP_CD'));
					Ext.getCmp('V_DEPT_CD2').setValue(selectedRecord.get('DEPT_CD'));
					Ext.getCmp('V_CUR').setValue(selectedRecord.get('CUR'));
					Ext.getCmp('V_XCH_RATE').setValue(1);
					Ext.getCmp('V_BANK_CD').setValue(selectedRecord.get('BANK_CD'));
				}
			}
			
			var selModel = Ext.getCmp('myGrid5').getSelectionModel();
			selModel.selectAll();
			
			Ext.toast({
				title : ' ',
				timeout : 1000,
				html : '추가완료',
				style : 'text-align: center',
				align : 't',
				width : 130,
			});
		}
	},
	
	xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('myGrid');
    	grid.saveDocumentAs({
            type: 'xlsx',
            title: '예금정보', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
		});
    },
    
    xlsxDown4Click: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('myGrid4');
    	grid.saveDocumentAs({
            type: 'xlsx',
            title: '어음정보', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
		});
    }
});
