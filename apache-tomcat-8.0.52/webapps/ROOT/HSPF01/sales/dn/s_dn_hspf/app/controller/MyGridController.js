/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_DN_HSPF.controller.MyGridController', {
    extend: 'Ext.app.Controller',

    stores: [
        'MyStore', 'MyStore1', 'MyStore2'
    ],

    control: {
        "#myGrid": {
        	cellclick: 'myGridCellClick'
        },
        "#xlsxDown": {
            click: 'xlsxDownClick'
        },
        "#gridRequestBtn": {
            click: 'gridRequestBtnClick'
        },
    },
    	
    myGridCellClick:  function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
    	var store1 = this.getMyStore1Store();
    	var store2 = this.getMyStore2Store();
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		
		store1.removeAll();
		store1.load({
			params: {
				V_TYPE: 'SS',
				V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
				V_ITEM_CD: gridRecord[0].data['ITEM_CD'],
				V_SL_CD: gridRecord[0].data['DR_SL_CD']
			},
			callback: function(records,operations,success){
			}
		});
    },

    gridRequestBtnClick: function(button, e, eOpts) {
    	var store = this.getMyStoreStore();
    	var store1 = this.getMyStore1Store();
    	var store2 = this.getMyStore2Store();
    	var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
    	var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
    	
    	for(var i=0; i<gridRecord.length; i++) {
    		if(gridRecord[i].data['V_TYPE'] == 'V') {
    			gridRecord[i].set('V_TYPE', 'II');
    		}
    	}
    	
    	if(gridRecord1.length>0) {
    		store.sync({
        		params : {
    				V_TYPE : 'SYNC',
        			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
        			V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
        			V_DN_DT: Ext.getCmp('V_DN_DT').getValue(),
        			V_GR_NO: gridRecord1[0].data['GR_NO'],
        			V_GR_SEQ: gridRecord1[0].data['GR_SEQ'],
        		},
        		callback : function(records, operation, success) {
        			store.reload();
        			store1.reload();
        			store2.reload();
        		}
        	});
    	} else {
    		Ext.Msg.alert('확인', '출고할 입고내역을 선택하세요.');
    	}
    },
    
    
    xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
            	var grid = Ext.getCmp('myGrid');
            	grid.saveDocumentAs({
                    type: 'xlsx',
                    title: 'test', //엑셀내타이틀
                    fileName: currentDate+'.xlsx' //엑셀파일이름
        		});
    },



});
