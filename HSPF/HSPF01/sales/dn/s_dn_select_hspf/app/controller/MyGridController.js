/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_DN_SELECT_HSPF.controller.MyGridController', {
    extend: 'Ext.app.Controller',

    stores: [
        'MyStore'
    ],

    control: {
        "#gridAddBtn": {
            click: 'gridAddBtnClick'
        },
        "#gridDelBtn": {
            click: 'gridDelBtnClick'
        },
        "#xlsxDown": {
            click: 'xlsxDownClick'
        },
        "#xmlDown": {
            click: 'xmlDownClick'
        },
        "#gridErpBtn": {
            click: 'gridErpBtnClick'
        },
        "#chgBtn": {
        	click: 'chgBtnClick'
        },
    },

    gridAddBtnClick: function(button, e, eOpts) {
        //var popup = Ext.create("B_COMP_HSPF.view.WinAddRow");
        //popup.show();
        //Ext.getCmp('rowCount').setValue(1);
    },

    gridDelBtnClick: function(button, e, eOpts) {
        var store = Ext.getStore('MyStore');
    	var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
    	var myMask = new Ext.LoadMask(Ext.getCmp('myGrid') , {msg:"삭제처리 중"});
    	
    	var flag = 1; // 1이면 삭제가능 0이면 삭제 불가능.
		var msg = '';
    	
    	for(var i=0; i<gridRecord.length; i++) {
    		if(gridRecord[i].data['REL_BILL_NO'] != '' && gridRecord[i].data['REL_BILL_NO'] != null && gridRecord[i].data['REL_BILL_NO'] != undefined) {
    			flag = 0;
    			msg = 'ERP 매출채권이 등록되어있습니다. 삭제 불가능합니다.';
    		}
    		if(gridRecord[i].data['CFM_YN'] == 'Y' ){
    			flag = 0;
    			msg = '출고 확정된 데이터는 삭제 불가능합니다.';
    		}
    	}
    	if(flag == 1){
	    	if(gridRecord.length > 0) {
	    		Ext.Msg.confirm('확인','출고삭제하시겠습니까?<br>ERP출고데이터도 동시에 삭제됩니다<br>삭제 전 매출여부를 반드시 확인하세요.', function(button){
	    			if(button == 'yes') {
	    				 myMask.show();
	                     
	    				
	    				for(var i=0; i<gridRecord.length; i++) {
	    		    		if(gridRecord[i].data['V_TYPE']=='V') {
	    		    			gridRecord[i].set('V_TYPE', 'D');
	    		    		}
	    		    		if(gridRecord[i].data['REL_BILL_NO'] != '' && gridRecord[i].data['REL_BILL_NO'] != null && gridRecord[i].data['REL_BILL_NO'] != undefined) {
	    		    			flag = 0;
	    		    			msg = 'ERP 매출채권이 등록되어있습니다. 삭제 불가능합니다.';
	    		    		}
	    		    	}
						store.sync({
	    					params: {
	    						V_TYPE: 'SYNC',
	    						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
	    					},
	    		    		callback: function(records, operation, success) {
	    		    			var response = records.operations[0]._response.responseText;
	    		    			
	    		    			if(response != 'SUCCESS') {
	    		    				Ext.Msg.alert("관리자문의요망(캡쳐)", response);
	    		    			}
	    		    			
	    		    			store.reload();
	    		    			myMask.hide();
	    					}
	    		    	});
	    		    	
	    			}
	    		});
	    	}
    	}
    	else{
    		Ext.Msg.alert('확인',msg);
    	}
    },

    xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
            	var grid = Ext.getCmp('myGrid');
            	grid.saveDocumentAs({
                    type: 'xlsx',
                    title: 'test', //엑셀내타이틀
                    fileName: currentDate+'.xlsx' //엑셀파일이름
        		});
    },
    
    gridErpBtnClick: function(button, e, eOpts) {
       var store = Ext.getStore('MyStore');
       var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
       var myMask = new Ext.LoadMask(Ext.getCmp('myGrid') , {msg:"인터페이스 중"});
       var flag = '';
       var msg = '';
       
      Ext.Msg.confirm('확인','미전송상태의 출고데이터를 ERP로 전송하시겠습니까?', function(button){
             if(button == 'yes') {
                   myMask.show();
                   
                   Ext.Ajax.request({
                          url:'sql/s_dn_select_hspf.jsp',
                          method: 'post',
                          params: {
                                 V_TYPE : 'IF',
                                 V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
                          },
                          callback : function(records,operations,success){
                                 
                          },
                       success : function(response) {
                          var jsonResult = Ext.JSON.decode(response.responseText);
                          var tryCnt = jsonResult.tryCnt;
                                 var finCnt = jsonResult.finCnt;
                                 var resMSG = jsonResult.resMSG;
                                 var resDATE = jsonResult.resDATE;
                                 var resString = jsonResult.resString;
                                 
                                 if(resString == 'SUCCESS') {
                                        Ext.Msg.alert('확인', '총 [ ' + finCnt + ' ] 건 전송 완료');
                                 store.reload();
                          myMask.hide();
                                 } else if (resMSG == 'ERROR'){
                                        Ext.Msg.alert('확인', '총 [ ' + tryCnt + ' ] 건 중 [ ' + finCnt + ' ] 건 전송 완료 <br>관리자 문의요망<br>' + resString + '<br>' + resDATE);
                                        myMask.hide();
                                 } else {
                                        Ext.Msg.alert('확인', '인터페이스 오류, 관리자 문의요망<br>' + resString + '<br>' + resDATE);
                                        myMask.hide();
                                 }
                       },
                          scope: this
                   });
                   
             }
      });
    },
    chgBtnClick: function(button, e, eOpts) {
    	var store = Ext.getStore('MyStore');
    	var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
    	
    	if(gridRecord.length >= 1){
    		Ext.Msg.confirm('확인','출고일, 매출처를 변경하시겠습니까?', function(button){
    			if(button == 'yes') {
    				for(var i=0; i<gridRecord.length; i++) {
    		    		if(gridRecord[i].data['V_TYPE']=='V') {
    		    			gridRecord[i].set('V_TYPE', 'CHG');
    		    		}
    		    	}
    				
    				store.sync({
    					params: {
    						V_TYPE: 'SYNC2',
    						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
    					},
    		    		callback: function(records, operation, success) {
    		    			var response = records.operations[0]._response.responseText;
    		    			
    		    			if(response != 'SUCCESS') {
    		    				Ext.Msg.alert("관리자문의요망(캡쳐)", response);
    		    			}
    		    			
    		    			store.reload();
    					}
    		    	});
    			}
    		});
    	}
    	else{
    		Ext.Msg.alert('확인', '행을 선택하세요.');
    	}
    },


});
