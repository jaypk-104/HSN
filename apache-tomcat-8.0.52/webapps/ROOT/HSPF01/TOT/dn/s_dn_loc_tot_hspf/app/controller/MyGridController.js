/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_DN_LOC_TOT_HSPF.controller.MyGridController', {
	extend : 'Ext.app.Controller',

	control : {
		"#gridAddBtn" : {
			click : 'gridAddBtnClick'
		},
		"#gridDelBtn" : {
			click : 'gridDelBtnClick'
		},
		"#gridSaveBtn" : {
			click : 'gridSaveBtnClick'
		},
		"#printBillRcptBtn": { /* 거래명세서 출력*/
        	click: 'printBillRcptBtnClick'
        },
		"#xlsxDown" : {
			click : 'xlsxDownClick'
		},
	},

	gridAddBtnClick : function(button, e, eOpts) {
		var popup = Ext.create("S_DN_LOC_TOT_HSPF.view.WinAddRow");
		popup.show();
		Ext.getCmp('rowCount').setValue(1);
	},

	syncItem: function(button, e, eOpts) {
    	var store =	Ext.getStore('MyStore');
    	store.each(function(rec,idx) {
//    		if (rec.dirty == true) { 
    			rec.set('DN_AMT', Math.round(rec.get('DN_QTY') * rec.get('DN_PRC')).toFixed(4));
    			
    			if(!!rec.get('VAT_TYPE')){
    				var storeVAT = Ext.getStore('storeVAT');
            		var match = storeVAT.findBy(function(record,id) {
            	        if(record.get('DTL_CD') == rec.get('VAT_TYPE')) {
            	            return true;
            	        }
            	    });
            		
            		var vatRecord = storeVAT.getData().getAt(match);
            		var VAT_RATE = vatRecord.get('VAT_RATE');
            		var DN_AMT = rec.get('DN_AMT');
        			var VAT_AMT = 0;
        			
        			if(DN_AMT > 0 && VAT_RATE > 0){
        				VAT_AMT = Math.floor(DN_AMT * VAT_RATE / 100); 
        			}
        			rec.set('VAT_AMT', VAT_AMT);
    			}
//			}
		});
    	
    },
    
    /* 거래명세서 출력*/
	printBillRcptBtnClick: function() {
    	var url = '';
    	
    	if(parent.Ext.getCmp('MAIN_SERVER_YN').getValue() == 'Y'){
	    	url = 'http://123.142.124.170:8080/aireport/on_server/S_DN_BILL_RECEIPT_TOT_PRC.jsp?';  	
		} else{
	    	url = 'http://123.142.124.170:8080/aireport/on_server/S_DN_BILL_RECEIPT_TOT_PRC_TEST.jsp?';  	
		}
    	
    	if(Ext.getCmp('V_S_BP_CD').getValue() != '') {
    		var BP_CD = Ext.getCmp('V_S_BP_CD').getValue();
    		var DN_DTFR = Ext.getCmp('V_DN_DT_FR').lastValue;
    		var DN_DTTO = Ext.getCmp('V_DN_DT_TO').lastValue;
    		var params = 'BP_CD=' + BP_CD + '&DN_DTFR=' + DN_DTFR + '&DN_DTTO=' + DN_DTTO;

    		url = url + params;
    		
    		Ext.Msg.confirm('확인', '거래명세서를 출력하시겠습니까?', function(button) {
        		if (button == 'yes') {
					var myWin = new Ext.Window({
						title : '거래명세서',
						html : '<iframe name="xxx" border =0 src="'+url+'" width="100%" height="100%"></iframe>',
						width : 1000,
						height : 768,
						modal : true
					});
					myWin.show();
					myWin.setSize(Ext.getBody().getViewSize());
					myWin.setPagePosition(0, 0);
        		}
        	})
    	} else {
    		Ext.Msg.alert('확인', '출고처를 선택하세요.');
    	}
    },
	
	xlsxDownClick : function(button, e, eOpts) {
		var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
		var grid = Ext.getCmp('myGrid');
		grid.saveDocumentAs({
			type : 'xlsx',
			title : '출고금액조정', // 엑셀내타이틀
			fileName : currentDate + '.xlsx' // 엑셀파일이름
		});
	},

});
