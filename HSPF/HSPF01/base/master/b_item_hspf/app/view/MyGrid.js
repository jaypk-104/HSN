/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('B_ITEM_HSPF.view.MyGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.myGrid',

    requires: [
        'B_ITEM_HSPF.view.MyGridViewModel',
        'B_ITEM_HSPF.view.MyGridViewController',
        'Ext.view.Table',
        'Ext.grid.column.RowNumberer',
        'Ext.form.field.ComboBox',
        'Ext.form.field.Number',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.RowEditing',
        'Ext.grid.plugin.Clipboard',
    ],

    config: {
        tbar: [
            {
                id: 'gridAddBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf055@FontAwesome',
                iconCls: 'grid-add-btn',
            },
            {
                id: 'gridDelBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf056@FontAwesome',
                iconCls: 'grid-del-btn',
//                disabled: true
            },
            {
                xtype: 'container',
                flex: 1
            },
            {
                xtype: 'button',
                glyph: 'xf1c3@FontAwesome',
                id: 'xlsxDown',
                cfg: {
                    type: 'excel07',
                    ext: 'xlsx'
                },
                iconCls: 'grid-excel-btn',
            }
        ]
    },

    controller: 'mygrid',
    viewModel: {
        type: 'mygrid'
    },
    id: 'myGrid',
    style: 'border: 1px solid #659DDC; padding: 5px;',
    bodyBorder: false,
    header: false,
    store: 'MyStore',

    viewConfig: {
        enableTextSelection: true
    },
    columns: [
        {
            xtype: 'rownumberer',
            width: 45
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'V_TYPE',
            text: 'V_TYPE',
            hidden: true
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'ITEM_CD',
            style: 'text-align: center; font-weight: bold;',
            width: 120,
            text: '품목코드',
            editor: {
                xtype: 'textfield',
                allowBlank: false,
                allowOnlyWhitespace: false,
            },
            emptyCellText: '(필수)'
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;  color: #3367d6',
            width: 100,
            dataIndex: 'ITEM_GROUP_CD',
            text: '품목그룹',
            editor: {
            	 xtype: 'textfield',
                 allowBlank: false,
                 allowOnlyWhitespace: false,
                 emptyText: 'Double Click',
                 editable : false,
                 listeners: {
                     afterrender: function(c) {
                     	c.getEl().on('dblclick', function() {
                     		var popup = Ext.create("Popup.view.WinItemGrpPop");
                             popup.show();
                             var store = Ext.getStore('WinItemGrpPopStore');
                     		 store.removeAll();
                         });
                     }
                 }
            },
            emptyCellText: '(Double Click)'
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;  color: #3367d6',
            width: 200,
            sortable: true,
            dataIndex: 'ITEM_NM',
            enableTextSelection: true,
            text: '품목명',
            editor: {
                xtype: 'textfield',
                allowBlank: false,
                allowOnlyWhitespace: false,
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;  color: #3367d6',
            width: 150,
            dataIndex: 'SPEC',
            text: '규격',
            editor: {
                xtype: 'textfield'
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;  color: #3367d6',
            width: 85,
            dataIndex: 'UNIT',
            text: '단위',
            editor: {
                xtype: 'textfield'
            }
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;  color: #3367d6',
            width: 120,
            dataIndex: 'MIN_PO_QTY',
            text: '최소발주단위',
            align: 'right',
            editor: {
                xtype: 'numberfield',
            },
            renderer: function(value) {
            	return Ext.util.Format.number(value, '0,000.00');
            }
                 
        },
        {
            xtype: 'numbercolumn',
            dataIndex: 'SAFE_QTY',
            style: 'text-align: center; font-weight: bold;  color: #3367d6',
            width: 110,
            text: '안전재고량',
            align: 'right',
            editor: {
                xtype: 'numberfield'
            },
            renderer: function(value) {
            	return Ext.util.Format.number(value, '0,000.00');
            }
        },
        {
        	xtype: 'numbercolumn',
        	style: 'text-align: center; font-weight: bold;  color: #3367d6',
        	width: 110,
        	dataIndex: 'MAX_PACK_QTY',
        	text: '대포장수량',
        	editor: {
        		xtype: 'numberfield'
        	},
        	renderer: function(value) {
        		return Ext.util.Format.number(value, '0,000.00');
        	},
        	align : 'right'
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;  color: #3367d6',
            width: 100,
            dataIndex: 'MAX_PACK_UNIT',
            text: '대포장단위',
            editor: {
                xtype: 'textfield'
            },
        },
        {
        	xtype: 'numbercolumn',
        	style: 'text-align: center; font-weight: bold;  color: #3367d6',
        	width: 110,
        	dataIndex: 'MID_PACK_QTY',
        	text: '중포장수량',
        	editor: {
        		xtype: 'numberfield'
        	},
        	renderer: function(value) {
        		return Ext.util.Format.number(value, '0,000.00');
        	},
        	align : 'right'
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;  color: #3367d6',
            width: 100,
            dataIndex: 'MID_PACK_UNIT',
            text: '중포장단위',
            editor: {
                xtype: 'textfield',
            },
                 
        },
        {
        	xtype: 'numbercolumn',
        	style: 'text-align: center; font-weight: bold;  color: #3367d6',
        	width: 110,
        	dataIndex: 'MIN_PACK_QTY',
        	text: '소포장수량',
        	editor: {
        		xtype: 'numberfield'
        	},
        	renderer: function(value) {
        		return Ext.util.Format.number(value, '0,000.00');
        	},
        	align : 'right'
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;  color: #3367d6',
            width: 100,
            dataIndex: 'MIN_PACK_UNIT',
            text: '소포장단위',
            editor: {
                xtype: 'textfield'
            },
                 
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;  color: #3367d6',
            width: 100,
            dataIndex: 'SUPP_LT_DT',
            text: '구매L/T',
            align: 'right',
            editor: {
                xtype: 'numberfield'
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;  color: #3367d6',
            width: 100,
            dataIndex: 'HS_CD',
            text: 'HS CODE',
            editor: {
                xtype: 'textfield'
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;  color: #3367d6',
            width: 200,
            dataIndex: 'MAKER',
            text: '제조사',
            editor: {
                xtype: 'textfield'
            }
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;  color: #3367d6',
            width: 100,
            dataIndex: 'IN_SL_CD',
            text: '입고창고',
            editor: {
        		xtype: 'combobox',
        		editable: false,
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'sl_combo',
        			proxy: {
        		           type: 'ajax',
        		           extraParams: {
        		            	V_MAST_CD: 'SL',
        		            	V_GRID: 'Y'
        		           },	
        		           api: {
        		               read: '/HSPF01/common/sql/Combobox.jsp'
        		           },
        		           reader: {
        		               type: 'json',
        		               rootProperty: 'resultList'
        		           }
        		       }
        		})
            },
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('sl_combo').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('sl_combo').findRecord('DTL_CD',value).get('DTL_NM');
                }
                return value;
            },
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;  color: #3367d6',
            width: 120,
            dataIndex: 'BAR_MAKE_UNIT',
            text: '바코드 발행단위',
            editor: {
                xtype: 'textfield'
            }
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;  color: #3367d6',
        	width: 500,
        	dataIndex: 'REMARK',
        	text: '비고',
        	editor: {
        		xtype: 'textfield'
        	}
        }
    ],
    selModel: {
        selType: 'checkboxmodel',
		checkOnly: true,
        listeners: {
            select: 'onCheckboxModelSelect',
            deselect: 'onCheckboxModelDeselect'
        }
    },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        {
            ptype: 'clipboard'
        },
        {
            ptype: 'cellediting',
            clicksToEdit: 2,
            clicksToMoveEditor: 1,
            listeners: {
	            //수정후
	            edit: function(editor, context, eOpts) {
	            	var selModel= Ext.getCmp('myGrid').getSelectionModel();
	            	selModel.select(context.record, true);
	            },
	        	beforeedit: function(editor, context) {
	        		if((context.record.phantom == false) 
	        			&& (context.field == 'ITEM_CD')) {
	        			context.cancel = true;
	        		} else {
	        			context.cancel = false;
	        		}
	            }
            }
        }
    ]

});