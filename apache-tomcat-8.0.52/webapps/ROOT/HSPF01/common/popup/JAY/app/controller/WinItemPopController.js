/*
 * File: app/controller/WinItemPopController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Popup.controller.WinItemPopController', {
    extend: 'Ext.app.Controller',
    
    views: ['WinItemPop'],
	stores: ['WinItemPopStore'],
	control : {
		"#itemSelBtn": {
            click: 'itemSelBtnClick'
		},
		"#WinItemGrid" : {
			beforecelldblclick : 'cellDblClick'
		},
		"winitempop textfield[name=search_field]" : {
			specialkey : 'tfEnter'
		}
	},
    
    itemSelBtnClick: function(button, e, eOpts) {
		var store = this.getWinItemPopStoreStore();
		store.removeAll();
		store.load({
			params : {
				V_TYPE : 'S',
				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				W_ITEM_CD : Ext.getCmp('W_ITEM_CD').getValue(),
				W_ITEM_NM : Ext.getCmp('W_ITEM_NM').getValue(),
				W_M_BP_CD : Ext.getCmp('W_M_BP_CD').getValue(),
			},
			callback : function(records, operations, success) {
			}
		});
	},
	
	cellDblClick : function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
		var ITEM_CD = record.get('W_ITEM_CD');
		var ITEM_NM = record.get('W_ITEM_NM');
		var gridRecord;
		
		//발주등록 우측그리드
		if(Ext.getCmp('W_TYPE').getValue() == 'PO') {
			gridRecord = Ext.getCmp('myGrid2').getSelectionModel().getSelection();
			Ext.Ajax.request({
				url:'/HSPF01/mm/po/m_po_hspf/sql/M_PO_HSPF_D.jsp',
				method: 'post',
				params: {
					V_TYPE: 'B', //확정
					V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
					V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
					V_ITEM_CD : ITEM_CD,
					V_M_BP_CD : Ext.getCmp('W_M_BP_CD').getValue()
				},
				success : function(response) {
					var result = Ext.JSON.decode(response.responseText);
					gridRecord[0].set('ITEM_CD', ITEM_CD);
					gridRecord[0].set('ITEM_NM', ITEM_NM);
					gridRecord[0].set('PO_PRC', result.resultList[0].MB_PRC);
				},
				scope: this
			});
			
		} else if(Ext.getCmp('W_TYPE').getValue() == 'B_ITEM_SUPP_HSPF' //매입처단가등록
				||Ext.getCmp('W_TYPE').getValue() == 'B_ITEM_SALE_HSPF'){ //판매처단가등록
			var gridRecord =  Ext.getCmp('myGrid');
			gridRecord.actionables['0'].context.record.set('ITEM_CD',ITEM_CD);
			gridRecord.actionables['0'].context.record.set('ITEM_NM',ITEM_NM);
		} else if(Ext.getCmp('W_TYPE').getValue() == 'S_DN_REQ_HSPF'){ //출고요청등록
			Ext.getCmp('V_ITEM_CD').setValue(ITEM_CD);
			Ext.getCmp('V_ITEM_CD_RIGHT').setValue(ITEM_CD);
		} else {
			var gridRecord =  Ext.getCmp('myGrid').editingPlugin.getEditor();
			var index = gridRecord.activeField.column.fullColumnIndex;
			
			gridRecord.items.items[index].setValue(ITEM_CD);
			gridRecord.items.items[index+1].setValue(ITEM_NM);
		}
		var popWin=  Ext.getCmp('WinItemPop');
		popWin.destroy();

	},

	tfEnter : function(field, e, eOpts) {
		if (e.getKey() == e.ENTER) {
			this.itemSelBtnClick();
		}
	},

});
