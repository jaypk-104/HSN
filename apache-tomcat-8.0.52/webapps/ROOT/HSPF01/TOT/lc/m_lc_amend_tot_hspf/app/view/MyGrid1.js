/*
 * File: app/view/MyGrid1.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_LC_AMEND_TOT_HSPF.view.MyGrid1', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.mygrid1',

    requires: [
        'M_LC_AMEND_TOT_HSPF.view.MyGrid1ViewModel',
        'Ext.view.Table',
        'Ext.grid.column.RowNumberer',
        'Ext.form.field.Text',
        'Ext.grid.column.Number',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.CellEditing'
    ],

    config: {
        tbar: [
			{
			    id: 'gridAddBtn',
			    text: '',
			    margin: '0 3 0 0',
			    glyph: 'xf055@FontAwesome',
			    iconCls: 'grid-add-btn',
			    disabled: true
			},
			{
			    id: 'gridDelBtn',
			    text: '',
			    margin: '0 3 0 0',
			    glyph: 'xf056@FontAwesome',
			    iconCls: 'grid-del-btn',
			},
           {
        	   xtype: 'button',
        	   id: 'lcRegBtn',
        	   text: 'L/C저장',
	           	style: 'background-color: white; border: 0.5px solid #3367d6;',
	           	cls: 'blue-btn',
           },
//           {
//	           	id: 'grid1SaveBtn',
//	           	text: '',
//	           	margin: '0 3 0 0',
//	           	glyph: 'xf0c7@FontAwesome',
//	           	iconCls: 'grid-save-btn',
//           },
            {
                xtype: 'container',
                flex: 1
            },
            {
                xtype: 'button',
                glyph: 'xf1c3@FontAwesome',
                id: 'xlsxDown1',
                cfg: {
                    type: 'excel07',
                    ext: 'xlsx'
                },
                iconCls: 'grid-excel-btn',
                margin: '0 3 0 0',
            }
        ]
    },

    viewModel: {
        type: 'mygrid1'
    },
    id: 'myGrid1',
    style: 'border: 1px solid #659DDC; padding: 5px;',
    bodyBorder: false,
    header: false,
    store: 'MyStore1',

    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            text: 'V_TYPE',
            dataIndex: 'V_TYPE',
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'AMD_FLG',
            enableTextSelection: true,
            text: '변경구분',
            align: 'center',
            width: 100
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            sortable: false,
            dataIndex: 'ITEM_CD',
            text: '품목코드',
            width: 120,
            editor: {
                xtype: 'combobox',
                displayField: 'ITEM_CD',
                valueField: 'ITEM_CD',
                enableRegEx: true,
                minChars: 2,
                queryMode: 'local',
                store: 'ItemStore',
                listeners   : {
                    beforequery: function(record){  
                        record.query = new RegExp(record.query, 'i');
                        record.forceAll = true;
                    },
                }
            },
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            sortable: false,
            dataIndex: 'ITEM_NM',
            text: '품목명',
            width: 150,
            editor: {
                xtype: 'combobox',
                displayField: 'ITEM_NM',
                valueField: 'ITEM_CD',
                enableRegEx: true,
                minChars: 2,
                queryMode: 'local',
                store: 'ItemStore',
                matchFieldWidth: false,
                listeners   : {
                    beforequery: function(record){  
                        record.query = new RegExp(record.query, 'i');
                        record.forceAll = true;
                    },
                },
              	listConfig: {
                    itemTpl: [
                        '<div>[{ITEM_CD}] {ITEM_NM}</div>'
                    ]
                }
            },
        	renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(Ext.data.StoreManager.lookup('ItemStore').findRecord('ITEM_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('ItemStore').findRecord('ITEM_CD',value).get('ITEM_NM');
                }
                return value;
            },
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'UNIT',
        	enableTextSelection: true,
        	text: '단위',
        	width: 100
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'SPEC',
            style: 'text-align: center; font-weight: bold;',
            sortable: true,
            enableTextSelection: true,
            text: '규격',
            width: 150,
            hidden: true
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'LC_KIND',
        	enableTextSelection: true,
        	text: 'LC_KIND',
        	hidden: true
        }, 
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'BE_QTY',
            text: '변경전수량',
            format: '0,000.00',
            align: 'right',
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
	        }
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'AT_QTY',
            text: '변경후수량',
            format: '0,000.00',
            align: 'right',
            editor: {
            	xtype: 'numberfield'
            },
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
	        }
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'BE_PRICE',
            text: '단가',
            format: '0,000.0000',
            align: 'right',
            hidden: true
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            dataIndex: 'AT_PRICE',
            text: '단가',
            format: '0,000.0000',
            align: 'right',
            editor: {
            	xtype: 'numberfield',
            	decimalPrecision:4,
            },
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'BE_DOC_AMT',
            text: 'LC금액',
            format: '0,000.0000',
            align: 'right',
            hidden: true
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'AT_DOC_AMT',
            text: 'LC금액',
            format: '0,000.0000',
            align: 'right',
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.0000')+"<font>"; 
	        },
//            editor: {
//            	xtype: 'numberfield',
//            	decimalPrecision: 3,
//            },
            width: 130
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'BE_LOC_AMT',
            text: '자국금액',
            format: '0,000',
            align: 'right',
            hidden: true
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            text: '자국금액',
            format: '0,000',
            dataIndex: 'AT_LOC_AMT',
            align: 'right',
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
	        },
//            editor: {
//            	xtype: 'numberfield'
//            },
//            hidden: true,
            width: 130
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'PO_REMAIN_QTY',
            text: '발주잔량',
            format: '0,000.00',
            align: 'right',
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
	        }
        },
        {
        	xtype: 'gridcolumn',
        	dataIndex: 'LC_NO',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	enableTextSelection: true,
        	width: 150,
        	text: 'LC관리번호',
        	hidden: true
        },
        {
        	xtype: 'gridcolumn',
        	dataIndex: 'LC_DOC_NO',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	enableTextSelection: true,
        	width: 150,
        	text: 'LC번호',
        },
        {
        	xtype: 'gridcolumn',
        	dataIndex: 'LC_SEQ',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	enableTextSelection: true,
        	text: 'LC순번',
        	align: 'right',
        },
        {
        	xtype: 'gridcolumn',
        	dataIndex: 'PO_NO',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	enableTextSelection: true,
        	width: 150,
        	text: '발주번호',
        },
        {
        	xtype: 'gridcolumn',
        	dataIndex: 'PO_SEQ',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	enableTextSelection: true,
        	align: 'right',
        	text: '발주순번',
        },
        {
        	xtype: 'gridcolumn',
        	dataIndex: 'LC_AMD_NO',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	enableTextSelection: true,
        	width: 150,
        	text: 'LC AMD 번호',
        	hidden: true
        },
        {
        	xtype: 'gridcolumn',
        	dataIndex: 'LC_AMD_SEQ',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	enableTextSelection: true,
        	text: 'LC AMD 순번',
        	align: 'right',
        	hidden: true
        },
    ],
    selModel: {
        selType: 'checkboxmodel',
        listeners: {
        	select: function(rowmodel, record, index, eOpts) {
        		record.set('V_TYPE', 'V');
        	},
        	deselect: function(rowmodel, record, index, eOpts) {
        		record.set('V_TYPE', '');
        	}
        }
    },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        {
            ptype: 'cellediting',
            listeners: {
            	edit: function(editor, context, eOpts) {
            		var XCH_RATE = Ext.getCmp('V_XCH_RATE').getValue().toFixed(2);

            		var AT_QTY = context.record.get('AT_QTY'); 
            		var AT_PRICE = context.record.get('AT_PRICE');
            		
            		if ((context.column.dataIndex == 'AT_QTY' || context.column.dataIndex == 'AT_PRICE') 
            			&& (AT_QTY != undefined) && (AT_PRICE != undefined)) {
            			context.record.set('AT_DOC_AMT', AT_QTY * AT_PRICE);
            			var AT_DOC_AMT = context.record.get('AT_DOC_AMT');
            			context.record.set('AT_LOC_AMT', (AT_DOC_AMT * XCH_RATE).toFixed(0));
            		}
            	},
            	afteredit: function(editor, context, eOpts) {
            		/*품목코드*/
            		if(context.column.dataIndex == 'ITEM_CD' && context.record.get('AMD_FLG') != 'I') {
            			Ext.MessageBox.show({
            		        title: '확인',
            		        msg: '품목변경은 행 추가 건만 가능합니다.',
            		        //버튼정의
            		        buttons: Ext.MessageBox.OK,
            		        //아이콘정의
            		        icon : Ext.MessageBox.WARNING
            		    });
            			context.record.set('ITEM_CD', context.originalValue);
            		} else if(context.column.dataIndex == 'ITEM_CD' ) {
	            		Ext.Ajax.request({
							url:'/HSPF01/common/popup/sql/common_item.jsp',
							method: 'post',
							params: {
				    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
				    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
				    			V_ITEM_CD: context.record.get('ITEM_CD')
							},
							callback : function(records,operations,success){
								
						    },
						    success : function(response) {
						    	var jsonResult = Ext.JSON.decode(response.responseText);
						    	
						    	if (jsonResult.resultList.length > 0) {
						    		var ITEM_CD = jsonResult.resultList[0].ITEM_CD;
									var ITEM_NM = jsonResult.resultList[0].ITEM_NM;
									var UNIT = jsonResult.resultList[0].UNIT;
									var M_PRICE = jsonResult.resultList[0].M_PRICE;
									
									context.record.set('ITEM_NM', ITEM_NM);
									context.record.set('UNIT', UNIT);
									context.record.set('AT_PRICE', M_PRICE);
						    	} else {
						    		context.record.set('ITEM_NM', '품목정보없음');
						    	}
						    },
							scope: this
						});
            		}
            		
            		/*품목명*/
            		if(context.column.dataIndex == 'ITEM_NM' && context.record.get('AMD_FLG') != 'I') {
//            			Ext.Msg.alert('확인', '품목변경은 행 삭제 후 재등록하세요.');
            			Ext.MessageBox.show({
            		        title: '확인',
            		        msg: '품목변경은 행 추가 건만 가능합니다.',
            		        //버튼정의
            		        buttons: Ext.MessageBox.OK,
            		        //아이콘정의
            		        icon : Ext.MessageBox.WARNING
            		    });
            			context.record.set('ITEM_NM', context.originalValue);
            		} else if(context.column.dataIndex=='ITEM_NM') {
            			context.record.set('ITEM_CD', context.record.get('ITEM_NM'));
            			Ext.Ajax.request({
							url:'/HSPF01/common/popup/sql/common_item.jsp',
							method: 'post',
							params: {
				    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
				    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
				    			V_ITEM_CD: context.record.get('ITEM_CD')
							},
							callback : function(records,operations,success){
								
						    },
						    success : function(response) {
						    	var jsonResult = Ext.JSON.decode(response.responseText);
						    	
						    	if (jsonResult.resultList.length > 0) {
						    		var ITEM_CD = jsonResult.resultList[0].ITEM_CD;
									var ITEM_NM = jsonResult.resultList[0].ITEM_NM;
									var UNIT = jsonResult.resultList[0].UNIT;
									var M_PRICE = jsonResult.resultList[0].M_PRICE;
									
									context.record.set('ITEM_NM', ITEM_NM);
									context.record.set('UNIT', UNIT);
									context.record.set('AT_PRICE', M_PRICE);
						    	} else {
						    		context.record.set('ITEM_CD', '품목정보없음');
						    	}
						    	
						    },
							scope: this
						});
            		} 
            		
            	}
            }
        }
    ],
    features : [ {
		ftype : 'summary',
		dock: 'bottom'
	} ],
    viewConfig: {
    	enableTextSelection: true,
    },

});