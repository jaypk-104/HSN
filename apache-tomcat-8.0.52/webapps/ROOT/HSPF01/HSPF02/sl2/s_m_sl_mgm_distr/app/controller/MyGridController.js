/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_M_SL_MGM_DISTR.controller.MyGridController', {
	extend : 'Ext.app.Controller',
	stores : [ 'MyStore' ],
	control : 
	{
		"#gridAddBtn" : {
			click : 'gridAddBtnClick'
		},
		"#gridSaveBtn" : {
			click : 'gridSaveBtnClick'
		},
		"#xlsxDown" : {
			click : 'xlsxDownClick'
		}
	},
	
	gridAddBtnClick : function(button, e, eOpts) {
		if(Ext.getCmp('V_SL_CD').getValue() == null || Ext.getCmp('V_SL_CD').getValue() == undefined) {
    		Ext.Msg.alert('확인', '창고코드를 입력하세요.');
    	} else if (Ext.getCmp('V_SL_NM').getValue() == '') {
    		Ext.Msg.alert('확인', '창고명을 입력하세요.');
    	} else {   
    		var popup = Ext.create("S_M_SL_MGM_DISTR.view.WinAddRow");
	        popup.show();
	        Ext.getCmp('rowCount').setValue(1);
        }
	},
	
	gridSaveBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
//		var selModel = Ext.getCmp('myGrid').getSelectionModel();
//		selModel.selectAll();
		
		var flag = 'T';
		//console.log("length : " + gridRecord.length);
		
		var ISSUE_DT_CD = Ext.getCmp('V_ISSUE_DT').getValue();
		var ISSUE_DT = '';
		var V_DATE = Ext.getCmp('V_DATE').getValue();
		
		function getFormatDate(date){
            var year = date.getFullYear();
            var month = (1 + date.getMonth());
            month = month >= 10 ? month : '0' + month;
            var day = date.getDate();
            day = day >= 10 ? day : '0' + day;
            return year + '-' + month + '-' + day;
        }
		
		if(ISSUE_DT_CD == 'NM10'){
			//익월 10일
			ISSUE_DT = new Date(V_DATE);
			ISSUE_DT.setMonth(ISSUE_DT.getMonth() + 1);
			ISSUE_DT.setDate(10);
		}
		else if (ISSUE_DT_CD == 'NM30'){
			//익월 30일
			ISSUE_DT = new Date(V_DATE);
			ISSUE_DT.setMonth(ISSUE_DT.getMonth() + 1);
			ISSUE_DT.setDate(30);
		}
		
		ISSUE_DT = getFormatDate(ISSUE_DT);
		
		
		
		
		for(var i =0; i < gridRecord.length; i++){
			//console.log("I " + i);
			//console.log("I " + gridRecord[i].data['VAT_TYPE'] );
			
			if(gridRecord[i].data['VAT_AMT'] != 0 &&  (gridRecord[i].data['VAT_TYPE'] == null || gridRecord[i].data['VAT_TYPE'] == '')) {
				flag = 'F';
				msg = '부가세유형을 선택하세요.';			
				break;
			}else{
				flag = 'T';
			}
		}
		if(flag == 'T'){
		if (gridRecord.length > 0) {
			Ext.Msg.confirm('확인', '저장하시겠습니까?', function(button) {
				if (button == 'yes') {
					
//					store.each(function(rec, idx) {
//						rec.set('V_TYPE', 'I');
//					})

					store.sync({
						params : {
							V_TYPE : 'T1I',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_YYYYMM: Ext.getCmp('V_DATE').getValue(),
							V_ISSUE_DT : ISSUE_DT
						},
						callback : function(records, operation, success) {
//							store.reload();
							var tbController = S_M_SL_MGM_DISTR.app.getController("TbButtonController");
				    		tbController.selBtnClick();
						}
					});
				}
			});
		}
		}else{
			Ext.Msg.alert('확인', msg);
		}
	},
	

	xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('myGrid');
    	grid.saveDocumentAs({
            type: 'xlsx',
            title: '창고등록', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
		});
    }
});
