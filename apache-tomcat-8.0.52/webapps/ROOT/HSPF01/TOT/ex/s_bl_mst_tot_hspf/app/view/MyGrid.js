/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_BL_MST_TOT_HSPF.view.MyGrid', {
	extend : 'Ext.grid.Panel',
	alias : 'widget.myGrid',

	requires : [ 'S_BL_MST_TOT_HSPF.view.MyGridViewModel', 'Ext.view.Table', 'Ext.grid.column.RowNumberer', 'Ext.grid.column.Number', 'Ext.form.field.Number', 'Ext.grid.column.Date', 'Ext.selection.CheckboxModel', 'Ext.grid.plugin.Exporter', 'Ext.grid.plugin.CellEditing' ],

	viewModel : {
		type : 'mygrid'
	},

	id : 'myGrid',
	style : 'border: 1px solid #659DDC; padding: 5px;',
	bodyBorder : false,
	header : false,
	store : 'MyStore',
	// config : {
	// tbar : [ {
	// xtype : 'container',
	// flex : 1
	// }, {
	// xtype : 'button',
	// glyph : 'xf1c3@FontAwesome',
	// id : 'xlsxDown',
	// cfg : {
	// type : 'excel07',
	// ext : 'xlsx'
	// },
	// iconCls : 'grid-excel-btn',
	// margin : '0 3 0 0',
	//
	// } ]
	// },

	viewConfig : {
		enableTextSelection : true,
	},

	columns : [ {
		xtype : 'rownumberer',
		width : 40
	}, {
		xtype : 'gridcolumn',
		hidden : true,
		text : 'V_TYPE'
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'DN_NO',
		text : '출고번호',
		width : 150,
		sortable : true,
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'DN_SEQ',
		text : '출고순번',
		align : 'right',
		width : 85,
		sortable : true,
	}, {
		xtype : 'datecolumn',
		style : 'text-align: center; font-weight: bold;',
		text : '출고일',
		dataIndex : 'DN_DT',
		format : 'Y-m-d'
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		text : '매출채권형태',
		dataIndex : 'SALE_TYPE',
		align : 'center',
		hidden: true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		text : '매출채권형태',
		width : 120,
		dataIndex : 'SALE_TYPE_NM',
		sortable : true,
	},{
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		text : '매출처',
		dataIndex : 'S_BP_CD',
		align : 'center',
		width : 85,
		sortable : true,
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		text : '매출처명',
		width : 300,
		dataIndex : 'S_BP_NM',
		sortable : true,
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		sortable : true,
		dataIndex : 'ITEM_CD',
		text : '품목코드',
		width : 130
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		sortable : true,
		dataIndex : 'ITEM_NM',
		text : '품목명',
		width : 250
	}, 
	
	{
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		text : '출고수량',
		dataIndex : 'DN_QTY',
		format : '0,000.00',
		align : 'right',
		width : 130,
		summaryType : 'sum',
		summaryRenderer : function(value, summaryData, dataIndex) {
			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
		}
	}, 
	{
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		text : '단가',
		dataIndex : 'S_PRICE',
		format : '0,000.0000',
		align : 'right',
		width : 130,
	}, 
	
	{
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'PAY_DUR',
		text : 'PAY_DUR',
		format : '0,000',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'PAY_METH',
		text : 'PAY_METH',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'IN_TERMS',
		text : 'IN_TERMS',
		hidden : true
	}, 
	
	{
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'DISCHGE_PORT',
		text : 'DISCHGE_PORT',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'LOADING_PORT',
		text : 'LOADING_PORT',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'INV_NO',
		text : 'INV_NO',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'VESSEL_NM',
		text : 'VESSEL_NM',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'LOAD_DT',
		text : 'LOAD_DT',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'BL_DOC_NO',
		text : 'BL_DOC_NO',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'BL_LOADING_DT',
		text : 'BL_LOADING_DT',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'CC_DOC_NO',
		text : 'CC_DOC_NO',
		hidden : true
	}, ],

	selModel : {
		selType : 'checkboxmodel',
		listeners : {
			select : function(rowmodel, record, index, eOpts) {
				var flag = '';
				var msg = '';
				var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
				var selModel = Ext.getCmp('myGrid').getSelectionModel();
				var store = Ext.getStore('MyStore');
				var store1 = Ext.getStore('MyStore1');
				var store1Cnt = store1.getCount();
				var S_BP_CD2 = Ext.getCmp('V_S_BP_CD2').getValue();
				var V_SALE_TYPE = Ext.getCmp('V_SALE_TYPE').getValue();

				record.set('V_TYPE', 'V');
				if (S_BP_CD2 == '') {
					flag = 'T';
					Ext.getCmp('V_S_BP_CD2').setValue(record.get('S_BP_CD'));
					Ext.getCmp('V_S_BP_NM2').setValue(record.get('S_BP_NM'));
					Ext.getCmp('V_SALE_TYPE').setValue(record.get('SALE_TYPE'));
					Ext.getCmp('V_PAY_METH').setValue(record.get('PAY_METH'));
					Ext.getCmp('V_PAY_DUR').setValue(record.get('PAY_DUR'));
					Ext.getCmp('V_IN_TERMS').setValue(record.get('IN_TERMS'));
					
					Ext.getCmp('V_INVOICE_NO').setValue(record.get('INV_NO'));
					Ext.getCmp('V_INVOICE_DT').setValue(record.get('LOAD_DT'));
					Ext.getCmp('V_BL_DOC_NO').setValue(record.get('BL_DOC_NO'));
					Ext.getCmp('V_VESSEL_NM').setValue(record.get('VESSEL_NM'));
					Ext.getCmp('V_LOADING_DT').setValue(record.get('BL_LOADING_DT'));
					Ext.getCmp('V_ETD').setValue(record.get('BL_LOADING_DT'));
					Ext.getCmp('V_LOADING_PORT').setValue(record.get('LOADING_PORT'));
					Ext.getCmp('V_DISCHGE_PORT').setValue(record.get('DISCHGE_PORT'));
				} else if (S_BP_CD2 != record.get('S_BP_CD')) {
					flag = 'F';
					msg = '동일한 매출처를 선택하세요.';
				} else if (V_SALE_TYPE != record.get('SALE_TYPE')) {
					flag = 'F';
					msg = '동일한 매출채권형태를 선택하세요.';
				} else {
					flag = 'T';
				}

				if (flag == 'T') {
					var flag = 'GO';
					var PRICE2 = (record.get('S_PRICE') * 100000).toFixed(0) / 100000;
					var QTY2 = (record.get('DN_QTY') * 100).toFixed(0) / 100;
					store1.insert(store1Cnt, [ ({
						V_TYPE : 'ID',
						ITEM_CD : record.get('ITEM_CD'),
						ITEM_NM : record.get('ITEM_NM'),
						VAT_TYPE : 'C',
						VAT_AMT : 0,
						PRICE : PRICE2,
						DN_NO : record.get('DN_NO'),
						DN_SEQ : record.get('DN_SEQ'),
						QTY : QTY2,
						DOC_AMT : Math.round(PRICE2 * QTY2 * 100) / 100, 
						ED_DOC_NO : record.get('CC_DOC_NO'),
						ED_DT : record.get('LOAD_DT'),
					}) ]);

				} else {
					Ext.Msg.alert('확인', msg);
					selModel.deselect(record, true);
				}

			},
			deselect : function(rowmodel, record, index, eOpts) {
				var store = Ext.getStore('MyStore');
				var store1 = Ext.getStore('MyStore1');
				var selModel = Ext.getCmp('myGrid').getSelectionModel();
				var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();

				record.set('V_TYPE', '');
				store1.each(function(rec, idx) {
					if (rec.get('DN_NO') == record.get('DN_NO') && rec.get('DN_SEQ') == record.get('DN_SEQ')) {
						store1.remove(rec);
					}
				});
				store1.remove(record);

				if (store1.getCount() == 0) {
					Ext.getCmp('V_BL_NO').setValue('');

//					var nows = new Date();
					Ext.getCmp('V_LOADING_DT').setValue('');
					Ext.getCmp('V_S_BP_CD2').setValue('');
					Ext.getCmp('V_S_BP_NM2').setValue('');
					Ext.getCmp('V_BL_DOC_NO').setValue('');
					Ext.getCmp('V_ETA').setValue('');
					Ext.getCmp('V_ETD').setValue('');
					Ext.getCmp('V_INVOICE_NO').setValue('');
					Ext.getCmp('V_INVOICE_DT').setValue('');
					Ext.getCmp('V_ORIGIN_CNTRY').setValue('');
					Ext.getCmp('V_VESSEL_NM').setValue('');
					Ext.getCmp('V_IN_PLAN_DT').setValue('');
					Ext.getCmp('V_ETA').setValue('');
					Ext.getCmp('V_ETD').setValue('');
					Ext.getCmp('V_DISCHGE_PORT').setValue('');
					Ext.getCmp('V_LOADING_PORT').setValue('');
					Ext.getCmp('V_IN_TERMS').setValue(null);
					Ext.getCmp('V_PAY_METH').setValue(null);
					Ext.getCmp('V_SALE_GRP').setValue(null);
					Ext.getCmp('V_CUR').setValue('USD');
					Ext.getCmp('V_XCHG_RT').setValue(1);
					Ext.getCmp('V_SALE_TYPE').setValue('');

					store1.removeAll();
				}
			}

		}
	},
	plugins : [ {
		ptype : 'gridexporter'
	}, {
		ptype : 'cellediting',
	} ],
	features : [ {
	ftype : 'summary',
	dock : 'bottom'
	} ],

});