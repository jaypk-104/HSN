/*
 * File: app/view/MyPanel.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('A_AR_RECEIPT2.view.MyPanel2', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.mypanel2',

    requires: [
        'A_AR_RECEIPT2.view.MyPanelViewModel2',
        'Ext.grid.Panel',
        'Ext.form.FieldSet', 
		'Ext.form.FieldContainer', 
		'Ext.form.field.Date',
		'Ext.form.field.Text',
		'Ext.form.field.TextArea',
		'Ext.form.field.Number',
    ],

    viewModel: {
        type: 'mypanel2'
    },
    layout: 'fit',
    header: false,
    title: 'Tab 2',

    items: [
        {
            xtype: 'container',
            flex: 1,
            layout: {
                type: 'hbox',
                align: 'stretch'
            },
            items: [
            	{
                    xtype: 'gridpanel',
                    flex: 0.5,
                    style: 'border: 1px solid lightgray; padding: 5px;',
                    header: false,
                    title: 'My Grid Panel',
                    store: 'MyStore5',
                    id: 'myGrid5',
	                tbar: [
	                	{
	        			    id: 'gridDelBtn5',
	        			    text: '',
	        			    margin: '0 3 0 0',
	        			    glyph: 'xf056@FontAwesome',
	        			    iconCls: 'grid-del-btn',
	        			},
	                	{
		                      xtype: 'container',
		                      flex: 1
		                },
		                {
		                  	   xtype: 'button',
		                  	   id: 'arCfmBtn',
		                  	   margin: '0 3 0 0',
		                  	   text: '전표생성',
		                  	   style: 'background-color: white; border: 0.5px solid #3367d6;',
		                  	   cls: 'blue-btn',
		                  	   disabled: true,
		                },
		                {
		                  	   xtype: 'button',
		                  	   id: 'arCancelBtn',
		                  	   margin: '0 3 0 0',
		                  	   text: '전표취소',
		                  	   style: 'background-color: white; border: 0.5px solid #3367d6;',
		                  	   cls: 'blue-btn',
		                  	   disabled: true,
		                },
		                {
		                      xtype: 'button',
		                      glyph: 'xf1c3@FontAwesome',
		                      id: 'xlsxDown5',
		                      cfg: {
		                          type: 'excel07',
		                          ext: 'xlsx'
		                      },
		                      iconCls: 'grid-excel-btn',
		                }
		            ],
                    columns: [ {
        				xtype : 'rownumberer',
        				width : 40
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 114,
        				dataIndex : 'V_TYPE',
        				text : 'V_TYPE',
        				hidden : true
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 200,
        				dataIndex : 'REF_NO',
        				text : '참조번호',
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 100,
        				dataIndex : 'REF_TYPE',
        				text : '참조구분',
        				renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
        	                if(Ext.data.StoreManager.lookup('ac02Store').findRecord('DTL_CD',value) !==null)
        	                {
        	                    return Ext.data.StoreManager.lookup('ac02Store').findRecord('DTL_CD',value).get('DTL_NM');
        	                }
        	                return value;
        	            },
        				editor: {
        	        		xtype: 'combobox',
        	        		displayField: 'DTL_NM',
        	        		autoLoadOnValue: true,
        	        		valueField: 'DTL_CD',
        	        		editable: false,
        	        		store: Ext.create('Ext.data.Store',{
        	        			autoLoad: true,
        	        			storeId: 'ac02Store',
        	        			proxy: {
        	        		           type: 'ajax',
        	        		           extraParams: {
        	        		            	V_MAST_CD: 'AC02',
        	        		            	V_GRID: 'Y'
        	        		           },	
        	        		           api: {
        	        		               read: '/HSPF01/common/sql/Combobox.jsp'
        	        		           },
        	        		           reader: {
        	        		               type: 'json',
        	        		               rootProperty: 'resultList'
        	        		           }
        	        		       }
        	        		}),
        	        	}
        			},  {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 100,
        				dataIndex : 'DEPT_CD',
        				text : '부서',
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 120,
        				dataIndex : 'DEPT_NM',
        				text : '부서명',
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 100,
        				dataIndex : 'BP_CD',
        				text : '거래처',
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 150,
        				dataIndex : 'BP_NM',
        				text : '거래처명',
        			}, {
        		    	xtype: 'datecolumn',
        		    	style: 'text-align: center; font-weight: bold;',
        		    	text: '거래일자',
        		    	dataIndex: 'BANK_DT',
        		    	format: 'Y-m-d',
        		    	width: 100,
        		    }, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 100,
        				dataIndex : 'BANK_CD',
        				text : '은행코드',
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 120,
        				dataIndex : 'BANK_NM',
        				text : '은행명',
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 100,
        				dataIndex : 'CUR',
        				text : '화폐단위',
        			}, {
        				xtype : 'numbercolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 120,
        				align : 'end',
        				dataIndex : 'LOC_AMT',
        				text : '전체금액',
        				format : '0,000',
        				summaryType: 'sum',
        	            summaryRenderer: function (value, summaryData, dataIndex) {
        		            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
        		        },
        			}, {
        				xtype : 'numbercolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 120,
        				align : 'end',
        				dataIndex : 'BF_LOC_AMT',
        				text : '적용전 잔액',
        				format : '0,000',
        				summaryType: 'sum',
        	            summaryRenderer: function (value, summaryData, dataIndex) {
        		            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
        		        },
        			}, {
        				xtype : 'numbercolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 120,
        				align : 'end',
        				dataIndex : 'BAL_AMT',
        				text : '적용후 잔액',
        				format : '0,000',
        				summaryType: 'sum',
        	            summaryRenderer: function (value, summaryData, dataIndex) {
        		            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
        		        },
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 100,
        				dataIndex : 'TEMP_GL_YN',
        				text : '전표생성유무',
        			}, {
        				xtype : 'numbercolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 120,
        				align : 'end',
        				dataIndex : 'REMAIN_AMT',
        				text : '잔액',
        				format : '0,000',
        				hidden: true,
        				summaryType: 'sum',
        	            summaryRenderer: function (value, summaryData, dataIndex) {
        		            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
        		        },
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 100,
        				dataIndex : 'BANK_ACCT_NO',
        				text : 'BANK_ACCT_NO',
        				hidden : true
        			}, ],
                    viewConfig: {
                    	enableTextSelection: true,
                    },
                    selModel: {
                        selType: 'checkboxmodel',
                        checkOnly: true,
                        listeners : {
                    		deselect : function(rowmodel, record, index, eOpts) {
                    			var store1 = Ext.getStore('MyStore1');
                    			var store5 = Ext.getStore('MyStore5');
                    			var calcStore = Ext.getStore('CalcStore');
                    			
                    			store1.each(function(rec,idx) {
//                    				if(rec.get('V_TYPE') == 'I'){
                    					rec.set('REMAIN_AMT', rec.get('REMAIN_LOC_AMT'));
                    					rec.set('REMAIN_DOC_AMT', rec.get('REMAIN_LOC_AMT'));
                    					rec.set('RECV_AMT', rec.get('LOC_AMT')-rec.get('REMAIN_LOC_AMT'));
                    					rec.set('RECV_LOC_AMT', rec.get('LOC_AMT')-rec.get('REMAIN_LOC_AMT'));
//                    				}
                    			});
                    			
                    			store5.each(function(rec,idx) {
//                    				if(rec.get('V_TYPE') == 'I'){
                    					rec.set('BAL_AMT', rec.get('REMAIN_AMT'));
//                    				}
                    			});
                    			
                    			calcStore.removeAll();
                    		},
                    	}
                    },   
                    plugins: [
                        {
                            ptype: 'gridexporter'
                        },
                    ],
                    features : [ {
                		ftype: 'summary',
                        dock: 'bottom'
                	} ]
                },
                {
                    xtype: 'gridpanel',
                    flex: 1,
                    style: 'border: 1px solid lightgray; padding: 5px;',
                    header: false,
                    title: 'My Grid Panel',
                    store: 'MyStore1',
                    id: 'myGrid1',
	                tbar: [
	                	{
	        			    id: 'gridDelBtn1',
	        			    text: '',
	        			    margin: '0 3 0 0',
	        			    glyph: 'xf056@FontAwesome',
	        			    iconCls: 'grid-del-btn',
	        			},
	                	{
	                  	  xtype: 'button',
	                  	  id: 'findTargetBtn',
	                  	  margin: '0 3 0 0',
	                  	  text: '수금대상팝업',
	                  	  style: 'background-color: white; border: 0.5px solid #3367d6;',
	                  	  cls: 'blue-btn',
	                    },
	                    {
		                  	  xtype: 'button',
		                  	  id: 'applyBtn',
		                  	  margin: '0 3 0 0',
		                  	  text: '적용',
		                  	  style: 'background-color: white; border: 0.5px solid #3367d6;',
		                  	  cls: 'blue-btn',
		                    },
	                	{
		                      xtype: 'container',
		                      flex: 1
		                },
		                {
		                      xtype: 'button',
		                      glyph: 'xf1c3@FontAwesome',
		                      id: 'xlsxDown1',
		                      cfg: {
		                          type: 'excel07',
		                          ext: 'xlsx'
		                      },
		                      iconCls: 'grid-excel-btn',
		                }
		            ],
                    columns: [ {
        				xtype : 'rownumberer',
        				width : 40
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 114,
        				dataIndex : 'V_TYPE',
        				text : 'V_TYPE',
        				hidden : true
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 100,
        				dataIndex : 'AR_TYPE',
        				text : '채권구분',
        				renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
        	                if(Ext.data.StoreManager.lookup('storeMA20').findRecord('DTL_CD',value) !==null)
        	                {
        	                    return Ext.data.StoreManager.lookup('storeMA20').findRecord('DTL_CD',value).get('DTL_NM');
        	                }
        	                return value;
        	            },
        	            editor: {
        	        		xtype: 'combobox',
        	        		displayField: 'DTL_NM',
        	        		autoLoadOnValue: true,
        	        		valueField: 'DTL_CD',
        	        		editable: false,
        	        		store: Ext.create('Ext.data.Store',{
        	        			autoLoad: true,
        	        			storeId: 'storeMA20',
        	        			proxy: {
        	        		           type: 'ajax',
        	        		           extraParams: {
        	        		            	V_MAST_CD: 'MA20',
        	        		            	V_GRID: 'Y'
        	        		           },	
        	        		           api: {
        	        		               read: '/HSPF01/common/sql/Combobox.jsp'
        	        		           },
        	        		           reader: {
        	        		               type: 'json',
        	        		               rootProperty: 'resultList'
        	        		           }
        	        		       }
        	        		}),
        	        		listConfig: {
        	                    itemTpl: [
        	                        '<div>{DTL_NM}</div>'
        	                    ]
        	                },
        	        	}
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 150,
        				dataIndex : 'AR_NO',
        				text : '채권번호',
        			}, {
        		    	xtype: 'datecolumn',
        		    	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        		    	text: '채권발생일',
        		    	dataIndex: 'AR_DT',
        		    	format: 'Y-m-d',
        		    	width: 100,
        		    }, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 100,
        				dataIndex : 'BP_CD',
        				text : '거래처',
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 150,
        				dataIndex : 'BP_NM',
        				text : '거래처명',
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 110,
        				dataIndex : 'ACCT_CD',
        				text : '계정',
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 150,
        				dataIndex : 'ACCT_NM',
        				text : '계정명',
        			},
//        			{
//        				xtype : 'gridcolumn',
//        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
//        				width : 120,
//        				dataIndex : 'DR_CR_FG',
//        				text : '차대구분',
//        			}, 
        			{
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 100,
        				dataIndex : 'CUR',
        				text : '통화',
        			}, {
        				xtype : 'numbercolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 110,
        				align : 'end',
        				dataIndex : 'XCH_RATE',
        				text : '환율',
        				format : '0,000.00',
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 120,
        				dataIndex : '4',
        				text : '결제구분',
        				hidden: true
        			}, {
        		    	xtype: 'datecolumn',
        		    	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        		    	text: '결제만기일',
        		    	dataIndex: '5',
        		    	format: 'Y-m-d',
        		    	width: 100,
        		    	hidden: true
        		    }, {
        				xtype : 'numbercolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 120,
        				align : 'end',
        				dataIndex : 'DOC_AMT',
        				text : '외화채권금액',
        				format : '0,000.00',
        				summaryType: 'sum',
        	            summaryRenderer: function (value, summaryData, dataIndex) {
        		            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
        		        },
        			}, {
        				xtype : 'numbercolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 120,
        				align : 'end',
        				dataIndex : 'LOC_AMT',
        				text : '원화채권금액',
        				format : '0,000',
        				summaryType: 'sum',
        	            summaryRenderer: function (value, summaryData, dataIndex) {
        		            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
        		        },
        			}, {
        				xtype : 'numbercolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 120,
        				align : 'end',
        				dataIndex : 'REMAIN_DOC_AMT',
        				text : '외화잔액',
        				format : '0,000.00',
        				summaryType: 'sum',
        	            summaryRenderer: function (value, summaryData, dataIndex) {
        		            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
        		        },
        			}, {
        				xtype : 'numbercolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 120,
        				align : 'end',
        				dataIndex : 'REMAIN_AMT',
        				text : '원화잔액',
        				format : '0,000',
        				summaryType: 'sum',
        	            summaryRenderer: function (value, summaryData, dataIndex) {
        		            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
        		        },
        			}, {
        				xtype : 'numbercolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 120,
        				align : 'end',
        				dataIndex : 'REMAIN_LOC_AMT',
        				text : '원화잔액',
        				format : '0,000',
        				hidden: true
        			}, {
        				xtype : 'numbercolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 120,
        				align : 'end',
        				dataIndex : 'RECV_AMT',
        				text : '외화수금금액',
        				format : '0,000.00',
        				summaryType: 'sum',
        	            summaryRenderer: function (value, summaryData, dataIndex) {
        		            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
        		        },
        			}, {
        				xtype : 'numbercolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 120,
        				align : 'end',
        				dataIndex : 'RECV_LOC_AMT',
        				text : '원화수금금액',
        				format : '0,000',
        				summaryType: 'sum',
        	            summaryRenderer: function (value, summaryData, dataIndex) {
        		            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
        		        },
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 150,
        				dataIndex : 'REMARK',
        				text : '비고',
        			}, {
        		    	xtype: 'datecolumn',
        		    	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        		    	text: '만기일',
        		    	dataIndex: 'EXP_DT',
        		    	format: 'Y-m-d',
        		    	width: 100,
        		    }, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 100,
        				dataIndex : 'DEPT_CD',
        				text : '부서',
        			}, {
        				xtype : 'gridcolumn',
        				style : 'font-size: 12px; text-align: center; font-weight: bold;',
        				width : 130,
        				dataIndex : 'DEPT_NM',
        				text : '부서명',
        			}, ],
                    viewConfig: {
                    	enableTextSelection: true,
                    },
                    selModel: {
                        selType: 'checkboxmodel',
                        checkOnly: true,
                        listeners : {
                    		deselect : function(rowmodel, record, index, eOpts) {
                    			var store1 = Ext.getStore('MyStore1');
                    			var store5 = Ext.getStore('MyStore5');
                    			var calcStore = Ext.getStore('CalcStore');
                    			
                    			if(record.get('V_TYPE') == 'D') return;
                    			
                    			store1.each(function(rec,idx) {
//                    				if(rec.get('V_TYPE') == 'I'){
                    					rec.set('REMAIN_AMT', rec.get('REMAIN_LOC_AMT'));
                    					rec.set('REMAIN_DOC_AMT', rec.get('REMAIN_LOC_AMT'));
                    					rec.set('RECV_AMT', rec.get('LOC_AMT')-rec.get('REMAIN_LOC_AMT'));
                    					rec.set('RECV_LOC_AMT', rec.get('LOC_AMT')-rec.get('REMAIN_LOC_AMT'));
//                    				}
                    			});
                    			
                    			store5.each(function(rec,idx) {
//                    				if(rec.get('V_TYPE') == 'I'){
                    					rec.set('BAL_AMT', rec.get('REMAIN_AMT'));
//                    				}
                    			});
                    			
                    			calcStore.removeAll();
                    		},
                    	}
                    },   
                    plugins: [
                        {
                            ptype: 'gridexporter'
                        },
                    ],
                    features : [ {
                		ftype: 'summary',
                        dock: 'bottom'
                	} ]
                },
            ]
        }
    ]

});