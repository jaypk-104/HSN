/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_GR_LOC_TOT_HSPF.view.MyGrid', {
	extend : 'Ext.grid.Panel',
	alias : 'widget.myGrid',

	requires : [ 
		'M_GR_LOC_TOT_HSPF.view.MyGridViewModel', 
		'Ext.view.Table', 
		'Ext.grid.column.RowNumberer', 
		'Ext.grid.column.Number', 
		'Ext.grid.column.Date', 
		'Ext.selection.CheckboxModel', 
		'Ext.grid.plugin.Exporter', 
		'Ext.grid.plugin.CellEditing' 
	],

	viewModel : {
		type : 'mygrid'
	},

	id : 'myGrid',
	store : 'MyStore',
	style : 'border: 1px solid lightgray; padding: 5px;',
	title : 'My Grid Panel',
	header : false,

	config : {
		tbar : [ {
			id : 'gridAddBtn',
			text : '',
			margin : '0 3 0 0',
			glyph : 'xf055@FontAwesome',
			iconCls : 'grid-add-btn',
			hidden: true
		}, {
			id : 'gridDelBtn',
			text : '',
			margin : '0 3 0 0',
			glyph : 'xf056@FontAwesome',
			iconCls : 'grid-del-btn',
			hidden: true
		}, {
			id : 'gridSaveBtn',
			xtype : 'button',
			glyph : 'xf0c7@FontAwesome',
			iconCls : 'grid-save-btn',
			margin : '0 3 0 0',
			hidden: true
		}, {
			xtype : 'container',
			flex : 1
		}, {
			xtype : 'button',
			glyph : 'xf1c3@FontAwesome',
			id : 'xlsxDown',
			cfg : {
				type : 'excel07',
				ext : 'xlsx'
			},
			iconCls : 'grid-excel-btn',
			margin : '0 3 0 0',
		} ]
	},

	viewConfig : {
		enableTextSelection : true,
	},

	columns : [ {
		xtype : 'rownumberer',
		width : 40
	}, {
		xtype : 'gridcolumn',
		text : 'V_TYPE',
		hidden : true,
	}, {
		xtype : 'datecolumn',
		dataIndex : 'MVMT_DT',
		style : 'text-align: center; font-weight: bold;',
		text : '입고일',
		align : 'center',
		format : 'Y-m-d',
		width : 120
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'MVMT_NO',
		style : 'text-align: center; font-weight: bold;',
		text : '입고번호',
		width : 150,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'BP_CD',
		style : 'text-align: center; font-weight: bold;',
		text : '공급처',
		width : 100,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'BP_NM',
		style : 'text-align: center; font-weight: bold;',
		text : '공급처명',
		width : 150,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'ITEM_CD',
		style : 'text-align: center; font-weight: bold;',
		text : '품목코드',
		width : 120,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'ITEM_NM',
		style : 'text-align: center; font-weight: bold;',
		text : '품목명',
		width : 200,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'IV_TYPE',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		text : '입고유형',
		width : 120,
        align: 'center',
        filter: { 
    		type : 'list',
        },
        renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
            if(Ext.data.StoreManager.lookup('storeMA02').findRecord('DTL_CD',value) !==null)
            {
                return Ext.data.StoreManager.lookup('storeMA02').findRecord('DTL_CD',value).get('DTL_NM');
            }
            return value;
        },
        editor: {
    		xtype: 'combobox',
    		displayField: 'DTL_NM',
    		autoLoadOnValue: true,
    		valueField: 'DTL_CD',
    		editable: false,
    		store: Ext.create('Ext.data.Store',{
    			autoLoad: true,
    			storeId: 'storeMA02',
    			proxy: {
    		           type: 'ajax',
    		           extraParams: {
    		            	V_MAST_CD: 'MA02',
    		            	V_GRID: 'Y'
    		           },	
    		           api: {
    		               read: '/HSPF01/common/sql/Combobox.jsp'
    		           },
    		           reader: {
    		               type: 'json',
    		               rootProperty: 'resultList'
    		           }
    		       }
    		}),
    		listConfig: {
                itemTpl: [
                    '<div>{DTL_NM}</div>'
                ]
            },
    	}
	}, {
        xtype: 'gridcolumn',
        style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
        width: 100,
        dataIndex: 'CUR',
        text: '화폐단위',
        align: 'center',
        renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
            if(Ext.data.StoreManager.lookup('storeCUR').findRecord('DTL_CD',value) !==null)
            {
                return Ext.data.StoreManager.lookup('storeCUR').findRecord('DTL_CD',value).get('DTL_NM');
            }
            return value;
        },
        editor: {
    		xtype: 'combobox',
    		displayField: 'DTL_NM',
    		autoLoadOnValue: true,
    		valueField: 'DTL_CD',
    		editable: false,
    		store: Ext.create('Ext.data.Store',{
    			autoLoad: true,
    			storeId: 'storeCUR',
    			proxy: {
    		           type: 'ajax',
    		           extraParams: {
    		            	V_MAST_CD: 'BA04',
    		            	V_GRID: 'Y'
    		           },	
    		           api: {
    		               read: '/HSPF01/common/sql/Combobox.jsp'
    		           },
    		           reader: {
    		               type: 'json',
    		               rootProperty: 'resultList'
    		           }
    		       }
    		}),
    		listConfig: {
                itemTpl: [
                    '<div>{DTL_NM}</div>'
                ]
            },
    	}
    }, {
		xtype : 'gridcolumn',
		dataIndex : 'UNIT',
		style : 'text-align: center; font-weight: bold;',
		text : '단위',
		align : 'center',
		width : 100,
	}, {
		xtype : 'numbercolumn',
		dataIndex : 'QTY',
		style : 'text-align: center; font-weight: bold;',
		align : 'end',
		text : '입고수량',
		width : 120,
		format : '0,000.00',
		summaryType : 'sum',
		summaryRenderer : function(value, summaryData, dataIndex) {
			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
		},
		exportStyle: {
  			 format : 'Qty',
  			 alignment: {
  				 horizontal: 'Right'
  			 },
       },
	}, {
		xtype : 'numbercolumn',
		dataIndex : 'N_IV_QTY',
		style : 'text-align: center; font-weight: bold;',
		align : 'end',
		text : '미매입수량',
		width : 120,
		format : '0,000.00',
		hidden: true,
		summaryType : 'sum',
		summaryRenderer : function(value, summaryData, dataIndex) {
			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
		},
		exportStyle: {
  			 format : 'Qty',
  			 alignment: {
  				 horizontal: 'Right'
  			 },
       },
	}, {
		xtype : 'numbercolumn',
		dataIndex : 'IV_PRC',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		align : 'end',
		text : '단가',
		width : 120,
		format : '0,000.0000',
		editor : {
			xtype : 'numberfield',
			format : '0,000.0000',
			decimalPrecision : 4,
			align : 'right'
		},
		exportStyle: {
  			 format : 'Fixed',
  			 alignment: {
  				 horizontal: 'Right'
  			 },
       },
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'PO_USR_NM',
		style : 'text-align: center; font-weight: bold;',
		text : '발주등록자',
		width : 100,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'GR_USR_NM',
		style : 'text-align: center; font-weight: bold;',
		text : '입고등록자',
		width : 100,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'REMARK',
		style : 'text-align: center; font-weight: bold;',
		text : '비고',
		width : 200,
	}, ],
	selModel : {
		selType : 'checkboxmodel',
		listeners : {}
	},
	features : [ {
		ftype: 'summary',
        dock: 'bottom'
	} ],
	plugins : [ {
		ptype : 'gridexporter'
	}, {
		ptype : 'cellediting',
		clicksToEdit : 1,
	}, {
        ptype: 'clipboard',
    }, {
		ptype: 'gridfilters' 
    }, ],

});