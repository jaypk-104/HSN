/*
 * File: app/controller/TbButtonController.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_DN_TO_SRM_STYLE_HSPF.controller.TbButtonController', {
    extend: 'Ext.app.Controller',

    stores: [
        'MyStore'
    ],

    control: {
        "#selBtn": {
            click: 'selBtnClick'
        },
        "#saveBtn": {
            click: 'saveBtnClick'
        },
        "#delBtn": {
            click: 'delBtnClick'
        },
        "#clsBtn": {
            click: 'clsBtnClick'
        },
        "mysearchform textfield[name=search_field]": {
            specialkey: 'tfEnter'
        },
        '#chk' : {
    		change: 'chkChange'
		},
    },

    chkChange: function(field, newValue, oldValue, eOpts) {

    	var tbController = S_DN_TO_SRM_STYLE_HSPF.app.getController("TbButtonController");
    	tbController.selBtnClick();
    	
    },
    
    selBtnClick: function(button, e, eOpts) {
    	if( Ext.getCmp('V_DN_USR').getValue() == null || Ext.getCmp('V_DN_USR').getValue() == ''){
    		Ext.Msg.alert('확인','발주자를 입력하세요.');
    	}
    	else if(Ext.getCmp('V_DN_DT').getValue() == null || Ext.getCmp('V_DN_DT').getValue() == ''){
    		Ext.Msg.alert('확인','출고일을 입력하세요.');
    	} else if (Ext.getCmp('V_FROM_SL_CD').getValue() == '(필수)') {
    		Ext.Msg.alert('확인','FROM 창고를 선택하세요.');
    	}    	
    	else {
    		var store = this.getMyStoreStore();
        	store.removeAll();
        	var V_CHECK = Ext.getCmp('chk').getValue();
        	if(V_CHECK == true) {
        		V_CHECK = 'N';
        	} else {
        		V_CHECK = '';
        	}
        	
        	store.load({
        		params: {
        			V_TYPE: 'S',
        			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
        			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
        			V_DN_NO: Ext.getCmp('V_DN_NO').getValue(),
        			V_DN_DT: Ext.getCmp('V_DN_DT').getValue(),
                    V_DN_USR: Ext.getCmp('V_DN_USR').getValue(),
                    V_S_BP_CD: Ext.getCmp('V_S_BP_CD').getValue(),
                    V_CUST_PO_NO: Ext.getCmp('V_CUST_PO_NO').getValue(),
                    V_FROM_SL_CD: Ext.getCmp('V_FROM_SL_CD').getValue(),
                    V_TO_SL_CD: Ext.getCmp('V_TO_SL_CD').getValue(),
                    V_CHECK: V_CHECK
        		},
        		callback: function(records,operations,success){
        			
        		}
        	});
    	}
    },

    saveBtnClick: function(button, e, eOpts) {
        alert('save');
    },

    delBtnClick: function(button, e, eOpts) {
        alert('delete');
    },

    clsBtnClick: function(button, e, eOpts) {
    	var tab=parent.Ext.getCmp('myTab');
        var activeTab=tab.getActiveTab();
        var tabIndex=tab.items.indexOf(activeTab);
        tab.remove(tabIndex,true);
    },

    tfEnter: function(field, e, eOpts) {
    	if (e.getKey() == e.ENTER) {
    		this.selBtnClick();
    	}
    }

});
