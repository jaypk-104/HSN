/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_BL_TOT_HSPF.view.MyGrid', {
	extend : 'Ext.grid.Panel',
	alias : 'widget.myGrid',

	requires : [ 'M_BL_TOT_HSPF.view.MyGridViewModel', 'Ext.view.Table', 'Ext.grid.column.RowNumberer', 'Ext.grid.column.Number', 'Ext.form.field.Number', 'Ext.grid.column.Date', 'Ext.selection.CheckboxModel', 'Ext.grid.plugin.Exporter', 'Ext.grid.plugin.CellEditing' ],

	config : {},

	viewModel : {
		type : 'mygrid'
	},
	id : 'myGrid',
	style : 'border: 1px solid #659DDC; padding: 5px;',
	bodyBorder : false,
	header : false,
	store : 'MyStore',
	config : {
		tbar : [ 
		   {
	     	   xtype: 'button',
	    	   id: 'blClsQtyBtn',
	    	   margin: '0 3 0 0',
	    	   text: '잔량삭제',
	           	style: 'background-color: white; border: 0.5px solid #3367d6;',
	           	cls: 'blue-btn',
	       }, {
				xtype : 'container',
				flex : 1
			}, {
				xtype : 'button',
				glyph : 'xf1c3@FontAwesome',
				id : 'xlsxDown',
				cfg : {
					type : 'excel07',
					ext : 'xlsx'
				},
				iconCls : 'grid-excel-btn',
				margin : '0 3 0 0',

		} ]
	},

	viewConfig : {
		enableTextSelection : true,
	},

	columns : [ {
		xtype : 'rownumberer',
		width : 40
	}, {
		xtype : 'gridcolumn',
		hidden : true,
		text : 'V_TYPE'
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		sortable : true,
		dataIndex : 'PO_USR_NM',
		enableTextSelection : true,
		text : '발주자',
		align : 'center',
		filter: { 
    		type : 'list',
        },
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'CONT_REMARK',
		enableTextSelection : true,
		text : '컨테이너분류',
		width : 110,
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'PO_NO',
		enableTextSelection : true,
		text : '발주번호',
		width : 150
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		sortable : true,
		dataIndex : 'PO_SEQ',
		enableTextSelection : true,
		text : '발주순번',
		align : 'right',
		width : 85
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'LC_NO',
		enableTextSelection : true,
		text : 'LC관리번호',
		width : 15,
		hidden : true,
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		dataIndex : 'LC_DOC_NO',
		enableTextSelection : true,
		text : 'LC번호',
		width : 150
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		sortable : true,
		dataIndex : 'PO_TYPE',
		enableTextSelection : true,
		text : 'PO_TYPE',
		width : 85,
		hidden : true
	}, {
		xtype : 'datecolumn',
		style : 'text-align: center; font-weight: bold;',
		text : 'L/C오픈일',
		dataIndex : 'OPEN_DT',
		format : 'Y-m-d'
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		sortable : true,
		enableTextSelection : true,
		text : '공급사',
		dataIndex : 'M_BP_CD',
		align : 'center',
		width : 85,
		filter: { 
    		type : 'list',
        },
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 170,
		sortable : true,
		dataIndex : 'M_BP_NM',
		enableTextSelection : true,
		text : '공급사명',
		filter: { 
    		type : 'list',
        },
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		sortable : true,
		dataIndex : 'ITEM_CD',
		enableTextSelection : true,
		text : '품목코드',
		width : 130,
		filter: { 
    		type : 'list',
        },

	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		sortable : true,
		dataIndex : 'ITEM_NM',
		enableTextSelection : true,
		text : '품목명',
		width : 170,
		filter: { 
    		type : 'list',
        },
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		sortable : true,
		dataIndex : 'UNIT',
		enableTextSelection : true,
		text : '단위',
		width : 80
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		sortable : true,
		dataIndex : 'SPEC',
		enableTextSelection : true,
		text : '규격',
		width : 130,
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		sortable : true,
		dataIndex : 'CUR',
		enableTextSelection : true,
		text : '화폐단위',
	}, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		text : '환율',
		dataIndex : 'XCH_RATE',
		format : '0,000.00',
		align : 'right'
	}, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		text : 'B/L미등록수량',
		dataIndex : 'BL_REMAIN_QTY',
		format : '0,000.00',
		align : 'right',
		summaryType : 'sum',
		summaryRenderer : function(value, summaryData, dataIndex) {
			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
		},
		width : 130
	}, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		text : '총 수량',
		dataIndex : 'QTY',
		format : '0,000.00',
		align : 'right',
		summaryType : 'sum',
		summaryRenderer : function(value, summaryData, dataIndex) {
			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
		}
	}, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		text : '단가',
		dataIndex : 'PRICE',
		format : '0,000.0000',
		align : 'right'
	}, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		text : '금액',
		dataIndex : 'DOC_AMT',
		format : '0,000.0000',
		align : 'right',
		summaryType : 'sum',
		summaryRenderer : function(value, summaryData, dataIndex) {
			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.0000') + "<font>";
		},
		width : 130
	}, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		text : '자국금액',
		dataIndex : 'LOC_AMT',
		format : '0,000',
		align : 'right',
		summaryType : 'sum',
		summaryRenderer : function(value, summaryData, dataIndex) {
			return "<font color='green'>" + Ext.util.Format.number(value, '0,000') + "<font>";
		},
		width : 130
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		sortable : true,
		dataIndex : 'IN_TERMS_NM',
		enableTextSelection : true,
		text : '가격조건',
		width : 250
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		sortable : true,
		dataIndex : 'PAY_METH_NM',
		enableTextSelection : true,
		text : '결제방법',
		width : 250
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		sortable : true,
		dataIndex : 'TRANSPORT_NM',
		enableTextSelection : true,
		text : '운송방법',
		width : 130,
		hidden : true
	}, 
	{
		xtype : 'gridcolumn',
		text : 'LC_NO',
		dataIndex : 'LC_NO',
		style : 'text-align: center; font-weight: bold; ',
		width : 150
	}, {
		xtype : 'gridcolumn',
		text : 'LC_SEQ',
		dataIndex : 'LC_SEQ',
		style : 'text-align: center; font-weight: bold; ',
		width : 90,
		align : 'right',
	}, {
		xtype : 'gridcolumn',
		text : 'CONT_MGM_NO',
		dataIndex : 'CONT_MGM_NO',
		style : 'text-align: center; font-weight: bold; ',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		text : 'FIRST_YN',
		dataIndex : 'FIRST_YN',
		style : 'text-align: center; font-weight: bold; ',
		hidden : true
	} ],
	selModel : {
		selType : 'checkboxmodel',
		listeners : {
			select : function(rowmodel, record, index, eOpts) {
				var M_BP_CD = record.get('M_BP_CD');
				var PO_TYPE = record.get('PO_TYPE');
				var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
				var flag = '';
				var msg = '';
				var selModel = Ext.getCmp('myGrid').getSelectionModel();
				var store = Ext.getStore('MyStore');
				var store1 = Ext.getStore('MyStore1');
				var store1Cnt = store1.getCount();
				var BL_NO = Ext.getCmp('V_BL_NO').getValue();

				record.set('V_TYPE', 'V');

				var flag = '';
				var M_BP_CD2 = Ext.getCmp('V_M_BP_CD2').getValue();
				var PAY_METH = Ext.getCmp('V_PAY_METH').getValue();

				if (M_BP_CD2 == '') {
					flag = 'T';
					Ext.getCmp('V_M_BP_CD2').setValue(record.get('M_BP_CD'));
					Ext.getCmp('V_M_BP_NM2').setValue(record.get('M_BP_NM'));
					Ext.getCmp('V_IV_TYPE').setValue(record.get('PO_TYPE'));
					Ext.getCmp('V_PAY_METH').setValue(record.get('PAY_METH'));
					Ext.getCmp('V_IN_TERMS').setValue(record.get('IN_TERMS'));
					Ext.getCmp('V_CUR').setValue(record.get('CUR'));
					Ext.getCmp('V_XCH_RATE').setValue(record.get('XCH_RATE'));
					Ext.getCmp('V_TRANS_TYPE').setValue(record.get('TRANSPORT'));
					Ext.getCmp('V_BL_TYPE').setValue('FCL');
				} else if (M_BP_CD2 != record.get('M_BP_CD')) {
					flag = 'F';
					msg = '동일한 공급사를 선택하세요.';
				} else if (PAY_METH != record.get('PAY_METH')) {
					flag = 'F';
					msg = '결제방법이 일치하지 않습니다.';
				} else {
					flag = 'T';
				}

				if (flag == 'T') {

					var flag = 'GO';
					var V_EXPECT_LOC_AMT = Number(Ext.getCmp('V_EXPECT_LOC_AMT').getValue().replace(/,/gi, ''));
					var XCH_RATE = Ext.getCmp('V_XCH_RATE').getValue();
					V_EXPECT_LOC_AMT += Math.round(record.get('DOC_AMT') * XCH_RATE);
					Ext.getCmp('V_EXPECT_LOC_AMT').setValue(Ext.util.Format.number(V_EXPECT_LOC_AMT, '0,000.0000'));

					store1.each(function(rec, idx) {
						if (((rec.get('PO_NO') == record.get('PO_NO')) && ((rec.get('PO_SEQ') == record.get('PO_SEQ')) && ((rec.get('CONT_MGM_NO') == record.get('CONT_MGM_NO')))))) {
							rec.set('QTY', rec.get('QTY') + record.get('BL_REMAIN_QTY'));
							rec.set('DOC_AMT', rec.get('QTY') * rec.get('PRICE'));
							rec.set('LOC_AMT', rec.get('QTY') * rec.get('PRICE') * record.get('XCH_RATE'));
							flag = 'STOP';
						}
					});

					if (flag != 'STOP') {
						store1.insert(store1Cnt, [ ({
							V_TYPE : 'V',
							ITEM_CD : record.get('ITEM_CD'),
							ITEM_NM : record.get('ITEM_NM'),
							SPEC : record.get('SPEC'),
							UNIT : record.get('UNIT'),
							PRICE : record.get('PRICE'),
							DOC_AMT : record.get('DOC_AMT'),
							LOC_AMT : record.get('LOC_AMT'),
							PO_NO : record.get('PO_NO'),
							PO_SEQ : record.get('PO_SEQ'),
//							ORIGIN : record.get('ORIGIN'),
//							PLANT_NO : record.get('PLANT_NO'),
							QTY : record.get('BL_REMAIN_QTY'),
							CONT_MGM_NO : record.get('CONT_MGM_NO'),
							LC_NO : record.get('LC_NO'),
							LC_SEQ : record.get('LC_SEQ'),
						}) ]);
					}

					// 공급사
					Ext.getCmp('V_M_BP_CD2').setValue(record.get('M_BP_CD'));
					Ext.getCmp('V_M_BP_NM2').setValue(record.get('M_BP_NM'));
					Ext.getCmp('V_IV_TYPE').setValue(record.get('PO_TYPE'));
					Ext.getCmp('V_PAY_METH').setValue(record.get('PAY_METH'));
					Ext.getCmp('V_IN_TERMS').setValue(record.get('IN_TERMS'));
					Ext.getCmp('V_CUR').setValue(record.get('CUR'));
//					Ext.getCmp('V_XCH_RATE').setValue(record.get('XCH_RATE'));
					Ext.getCmp('V_TRANS_TYPE').setValue(record.get('TRANSPORT'));
					
					// 첫번째 BL 체크
					if(record.get('FIRST_YN') == 'Y'){
						Ext.getCmp('V_FIRST_YN').setValue(true);
					}

				} else {
					Ext.Msg.alert('확인', msg);
					selModel.deselect(record, true);
				}
				// }

			},
			deselect : function(rowmodel, record, index, eOpts) {
				var store = Ext.getStore('MyStore');
				var store1 = Ext.getStore('MyStore1');
				var selModel = Ext.getCmp('myGrid').getSelectionModel();
				var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
				record.set('V_TYPE', '');

				var V_EXPECT_LOC_AMT = Number(Ext.getCmp('V_EXPECT_LOC_AMT').getValue().replace(/,/gi, ''));

				var XCH_RATE = Ext.getCmp('V_XCH_RATE').getValue();
				V_EXPECT_LOC_AMT -= Math.round(record.get('DOC_AMT') * XCH_RATE);
				Ext.getCmp('V_EXPECT_LOC_AMT').setValue(Ext.util.Format.number(V_EXPECT_LOC_AMT, '0,000.0000'));

				store1.each(function(rec, idx) {
					if (((rec.get('PO_NO') == record.get('PO_NO')) && ((rec.get('PO_SEQ') == record.get('PO_SEQ')) && ((rec.get('CONT_MGM_NO') == record.get('CONT_MGM_NO')) && ((record.get('BL_REMAIN_QTY') == rec.get('PO_QTY'))))))) {
						store1.remove(rec);
					} else if (((rec.get('PO_NO') == record.get('PO_NO')) && ((rec.get('PO_SEQ') == record.get('PO_SEQ')) && ((rec.get('CONT_MGM_NO') == record.get('CONT_MGM_NO')) && ((record.get('BL_REMAIN_QTY') != rec.get('PO_QTY'))))))) {
						// rec.set('QTY', rec.get('QTY') -
						// record.get('BL_REMAIN_QTY'));
						// rec.set('DOC_AMT', rec.get('QTY') * rec.get('PRICE')
						// );
						// rec.set('LOC_AMT', rec.get('QTY') * rec.get('PRICE')
						// * record.get('XCH_RATE') );
						store1.remove(rec);
					}
				});
				store1.remove(record);
				// 선택된 정보가 없으면 하단 L/C 정보 BLANK
				if (store1.getCount() == 0) {
					Ext.getCmp('V_BL_NO').setValue('');

					var nows = new Date();
					Ext.getCmp('V_LOADING_DT').setValue(nows);
					Ext.getCmp('V_M_BP_NM2').setValue('');
					Ext.getCmp('V_M_BP_CD2').setValue('');
					Ext.getCmp('V_BL_DOC_NO').setValue('');
					Ext.getCmp('V_TRANS_TYPE').setValue('');
					Ext.getCmp('V_VESSEL_NO').setValue('');
					Ext.getCmp('V_VESSEL_NM').setValue('');
					Ext.getCmp('V_IN_TERMS').setValue(null);
					Ext.getCmp('V_PAY_METH').setValue(null);
					Ext.getCmp('V_CUR').setValue('USD');
					Ext.getCmp('V_XCH_RATE').setValue(1);
					Ext.getCmp('V_IV_TYPE').setValue('');
					Ext.getCmp('V_BL_TYPE').setValue('FCL');
					Ext.getCmp('V_FIRST_YN').setValue(false);

					store1.removeAll();
				}
			}

		}
	},
	plugins : [ {
		ptype : 'gridexporter'
	}, {
		ptype : 'cellediting',
	// clicksToEdit: 1
	}, {
		ptype: 'gridfilters' 
    }, ],
	features : [ {
		ftype : 'summary',
		dock : 'bottom'
	} ],

});