/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('A_NFUND_CHECK_HSPF.view.MyGrid', {
	extend : 'Ext.grid.Panel',
	alias : 'widget.myGrid',

	requires : [ 
		'A_NFUND_CHECK_HSPF.view.MyGridViewModel', 
		'Ext.view.Table', 
		'Ext.grid.column.RowNumberer', 
		'Ext.grid.column.Number', 
		'Ext.grid.column.Date', 
		'Ext.selection.CheckboxModel', 
		'Ext.grid.plugin.Exporter', 
		'Ext.grid.plugin.CellEditing' 
	],

	viewModel : {
		type : 'mygrid'
	},

	id : 'myGrid',
	store : 'MyStore',
	style : 'border: 1px solid lightgray; padding: 5px;',
	title : 'My Grid Panel',
	header : false,

	config : {
		tbar : [ {
			id : 'gridAddBtn',
			text : '',
			margin : '0 3 0 0',
			glyph : 'xf055@FontAwesome',
			iconCls : 'grid-add-btn',
			hidden: true
		}, {
			id : 'gridDelBtn',
			text : '',
			margin : '0 3 0 0',
			glyph : 'xf056@FontAwesome',
			iconCls : 'grid-del-btn',
			hidden: true
		}, {
			id : 'gridSaveBtn',
			xtype : 'button',
			glyph : 'xf0c7@FontAwesome',
			iconCls : 'grid-save-btn',
			margin : '0 3 0 0',
			hidden: true
		}, {
			xtype : 'container',
			flex : 1
		}, {
			xtype : 'button',
			glyph : 'xf1c3@FontAwesome',
			id : 'xlsxDown',
			cfg : {
				type : 'excel07',
				ext : 'xlsx'
			},
			iconCls : 'grid-excel-btn',
			margin : '0 3 0 0',
		} ]
	},

	viewConfig : {
		enableTextSelection : true,
	},

	columns : [ {
		xtype : 'rownumberer',
		width : 40
	}, {
		xtype : 'gridcolumn',
		text : 'V_TYPE',
		hidden : true,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'BC_NO',
		style : 'text-align: center; font-weight: bold;',
		text : '미정리예금번호',
		width : 200,
	}, {
		xtype : 'datecolumn',
		dataIndex : 'BANK_DT',
		style : 'text-align: center; font-weight: bold;',
		text : '거래일자',
		align : 'center',
		format : 'Y-m-d',
		width : 100
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'DEPT_CD',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		text : '부서코드',
		width : 100,
		editor: {
            xtype: 'combobox',
            displayField: 'DEPT_NM',
            valueField: 'DEPT_CD',
            enableRegEx: true,
            minChars: 2,
            queryMode: 'local',
            store: 'DeptStore',
            matchFieldWidth: false,
            listeners: {
                beforequery: function(record){  
                    record.query = new RegExp(record.query, 'i');
                    record.forceAll = true;
                },
                focus: function(widget, event, eOpts) {
                	var DeptStore = Ext.getStore('DeptStore');
                	DeptStore.reload();
                },
            },
          	listConfig: {
                itemTpl: [
                    '<div>[{DEPT_CD}] {DEPT_NM}</div>'
                ]
            }
        },
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'DEPT_NM',
		style : 'text-align: center; font-weight: bold;',
		text : '부서명',
		width : 120,
		renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
            if(Ext.data.StoreManager.lookup('DeptStore').findRecord('DEPT_CD',value) !== null)
            {
                return Ext.data.StoreManager.lookup('DeptStore').findRecord('DEPT_CD', value).get('DEPT_NM');
            }
            return value;
        },
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'BP_CD',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		text : '거래처',
		width : 100,
		editor: {
            xtype: 'combobox',
            displayField: 'BP_NM',
            valueField: 'BP_CD',
            enableRegEx: true,
            minChars: 2,
            queryMode: 'local',
            store: 'WinBpPopStore',
            matchFieldWidth: false,
            listeners: {
                beforequery: function(record){  
                    record.query = new RegExp(record.query, 'i');
                    record.forceAll = true;
                },
                focus: function(widget, event, eOpts) {
                	var WinBpPopStore = Ext.getStore('WinBpPopStore');
                	WinBpPopStore.reload();
                },
            },
          	listConfig: {
                itemTpl: [
                    '<div>[{BP_CD}] {BP_NM}</div>'
                ]
            }
        },
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'BP_NM',
		style : 'text-align: center; font-weight: bold;',
		text : '거래처명',
		width : 150,
		renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
            if(Ext.data.StoreManager.lookup('WinBpPopStore').findRecord('BP_CD',value) !== null)
            {
                return Ext.data.StoreManager.lookup('WinBpPopStore').findRecord('BP_CD', value).get('BP_NM');
            }
            return value;
        },
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'CUR',
		style : 'text-align: center; font-weight: bold;',
		text : '화폐단위',
		width : 100,
        align: 'center'
	}, {
		xtype : 'numbercolumn',
		dataIndex : 'IN_AMT',
		style : 'text-align: center; font-weight: bold;',
		align : 'end',
		text : '입금',
		width : 120,
		format : '0,000',
		editor : {
			xtype : 'numberfield',
			format : '0,000',
			align : 'right'
		},
		exportStyle: {
  			 alignment: {
  				 horizontal: 'Right'
  			 },
        },
	}, {
		xtype : 'numbercolumn',
		dataIndex : 'OUT_AMT',
		style : 'text-align: center; font-weight: bold;',
		align : 'end',
		text : '출금',
		width : 120,
		format : '0,000',
		editor : {
			xtype : 'numberfield',
			format : '0,000',
			align : 'right'
		},
		exportStyle: {
  			 alignment: {
  				 horizontal: 'Right'
  			 },
       },
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'BANK_CD',
		style : 'text-align: center; font-weight: bold;',
		text : '은행코드',
		width : 100,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'BANK_NM',
		style : 'text-align: center; font-weight: bold;',
		text : '은행명',
		width : 120,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'BANK_ACCT_NO',
		style : 'text-align: center; font-weight: bold;',
		text : '은행계좌',
		width : 120,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'REMARK',
		style : 'text-align: center; font-weight: bold;',
		text : '비고',
		width : 200,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'REMARK2',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		text : '변경내용',
		width : 200,
		editor: {
			xtype: 'textfield'
		},
	}, ],
	selModel : {
		selType : 'checkboxmodel',
		listeners : {}
	},
	features : [ {
		ftype: 'summary',
        dock: 'bottom'
	} ],
	plugins : [ {
		ptype : 'gridexporter'
	}, {
		ptype : 'cellediting',
		clicksToEdit : 1,
		listeners : {
	    	afteredit: function(e) {
				var record = e.grid.getSelection()[0];
				var field = e.context.field;
				var val = e.context.value;
	    		
				if(!!!val) return;
				
		    	if(field == 'BP_CD') {
		    		record.set('BP_NM', val);
        		} else if(field == 'DEPT_CD') {
        			record.set('DEPT_NM', val);
        		}
		    },
	    }
	}, {
        ptype: 'clipboard',
    }, {
		ptype: 'gridfilters' 
    }, ],

});