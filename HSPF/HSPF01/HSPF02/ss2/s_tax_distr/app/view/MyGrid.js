/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_TAX_DISTR.view.MyGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.myGrid',

    requires: [
        'S_TAX_DISTR.view.MyGridViewModel',
        'Ext.grid.column.RowNumberer',
        'Ext.grid.column.Date',
        'Ext.grid.column.Number',
        'Ext.view.Table',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.CellEditing'
    ],

    viewModel: {
        type: 'mygrid'
    },
    style: 'border: 1px solid lightgray; padding: 5px;',
    header: false,
    title: 'My Grid Panel',
    store: 'MyStore',
    id: 'myGrid',
    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 150,
            dataIndex: 'BILL_NO',
            text: '매출채권번호'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 100,
            dataIndex: 'BILL_SEQ',
            text: '매출채권순번',
            align: 'right'
        },
        {
            xtype: 'datecolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            text: '매출일',
            format: 'Y-m-d',
            dataIndex: 'BILL_DT',
            align: 'center'
        },
        {
            xtype: 'datecolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            text: '수금예정일',
            format: 'Y-m-d',
            dataIndex: 'DN_ISSUE_DT',
            align: 'center'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 100,
            dataIndex: 'S_BP_CD',
            text: '매출처코드',
            
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 150,
            dataIndex: 'S_BP_NM',
            text: '매출처명'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 150,
            dataIndex: 'BL_DOC_NO',
            text: 'B/L번호'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 114,
            dataIndex: 'ITEM_CD',
            text: '품목코드'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 130,
            dataIndex: 'ITEM_NM',
            text: '품목명'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 114,
            dataIndex: 'BRAND',
            text: 'BRAND'
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            align: 'end',
            dataIndex: 'DN_BOX_QTY',
            text: '매출BOX수량',
            format: '0,000',
            summaryType: 'sum',
            summaryRenderer: function(value, summaryData, dataIndex) {
                return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
            },
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            align: 'end',
            dataIndex: 'BILL_QTY',
            text: '계근중량',
            format: '0,000.00',
            summaryType: 'sum',
            summaryRenderer: function(value, summaryData, dataIndex) {
                return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
            },
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            align: 'end',
            dataIndex: 'BILL_PRC',
            text: '단가',
            format: '0,000.00'
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            align: 'end',
            dataIndex: 'BILL_LOC_AMT',
            text: '금액',
            format: '0,000',
            summaryType: 'sum',
            summaryRenderer: function(value, summaryData, dataIndex) {
                return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
            },
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            align: 'end',
            dataIndex: 'number',
            text: '매출조정금액',
            hidden: true
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 114,
            dataIndex: 'string',
            text: '비고',
            hidden: true
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 114,
            dataIndex: 'VAT_TYPE_NM',
            text: '부가세유형'
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            align: 'end',
            dataIndex: 'VAT_RATE',
            text: '부가세율',
            format: '0,000.00'
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            align: 'end',
            dataIndex: 'VAT_AMT',
            text: '부가세금액',
            format: '0,000',
            summaryType: 'sum',
            summaryRenderer: function(value, summaryData, dataIndex) {
                return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
            },
        }
    ],
    viewConfig: {
    	enableTextSelection: true,
    },
    selModel: {
        selType: 'checkboxmodel',
        listeners : {
			select : function(rowmodel, record, index, eOpts) {
				var store = Ext.getStore('MyStore');
				var store1 = Ext.getStore('MyStore1');
				var store1Cnt = store1.getCount();
//				var selModel= Ext.getCmp('myGrid').getSelectionModel()
				
				store1.insert(store1Cnt, [ ({
					V_TYPE: 'V',
					COST_CD : record.get('COST_CD'),
					ITEM_CD : record.get('ITEM_CD'),
					ITEM_NM : record.get('ITEM_NM'),
					DN_BOX_QTY : record.get('DN_BOX_QTY'),
					BILL_QTY : record.get('BILL_QTY'),
					BILL_PRC : record.get('BILL_PRC'),
					BILL_LOC_AMT : record.get('BILL_LOC_AMT'),
					VAT_TYPE : record.get('VAT_TYPE'),
					VAT_TYPE_NM : record.get('VAT_TYPE_NM'),
					VAT_AMT : record.get('VAT_AMT'),
					VAT_RATE : record.get('VAT_RATE'),
					BILL_NO : record.get('BILL_NO'),
					BILL_SEQ : record.get('BILL_SEQ'),
				}) ]);
				
				var NET_AMT_OLD = Number(Ext.getCmp('V_NET_AMT').getValue());
				var VAT_AMT = Number(Ext.getCmp('V_VAT_AMT').getValue());
				
				Ext.getCmp('V_NET_AMT').setValue(NET_AMT_OLD + Number(record.get('BILL_LOC_AMT')));
				Ext.getCmp('V_NET_LOC_AMT').setValue(NET_AMT_OLD + Number(record.get('BILL_LOC_AMT')));
				Ext.getCmp('V_TOTAL_AMT').setValue( Number(Ext.getCmp('V_NET_AMT').getValue()) + VAT_AMT );
						
				Ext.getCmp('V_S_BP_CD2').setValue(record.get('S_BP_CD'));
				Ext.getCmp('V_S_BP_NM2').setValue(record.get('S_BP_NM'));
//						Ext.getCmp('V_R_BP_CD').setValue(record.get('BP_CD'));
//						Ext.getCmp('V_R_BP_NM').setValue(record.get('BP_NM'));
//						Ext.getCmp('V_IN_TERMS').setValue(record.get('IN_TERMS'));
//						if(record.get('REGION') == '9') {
//							Ext.getCmp('V_TAX_CD').setValue('TX1');
//						} else {
//							Ext.getCmp('V_TAX_CD').setValue('TX3');
//						}
//						Ext.getCmp('V_PAY_METH').setValue(record.get('PAY_METH'));
			},
			deselect : function(rowmodel, record, index, eOpts) {
				var store = Ext.getStore('MyStore');
				var store1 = Ext.getStore('MyStore1');
				var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
				
				store1.each(function(rec, idx) {
            		if(((rec.get('BILL_NO') == record.get('BILL_NO')) && ((rec.get('BILL_SEQ') == record.get('BILL_SEQ')) 
            				 ))) {
						store1.remove(rec);
						var NET_AMT_OLD = Number(Ext.getCmp('V_NET_AMT').getValue());
						var VAT_AMT = Number(Ext.getCmp('V_VAT_AMT').getValue());

						Ext.getCmp('V_NET_AMT').setValue(NET_AMT_OLD - Number(record.get('BILL_LOC_AMT')));
						Ext.getCmp('V_NET_LOC_AMT').setValue(NET_AMT_OLD - Number(record.get('BILL_LOC_AMT')));
						Ext.getCmp('V_TOTAL_AMT').setValue( Number(Ext.getCmp('V_NET_AMT').getValue()) - VAT_AMT );
					} 
            	});
				
				if(gridRecord.length == 0 && store1.getCount() == 0) {
					Ext.getCmp('V_TAX_BILL_NO').setValue('');
			    	Ext.getCmp('V_TAX_DOC_NO').setValue('');
			    	
			    	Ext.getCmp('V_S_BP_CD2').setValue('');
					Ext.getCmp('V_S_BP_NM2').setValue('');
			    	
					var nows = new Date();
					Ext.getCmp('V_ISSUED_DT').setValue(nows);
					Ext.getCmp('V_TAX_BILL_TYPE').setValue('DSO');
					Ext.getCmp('V_BIZ_AREA_CD').setValue('TX3');
					Ext.getCmp('V_VAT_TYPE').setValue('K');
					Ext.getCmp('V_VAT_AMT').setValue('0');
					Ext.getCmp('V_NET_AMT').setValue('0');
					Ext.getCmp('V_NET_LOC_AMT').setValue('0');
					Ext.getCmp('V_TOTAL_AMT').setValue('0');
//					
					Ext.getCmp('tempGlCfmBtn').setDisabled(true);
					Ext.getCmp('tempGlCancelBtn').setDisabled(true);
				}
			}
        }
    },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        {
            ptype: 'cellediting'
        }
    ],
    features: [
               {
            	   ftype: 'summary',
                   dock: 'bottom'
               }
            ],

});