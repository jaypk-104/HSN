/*
 * File: app/controller/WinBpPopController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Popup.controller.WinBpPopController', {
	extend : 'Ext.app.Controller',

	views: ['WinBpPop'],
	stores: ['WinBpPopStore'],
	control : {
		"#bpSelBtn" : {
			click : 'bpSelBtnClick'
		},
		"#WinBpGrid" : {
			beforecelldblclick : 'cellDblClick'
		},
		"winbppop textfield[name=search_field]" : {
			specialkey : 'tfEnter'
		}
	},

	bpSelBtnClick : function(button, e, eOpts) {
		var store = this.getWinBpPopStoreStore();
		store.removeAll();
		store.load({
			params : {
				V_TYPE : 'BP',
				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				W_BP_CD : Ext.getCmp('W_BP_CD').getValue(),
				W_BP_NM : Ext.getCmp('W_BP_NM').getValue()
			},
			callback : function(records, operations, success) {
			}
		});
	},

	cellDblClick : function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
		var BP_CD = record.get('BP_CD');
		var BP_NM = record.get('BP_NM');
		
		if(Ext.getCmp('fieldType').getValue() == 'textfield') {
			Ext.getCmp('V_BP_CD').setValue(BP_CD);
		}
		else if( Ext.getCmp('fieldType').getValue() == 'S_BILL_DISTR' || Ext.getCmp('fieldType').getValue() == 'S_BILL_STEEL'){ //매출등록(수금처)
			Ext.getCmp('V_R_BP_CD').setValue(BP_CD);
			Ext.getCmp('V_R_BP_NM').setValue(BP_NM);
		}
		else if( Ext.getCmp('fieldType').getValue() == 'M_IV_DISTR' || Ext.getCmp('fieldType').getValue() == 'M_IV_STEEL'){ //매입등록(지급처)
			Ext.getCmp('V_T_BP_CD').setValue(BP_CD);
			Ext.getCmp('V_T_BP_NM').setValue(BP_NM);
		}
		else if( Ext.getCmp('fieldType').getValue() == 'default'){
			Ext.getCmp('V_BP_CD').setValue(BP_CD);
			Ext.getCmp('V_BP_NM').setValue(BP_NM);
		}
		else if( Ext.getCmp('fieldType').getValue() == 'M_SL_TRANS_DISTR_1_F'){ //판매원가등록-이고료 FORM
			Ext.getCmp('V_BP_NM').setValue(BP_NM);
		}
		else if((Ext.getCmp('fieldType').getValue() == 'Z_USR_INFO_HSPF') || //사용자등록
				(Ext.getCmp('fieldType').getValue() == 'GRID') || //그리드
				(Ext.getCmp('fieldType').getValue() == 'M_CHARGE_DISTB1' || Ext.getCmp('fieldType').getValue() == 'M_CHARGE_STEEL1')){ //부대경비등록-지급처
			var gridRecord =  Ext.getCmp('myGrid');
			gridRecord.actionables['0'].context.record.set('M_BP_CD', BP_CD);
			gridRecord.actionables['0'].context.record.set('M_BP_NM', BP_NM);
			gridRecord.actionables['0'].context.record.set('TAX_BP_CD', BP_CD);
			gridRecord.actionables['0'].context.record.set('TAX_BP_NM', BP_NM);
		} 
		else if (Ext.getCmp('fieldType').getValue() == 'M_CHARGE_DISTB2' || Ext.getCmp('fieldType').getValue() == 'M_CHARGE_STEEL2') { //부대경비등록-세금계산서발행처
			var gridRecord =  Ext.getCmp('myGrid');
			gridRecord.actionables['0'].context.record.set('TAX_BP_CD', BP_CD);
			gridRecord.actionables['0'].context.record.set('TAX_BP_NM', BP_NM);
		}
		else if (Ext.getCmp('fieldType').getValue() == 'B_BIZ_EMP') { //거래처 담당자 등록
			var gridRecord =  Ext.getCmp('myGrid');
			gridRecord.actionables['0'].context.record.set('BP_CD', BP_CD);
			gridRecord.actionables['0'].context.record.set('BP_NM', BP_NM);
		}
		else if (Ext.getCmp('fieldType').getValue() == 'M_SL_TRANS_STEEL_1' || Ext.getCmp('fieldType').getValue() == 'M_SL_TRANS_DISTR_1') { //판매원가등록-이고료 철강
			var gridRecord =  Ext.getCmp('myGrid');
			gridRecord.actionables['0'].context.record.set('MV_BP_CD', BP_CD);
			gridRecord.actionables['0'].context.record.set('MV_BP_NM', BP_NM);
		}
		else if (Ext.getCmp('fieldType').getValue() == 'B_STORAGE_DISTR' || Ext.getCmp('fieldType').getValue() == 'B_STORAGE_STEEL') { //창고기준정보
			var gridRecord =  Ext.getCmp('myGrid');
			gridRecord.actionables['0'].context.record.set('S_BP_CD', BP_CD);
			gridRecord.actionables['0'].context.record.set('S_BP_NM', BP_NM);
		}
		else if (Ext.getCmp('fieldType').getValue() == 'B_STORAGE_DISTR_1') { //일반무역-창고료등록-창고별집계
			var gridRecord =  Ext.getCmp('myGrid1');
			gridRecord.actionables['0'].context.record.set('M_BP_CD', BP_CD);
			gridRecord.actionables['0'].context.record.set('M_BP_NM', BP_NM);
		}
		else if (Ext.getCmp('fieldType').getValue() == 'grid_default') { 
			var gridRecord =  Ext.getCmp('myGrid');
			gridRecord.actionables['0'].context.record.set('BP_CD', BP_CD);
			gridRecord.actionables['0'].context.record.set('BP_NM', BP_NM);
		}
		else if (Ext.getCmp('fieldType').getValue() == 'SO') { //철강-입고기준출고등록-수주처
			Ext.getCmp('V_SO_BP_NM').setValue(BP_NM);
		}
		else {
			var BP_CD = record.get('BP_CD');
			var BP_NM = record.get('BP_NM');
			var gridRecord =  Ext.getCmp('myGrid').editingPlugin.getEditor();
			var index = gridRecord.activeField.column.fullColumnIndex;
			
			gridRecord.items.items[index].setValue(BP_CD);
			gridRecord.items.items[index+1].setValue(BP_NM);
		}
		
		var popWin=  Ext.getCmp('WinBpPop');
		popWin.destroy();
	},

	tfEnter : function(field, e, eOpts) {
		if (e.getKey() == e.ENTER) {
			this.bpSelBtnClick();
		}
	},
	
});
