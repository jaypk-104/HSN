/*
 * File: app/view/FileGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_CHARGE_OUT_DISTR_SAMHYUN.view.FileGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.filegrid',

    requires: [
        'M_CHARGE_OUT_DISTR_SAMHYUN.view.FileGridViewModel',
        'Ext.grid.column.Column',
        'Ext.view.Table',
        'Ext.selection.CheckboxModel'
    ],

    config: {
        tbar: [
            {
                id: 'fileGridAddBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf055@FontAwesome',
                iconCls: 'grid-add-btn',
                
            },
            {
                id: 'fileGridDelBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf056@FontAwesome',
                iconCls: 'grid-del-btn',
                
            },
            {
                xtype: 'button',
                id: 'fileTestBtn',
                text: '강제추가',
                hidden: true
            }
        ]
    },

    viewModel: {
        type: 'filegrid'
    },
    id: 'fileGrid',
    padding: 10,
    title: '첨부파일',
    store: 'FileStore',
    defaultListenerScope: true,

    columns: [
        {
            xtype: 'gridcolumn',
            hidden: true,
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 120,
            dataIndex: 'V_TYPE',
            text: 'V_TYPE'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                metaData.style = 'cursor: pointer;';
                return value;
            },
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 300,
            dataIndex: 'FILE_NM',
            text: '파일명'
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 200,
            dataIndex: 'FILE_IN_SYSTEM_NM',
            text: '저장된 파일명'
        }
    ],
    selModel: {
        selType: 'checkboxmodel',
        listeners: {
            select: 'onCheckboxModelSelect',
            deselect: 'onCheckboxModelDeselect'
        }
    },

    onCheckboxModelSelect: function(rowmodel, record, index, eOpts) {
        record.set('V_TYPE', 'V');
    },

    onCheckboxModelDeselect: function(rowmodel, record, index, eOpts) {
        record.set('V_TYPE', '');
    }

});