/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_COLLATERAL_TOT_STATUS_HSPF.view.MyGrid', {
	extend : 'Ext.grid.Panel',
	alias : 'widget.myGrid',

	requires : [ 'M_COLLATERAL_TOT_STATUS_HSPF.view.MyGridViewModel', 'Ext.view.Table', 'Ext.grid.column.RowNumberer', 'Ext.grid.column.Number', 'Ext.grid.column.Date', 'Ext.selection.CheckboxModel', 'Ext.grid.plugin.Exporter', 'Ext.grid.plugin.CellEditing' ],

	viewModel : {
		type : 'mygrid'
	},

	id : 'myGrid',
	store : 'MyStore',
	style : 'border: 1px solid lightgray; padding: 5px;',
	title : 'My Grid Panel',
	header : false,

	config : {
		tbar : [
		// {
		// id : 'gridAddBtn',
		// text : '',
		// margin : '0 3 0 0',
		// glyph : 'xf055@FontAwesome',
		// iconCls : 'grid-add-btn',
		// }, {
		// id : 'gridDelBtn',
		// text : '',
		// margin : '0 3 0 0',
		// glyph : 'xf056@FontAwesome',
		// iconCls : 'grid-del-btn',
		// },
		{
			xtype : 'container',
			flex : 1
		}, {
			xtype : 'button',
			glyph : 'xf1c3@FontAwesome',
			id : 'xlsxDown',
			cfg : {
				type : 'excel07',
				ext : 'xlsx'
			},
			iconCls : 'grid-excel-btn',
			margin : '0 3 0 0',
		} ]
	},

	viewConfig : {
		enableTextSelection : true,
	},

	columns : [ {
		xtype : 'rownumberer',
		width : 40
	}, {
		xtype : 'gridcolumn',
		text : 'V_TYPE',
		hidden : true,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'DEPT_CD',
		style : 'text-align: center; font-weight: bold;',
		align : 'center',
		text : '부서',
		width : 100,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'DEPT_NM',
		style : 'text-align: center; font-weight: bold;',
		text : '부서명',
		width : 130,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'BP_CD',
		style : 'text-align: center; font-weight: bold;',
		align : 'center',
		text : '거래처',
		width : 100,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'BP_NM',
		style : 'text-align: center; font-weight: bold;',
		text : '거래처명',
		width : 200,
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'DOC_NO',
		style : 'text-align: center; font-weight: bold;',
		text : 'DOC_NO',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'DB_DOC_TYPE',
		style : 'text-align: center; font-weight: bold;',
		text : 'DB_DOC_TYPE',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		dataIndex : 'DB_DOC_TYPE_NM',
		style : 'text-align: center; font-weight: bold;',
		text : 'DB_DOC_TYPE_NM',
		hidden : true
	}, {
		text : '보증서',
		style : 'text-align: center; font-weight: bold;',
		columns : [ {
			xtype : 'gridcolumn',
			dataIndex : 'WARNT_ORG_NM',
			style : 'text-align: center; font-weight: bold;',
			text : '보증업체',
			width : 180,
		}, {
			xtype : 'gridcolumn',
			dataIndex : 'DB_TYPE2_NM',
			style : 'text-align: center; font-weight: bold;',
			align : 'center',
			text : '보증형태',
			width : 130,
		}, {
			xtype : 'numbercolumn',
			dataIndex : 'ASGN_AMT',
			style : 'text-align: center; font-weight: bold;',
			align : 'end',
			text : '보증가입금액',
			width : 130,
			format : '0,000'
		}, {
			xtype : 'datecolumn',
			dataIndex : 'ASGN_DT',
			style : 'text-align: center; font-weight: bold;',
			text : '시작일',
			align : 'center',
			format : 'Y-m-d',
			sortable : true,
		}, {
			xtype : 'datecolumn',
			dataIndex : 'EXPIRY_DT',
			style : 'text-align: center; font-weight: bold;',
			text : '종료일',
			align : 'center',
			format : 'Y-m-d',
			sortable : true,
		}, {
			xtype : 'gridcolumn',
			dataIndex : 'REMARK',
			style : 'text-align: center; font-weight: bold;',
			text : '비고',
			width : 200,
			sortable : true,
		}, {
			xtype : 'checkcolumn',
			dataIndex : 'CHK_A',
			style : 'text-align: center; font-weight: bold;',
			text : '서류등록',
			width : 100,
			renderer: function (value, metadata, record, rowIndex, colIndex, store) {
                let tempVal = '';
                if (value === 'Y') {
                    tempVal = 'checked';
                }
                return "<input name=" + record.get('id') + "_" + record.get('id') + " type='checkbox'" + tempVal + " disabled=disabled>";
            },
		}, {
			xtype : 'gridcolumn',
			dataIndex : 'FILE_NM',
			style : 'text-align: center; font-weight: bold;',
			text : '첨부파일',
			width : 200,
			editor : {
				xtype : 'textfield',
				allowBlank : false,
				editable : false,
				listeners : {
					afterrender : function(c) {
						c.getEl().on('dblclick', function() {
							var selectedData = Ext.getCmp('myGrid').getSelection()[0].data;
							
							if(selectedData.DB_DOC_TYPE == 'B'){
								var popup = Ext.create("M_COLLATERAL_TOT_STATUS_HSPF.view.MyWindow");
								popup.show();
								
								Ext.getCmp('W_DOC_NO').setValue(selectedData.DOC_NO);
								Ext.getCmp('W_DOC_TYPE_CD').setValue(selectedData.DB_DOC_TYPE);
								Ext.getCmp('W_DOC_TYPE_NM').setValue(selectedData.DB_DOC_TYPE_NM);
								Ext.getCmp('W_DEPT_CD').setValue(selectedData.DEPT_CD);
								Ext.getCmp('W_DEPT_NM').setValue(selectedData.DEPT_NM);
								Ext.getCmp('W_BP_CD').setValue(selectedData.BP_CD);
								Ext.getCmp('W_BP_NM').setValue(selectedData.BP_NM);
								
								M_COLLATERAL_TOT_STATUS_HSPF.app.getController('WinFilePopController').w_fileSelBtnClick();
							}
							
						});
					}
				}
			}
		}, ]
	}, {
		text : '부동산(근저당)',
		style : 'text-align: center; font-weight: bold;',
		columns : [ {
			xtype : 'gridcolumn',
			dataIndex : 'B1',
			style : 'text-align: center; font-weight: bold;',
			text : '근저당설정자',
			width : 130,
		}, {
			xtype : 'gridcolumn',
			dataIndex : 'B2',
			style : 'text-align: center; font-weight: bold;',
			text : '채무자',
			width : 130,
		}, {
			xtype : 'gridcolumn',
			dataIndex : 'B3',
			style : 'text-align: center; font-weight: bold;',
			text : '종류',
			width : 130,
		}, {
			xtype : 'numbercolumn',
			dataIndex : 'B4',
			style : 'text-align: center; font-weight: bold;',
			align : 'end',
			text : '설정액',
			width : 130,
			format : '0,000'
		}, {
			xtype : 'datecolumn',
			dataIndex : 'B5',
			style : 'text-align: center; font-weight: bold;',
			text : '설정일',
			align : 'center',
			format : 'Y-m-d',
			sortable : true,
		}, {
			xtype : 'datecolumn',
			dataIndex : 'B6',
			style : 'text-align: center; font-weight: bold;',
			text : '해지일',
			align : 'center',
			format : 'Y-m-d',
			sortable : true,
		}, {
			xtype : 'gridcolumn',
			dataIndex : 'B7',
			style : 'text-align: center; font-weight: bold;',
			text : '비고',
			width : 200,
			sortable : true,
		}, {
			xtype : 'checkcolumn',
			dataIndex : 'CHK_B',
			style : 'text-align: center; font-weight: bold;',
			text : '서류등록',
			width : 100,
			renderer: function (value, metadata, record, rowIndex, colIndex, store) {
                let tempVal = '';
                if (value === 'Y') {
                    tempVal = 'checked';
                }
                return "<input name=" + record.get('id') + "_" + record.get('id') + " type='checkbox'" + tempVal + " disabled=disabled>";
            },
		}, {
			xtype : 'gridcolumn',
			dataIndex : 'B8',
			style : 'text-align: center; font-weight: bold;',
			text : '첨부파일',
			width : 200,
			editor : {
				xtype : 'textfield',
				allowBlank : false,
				editable : false,
				listeners : {
					afterrender : function(c) {
						c.getEl().on('dblclick', function() {
							var selectedData = Ext.getCmp('myGrid').getSelection()[0].data;
							
							if(selectedData.DB_DOC_TYPE == 'D'){
								var popup = Ext.create("M_COLLATERAL_TOT_STATUS_HSPF.view.MyWindow");
								popup.show();
								
								Ext.getCmp('W_DOC_NO').setValue(selectedData.DOC_NO);
								Ext.getCmp('W_DOC_TYPE_CD').setValue(selectedData.DB_DOC_TYPE);
								Ext.getCmp('W_DOC_TYPE_NM').setValue(selectedData.DB_DOC_TYPE_NM);
								Ext.getCmp('W_DEPT_CD').setValue(selectedData.DEPT_CD);
								Ext.getCmp('W_DEPT_NM').setValue(selectedData.DEPT_NM);
								Ext.getCmp('W_BP_CD').setValue(selectedData.BP_CD);
								Ext.getCmp('W_BP_NM').setValue(selectedData.BP_NM);
								
								M_COLLATERAL_TOT_STATUS_HSPF.app.getController('WinFilePopController').w_fileSelBtnClick();
							}
							
						});
					}
				}
			}
		}, ]
	}, {
		text : '개인연대보증',
		style : 'text-align: center; font-weight: bold;',
		columns : [ {
			xtype : 'gridcolumn',
			dataIndex : 'C1',
			style : 'text-align: center; font-weight: bold;',
			text : '채무자',
			width : 130,
		}, {
			xtype : 'gridcolumn',
			dataIndex : 'C2',
			style : 'text-align: center; font-weight: bold;',
			text : '연대보증인',
			width : 130,
		}, {
			xtype : 'numbercolumn',
			dataIndex : 'C3',
			style : 'text-align: center; font-weight: bold;',
			align : 'end',
			text : '보증한도',
			width : 130,
			format : '0,000'
		}, {
			xtype : 'datecolumn',
			dataIndex : 'C4',
			style : 'text-align: center; font-weight: bold;',
			text : '설정일',
			align : 'center',
			format : 'Y-m-d',
			sortable : true,
		}, {
			xtype : 'datecolumn',
			dataIndex : 'C5',
			style : 'text-align: center; font-weight: bold;',
			text : '종료일',
			align : 'center',
			format : 'Y-m-d',
			sortable : true,
		}, {
			xtype : 'gridcolumn',
			dataIndex : 'C6',
			style : 'text-align: center; font-weight: bold;',
			text : '비고',
			width : 200,
			sortable : true,
		}, {
			xtype : 'checkcolumn',
			dataIndex : 'CHK_C',
			style : 'text-align: center; font-weight: bold;',
			text : '서류등록',
			width : 100,
			renderer: function (value, metadata, record, rowIndex, colIndex, store) {
                let tempVal = '';
                if (value === 'Y') {
                    tempVal = 'checked';
                }
                return "<input name=" + record.get('id') + "_" + record.get('id') + " type='checkbox'" + tempVal + " disabled=disabled>";
            },
		}, {
			xtype : 'gridcolumn',
			dataIndex : 'C7',
			style : 'text-align: center; font-weight: bold;',
			text : '첨부파일',
			width : 200,
			editor : {
				xtype : 'textfield',
				allowBlank : false,
				editable : false,
				listeners : {
					afterrender : function(c) {
						c.getEl().on('dblclick', function() {
							var selectedData = Ext.getCmp('myGrid').getSelection()[0].data;
							
							if(selectedData.DB_DOC_TYPE == 'G'){
								var popup = Ext.create("M_COLLATERAL_TOT_STATUS_HSPF.view.MyWindow");
								popup.show();
								
								Ext.getCmp('W_DOC_NO').setValue(selectedData.DOC_NO);
								Ext.getCmp('W_DOC_TYPE_CD').setValue(selectedData.DB_DOC_TYPE);
								Ext.getCmp('W_DOC_TYPE_NM').setValue(selectedData.DB_DOC_TYPE_NM);
								Ext.getCmp('W_DEPT_CD').setValue(selectedData.DEPT_CD);
								Ext.getCmp('W_DEPT_NM').setValue(selectedData.DEPT_NM);
								Ext.getCmp('W_BP_CD').setValue(selectedData.BP_CD);
								Ext.getCmp('W_BP_NM').setValue(selectedData.BP_NM);
								
								M_COLLATERAL_TOT_STATUS_HSPF.app.getController('WinFilePopController').w_fileSelBtnClick();
							}
							
						});
					}
				}
			}
		}, ]
	} ],
	selModel : {
		selType : 'checkboxmodel',
	},
	plugins : [ {
		ptype : 'gridexporter'
	}, {
		ptype : 'cellediting',
		clicksToEdit : 1,
	} ],

});