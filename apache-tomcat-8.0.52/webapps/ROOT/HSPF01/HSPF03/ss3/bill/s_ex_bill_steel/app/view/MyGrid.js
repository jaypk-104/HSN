/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_EX_BILL_STEEL.view.MyGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.myGrid',

    requires: [
        'S_EX_BILL_STEEL.view.MyGridViewModel',
        'Ext.grid.column.RowNumberer',
        'Ext.grid.column.Date',
        'Ext.grid.column.Number',
        'Ext.view.Table',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.CellEditing'
    ],

    viewModel: {
        type: 'mygrid'
    },
    style: 'border: 1px solid lightgray; padding: 5px;',
    header: false,
    title: 'My Grid Panel',
    store: 'MyStore',
    id: 'myGrid',
    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 150,
            dataIndex: 'BILL_NO',
            text: '매출채권번호',
            hidden : true
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 150,
            dataIndex: 'DN_NO',
            text: '매출번호'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 90,
            dataIndex: 'DN_SEQ',
            text: '매출순번',
            align: 'end'
        },
        {
            xtype: 'datecolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            text: '매출일',
            dataIndex: 'BILL_DT',
            format: 'Y-m-d',
            align: 'center'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 90,
            dataIndex: 'S_BP_CD',
            text: '매출처코드',
            hidden: true
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 200,
            dataIndex: 'S_BP_NM',
            text: '매출처명',
            flex : 1
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 160,
            dataIndex: 'BL_DOC_NO',
            text: '수입B/L번호'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 150,
            dataIndex: 'ITEM_CD',
            text: '품목코드'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 114,
            dataIndex: 'ITEM_NM',
            text: '품목명'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 114,
            dataIndex: 'BRAND',
            text: 'BRAND'
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            align: 'end',
            dataIndex: 'BILL_QTY',
            text: '계근수량',
            format: '0,000',
            summaryType: 'sum',
            summaryRenderer: function(value, summaryData, dataIndex) {
                return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"</font>"; 
            },
        },
//        {
//            xtype: 'numbercolumn',
//            style: 'font-size: 12px; text-align: center; font-weight: bold;',
//            align: 'end',
//            dataIndex: 'DN_REAL_QTY',
//            text: '계근중량',
//            format: '0,000.00',
//            hidden : true,
//            summaryType: 'sum',
//            summaryRenderer: function(value, summaryData, dataIndex) {
//                return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
//            },
//        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            align: 'end',
            dataIndex: 'BILL_PRC',
            text: '매출단가',
            format: '0,000.00'
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            align: 'end',
            dataIndex: 'BILL_AMT',
            width: 200,
            text: '최종매출금액',
            format: '0,000',
            summaryType: 'sum',
            summaryRenderer: function(value, summaryData, dataIndex) {
                return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"</font>"; 
            },
        },
       
    ],
    viewConfig: {
    	enableTextSelection: true,
    },
    selModel: {
        selType: 'checkboxmodel',
        listeners : {
			select : function(rowmodel, record, index, eOpts) {
				var store = Ext.getStore('MyStore');
				var store1 = Ext.getStore('MyStore1');
				var store1Cnt = store1.getCount();
				var selModel= Ext.getCmp('myGrid').getSelectionModel();
				
				if(store1.getCount() > 0 && Ext.getCmp('V_S_BP_CD2').getValue() != record.get('S_BP_CD')) {
					Ext.Msg.alert('확인', '동일한 매출처를 선택하세요.');
					selModel.deselect(record, true);
				} else if(store1.getCount() > 0 && Ext.getCmp('V_REF_BILL_NO').getValue() != record.get('BILL_NO')) {
					Ext.Msg.alert('확인', '동일한 매출채권번호를 선택하세요.');
					selModel.deselect(record, true);
				} else {
					if(record.get('BILL_NO') == null){
						Ext.getCmp('V_S_BP_CD2').setValue(record.get('S_BP_CD'));
						Ext.getCmp('V_S_BP_NM2').setValue(record.get('S_BP_NM'));
						Ext.getCmp('V_SALE_TYPE').setValue('SSO');
						Ext.getCmp('V_VAT_INC').items.get(1).setValue(true);
						Ext.getCmp('V_CFM_YN').items.get(1).setValue(true);
					} else {
						Ext.Ajax.request({
							url : 'sql/S_EX_BILL_STEEL.jsp',
							method : 'post',
							params: {
								V_TYPE: 'S',
								V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
								V_USR_ID : parent.Ext.getCmp('GEMP_NO').getValue(),
								V_BILL_NO : record.get('BILL_NO'),
							},
							success: function(response) {
						    	var jsonResult = Ext.JSON.decode(response.responseText);
						    	var resultData = jsonResult.resultList[0];
						    	
						    	if(resultData != null){
						    		Ext.getCmp('V_S_BP_CD2').setValue(resultData.S_BP_CD);
									Ext.getCmp('V_S_BP_NM2').setValue(resultData.S_BP_NM);
									Ext.getCmp('V_R_BP_CD').setValue(resultData.S_BP_CD);
									Ext.getCmp('V_R_BP_NM').setValue(resultData.R_BP_NM);
									Ext.getCmp('V_IN_TERMS').setValue(resultData.IN_TERMS);
									
//									Ext.getCmp('V_BILL_NO').setValue(resultData.BILL_NO);
									Ext.getCmp('V_BILL_DT').setValue(resultData.BILL_DT);
//									Ext.getCmp('V_SALE_TYPE').setValue(resultData.SALE_TYPE);
									Ext.getCmp('V_DN_ISSUE_DT').setValue(resultData.DN_ISSUE_DT);
									Ext.getCmp('V_TAX_CD').setValue(resultData.TAX_CD);
									
									Ext.getCmp('V_CUR').setValue(resultData.CUR);
									Ext.getCmp('V_PAY_METH').setValue(resultData.PAY_METH);
									Ext.getCmp('V_REF_BILL_NO').setValue(resultData.BILL_NO);
									Ext.getCmp('V_TEMP_GL_NO').setValue(resultData.TEMP_GL_NO);
									
									Ext.getCmp('V_VAT_INC').items.get(resultData.VAT_INC == 'Y' ? 0 : 1).setValue(true);
									Ext.getCmp('V_CFM_YN').items.get(resultData.CFM_YN == 'Y' ? 0 : 1).setValue(true);
									
						    	}
							}
						});
					}
					
					store1.insert(store1Cnt, [ ({
						V_TYPE: 'V',
						BILL_NO : record.get('BILL_NO'),
						BILL_SEQ : record.get('BILL_SEQ'),
						DN_NO : record.get('DN_NO'),
						DN_SEQ : record.get('DN_SEQ'),
						
						ITEM_CD : record.get('ITEM_CD'),
						ITEM_NM : record.get('ITEM_NM'),
						
						BILL_QTY : record.get('BILL_QTY'),
						BILL_PRC : record.get('BILL_PRC'),
						BILL_AMT : record.get('BILL_AMT'),
						BILL_LOC_AMT : record.get('BILL_AMT'),
						
						VAT_TYPE : record.get('VAT_TYPE'),
						VAT_TYPE_NM : record.get('VAT_TYPE_NM'),
						VAT_AMT : record.get('VAT_AMT'),
						VAT_RATE : record.get('VAT_RATE'),
						COST_CD : record.get('COST_CD'),
					}) ]);
				
				}
			},
			deselect : function(rowmodel, record, index, eOpts) {
				var store = Ext.getStore('MyStore');
				var store1 = Ext.getStore('MyStore1');
				var selModel = Ext.getCmp('myGrid').getSelectionModel();
				var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
				
				store1.each(function(rec, idx) {
            		if(rec.get('DN_NO') == record.get('DN_NO') && rec.get('DN_SEQ') == record.get('DN_SEQ')) {
						store1.remove(rec);
					} 
            	});
				
				if(gridRecord.length == 0 && store1.getCount() == 0) {
					Ext.getCmp('V_BILL_NO').setValue('');
					Ext.getCmp('V_REF_BILL_NO').setValue('');
					var nows = new Date();

					Ext.getCmp('V_BILL_DT').setValue(nows);
					Ext.getCmp('V_SALE_TYPE').setValue('XSO');
					Ext.getCmp('V_S_BP_CD2').setValue('');
					Ext.getCmp('V_S_BP_NM2').setValue('');
					Ext.getCmp('V_R_BP_CD').setValue('');
					Ext.getCmp('V_R_BP_NM').setValue('');
					Ext.getCmp('V_DN_ISSUE_DT').setValue(nows);
					Ext.getCmp('V_TAX_CD').setValue('TX3');
					Ext.getCmp('V_CUR').setValue('KRW');
					Ext.getCmp('V_IN_TERMS').setValue(null);
					Ext.getCmp('V_PAY_METH').setValue('CH');
					Ext.getCmp('V_TEMP_GL_NO').setValue('');
				}
			}
        }
    },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        {
            ptype: 'cellediting'
        }
    ],
	features : [ {
		ftype : 'summary'
	} ],

});