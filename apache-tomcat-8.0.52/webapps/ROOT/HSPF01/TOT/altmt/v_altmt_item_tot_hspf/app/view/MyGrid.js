/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('V_ALTMT_ITEM_TOT_HSPF.view.MyGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.myGrid',

    requires: [
        'V_ALTMT_ITEM_TOT_HSPF.view.MyGridViewModel',
        'V_ALTMT_ITEM_TOT_HSPF.view.MyGridViewController',
        'Ext.view.Table',
        'Ext.grid.column.RowNumberer',
        'Ext.grid.column.Number',
        'Ext.form.field.Number',
        'Ext.grid.column.Date',
        'Ext.form.field.Date',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.RowEditing'
    ],

    config: {
        tbar: [
            {
                id: 'gridAddBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf055@FontAwesome',
                iconCls: 'grid-add-btn',
            },
            {
                id: 'gridDelBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf056@FontAwesome',
                iconCls: 'grid-del-btn',
                hidden: true
            },
            {
				id : 'gridSaveBtn',
				text : '',
				margin : '0 3 0 0',
				glyph : 'xf0c7@FontAwesome',
				iconCls : 'grid-save-btn',
			}, 
        	{
               	xtype: 'button',
               	id: 'loadItemBtn',
               	margin: '0 3 0 0',
               	text: '미등록 ITEM 불러오기',
               	style: 'background-color: white; border: 0.5px solid #3367d6;',
               	cls: 'blue-btn',
            },
            {
                xtype: 'label',
                text: '< 원자재정보 및 MAKER 현황 >',
                style: 'font-size: 15px; text-align: center; font-weight: bold;',
                flex: 1
            },
            {
                xtype: 'button',
                glyph: 'xf1c3@FontAwesome',
                id: 'xlsxDown',
                cfg: {
                    type: 'excel07',
                    ext: 'xlsx'
                },
                iconCls: 'grid-excel-btn',
            }
        ]
    },

    controller: 'mygrid',
    viewModel: {
        type: 'mygrid'
    },
    id: 'myGrid',
    style: 'border: 1px solid #659DDC; padding: 5px;',
    bodyBorder: false,
    header: false,
    store: 'MyStore',

    viewConfig : {
		enableTextSelection : true,
	},
	
    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            text: 'V_TYPE'
        },
        {
        	text : 'CODE',
    		style : 'text-align: center; font-weight: bold;',
    		columns : [ {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold;',
                width: 120,
                dataIndex: 'ITEM_CD',
                text: 'HSN 품목코드',
                editor: {
                    xtype: 'combobox',
                    displayField: 'ITEM_CD',
                    valueField: 'ITEM_CD',
                    enableRegEx: true,
                    minChars: 2,
                    queryMode: 'local',
                    allowBlank:false,
                    store: 'ItemStore',
                    listeners: {
                        beforequery: function(record){  
                            record.query = new RegExp(record.query, 'i');
                            record.forceAll = true;
                        },
                        focus: function(widget, event, eOpts) {
                        	var ItemStore = Ext.getStore('ItemStore');
                        	ItemStore.reload();
                        },
                    }
                },
            }, {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold;',
                width: 150,
                dataIndex: 'ITEM_NM',
                text: '품목명',
                editor: {
                    xtype: 'combobox',
                    displayField: 'ITEM_NM',
                    valueField: 'ITEM_CD',
                    enableRegEx: true,
                    minChars: 2,
                    queryMode: 'local',
                    store: 'ItemStore',
                    matchFieldWidth: false,
                    listeners: {
                        beforequery: function(record){  
                            record.query = new RegExp(record.query, 'i');
                            record.forceAll = true;
                            
                        },
                        focus: function(widget, event, eOpts) {
                        	var ItemStore = Ext.getStore('ItemStore');
                        	ItemStore.reload();
                        },
                    },
                  	listConfig: {
                        itemTpl: [
                            '<div>[{ITEM_CD}] {ITEM_NM}</div>'
                        ]
                    }
                },
                renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                    if(Ext.data.StoreManager.lookup('ItemStore').findRecord('ITEM_CD',value) !==null)
                    {
                        return Ext.data.StoreManager.lookup('ItemStore').findRecord('ITEM_CD',value).get('ITEM_NM');
                    }
                    return value;
                },
            }, {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold; color: #3367d6',
                width: 120,
                dataIndex: 'HSM_ITEM_CD',
                text: 'HSM 품목코드',
                editor: {
                	xtype: 'textfield',
                },
            }, {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold; color: #3367d6',
                width: 120,
                dataIndex: 'OLD_ITEM_CD',
                text: '구 품목코드',
                editor: {
                	xtype: 'textfield',
                },
            }, {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold; color: #3367d6',
                width: 100,
                dataIndex: 'GROUP_TYPE_CD',
                text: '품종',
                renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                    if(Ext.data.StoreManager.lookup('storeSC12').findRecord('DTL_CD',value) !==null)
                    {
                        return Ext.data.StoreManager.lookup('storeSC12').findRecord('DTL_CD',value).get('DTL_NM');
                    }
                    return value;
                },
                editor: {
            		xtype: 'combobox',
            		displayField: 'DTL_NM',
            		autoLoadOnValue: true,
            		valueField: 'DTL_CD',
            		editable: false,
            		store: Ext.create('Ext.data.Store',{
            			autoLoad: true,
            			storeId: 'storeSC12',
            			proxy: {
            		           type: 'ajax',
            		           extraParams: {
            		            	V_MAST_CD: 'SC12',
            		            	V_GRID: 'Y'
            		           },	
            		           api: {
            		               read: '/HSPF01/common/sql/Combobox.jsp'
            		           },
            		           reader: {
            		               type: 'json',
            		               rootProperty: 'resultList'
            		           }
            		       }
            		}),
            		listConfig: {
                        itemTpl: [
                            '<div>{DTL_NM}</div>'
                        ]
                    },
            	}
            }, {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold; color: #3367d6',
                width: 130,
                dataIndex: 'GRADE',
                text: 'GRADE',
                editor: {
                	xtype: 'textfield',
                },
            }, {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold; color: #3367d6',
                width: 100,
                dataIndex: 'IV_TYPE',
                text: '구매유형',
                renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                    if(Ext.data.StoreManager.lookup('storeBA18').findRecord('DTL_CD',value) !==null)
                    {
                        return Ext.data.StoreManager.lookup('storeBA18').findRecord('DTL_CD',value).get('DTL_NM');
                    }
                    return value;
                },
                editor: {
            		xtype: 'combobox',
            		displayField: 'DTL_NM',
            		autoLoadOnValue: true,
            		valueField: 'DTL_CD',
            		editable: false,
            		store: Ext.create('Ext.data.Store',{
            			autoLoad: true,
            			storeId: 'storeBA18',
            			proxy: {
            		           type: 'ajax',
            		           extraParams: {
            		            	V_MAST_CD: 'BA18',
            		            	V_GRID: 'Y'
            		           },	
            		           api: {
            		               read: '/HSPF01/common/sql/Combobox.jsp'
            		           },
            		           reader: {
            		               type: 'json',
            		               rootProperty: 'resultList'
            		           }
            		       }
            		}),
            		listConfig: {
                        itemTpl: [
                            '<div>{DTL_NM}</div>'
                        ]
                    },
            	}
            }, {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold; color: #3367d6',
                width: 100,
                dataIndex: 'M_BP_CD',
                text: '공급처',
                editor: {
                    xtype: 'combobox',
                    displayField: 'M_BP_NM',
                    valueField: 'M_BP_CD',
                    enableRegEx: true,
                    minChars: 2,
                    queryMode: 'local',
                    store: 'WinMBpPopStore',
                    matchFieldWidth: false,
                    listeners: {
                        beforequery: function(record){  
                            record.query = new RegExp(record.query, 'i');
                            record.forceAll = true;
                            
                        },
                        focus: function(widget, event, eOpts) {
                        	var WinMBpPopStore = Ext.getStore('WinMBpPopStore');
                        	WinMBpPopStore.reload();
                        },
                    },
                },
            }, {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold; color: #3367d6',
                width: 150,
                dataIndex: 'M_BP_NM',
                text: '공급처명',
                editor: {
                    xtype: 'combobox',
                    displayField: 'M_BP_NM',
                    valueField: 'M_BP_CD',
                    enableRegEx: true,
                    minChars: 2,
                    queryMode: 'local',
                    store: 'WinMBpPopStore',
                    matchFieldWidth: false,
                    listeners: {
                        beforequery: function(record){  
                            record.query = new RegExp(record.query, 'i');
                            record.forceAll = true;
                            
                        },
                        focus: function(widget, event, eOpts) {
                        	var WinMBpPopStore = Ext.getStore('WinMBpPopStore');
                        	WinMBpPopStore.reload();
                        },
                    },
                  	listConfig: {
                        itemTpl: [
                            '<div>[{M_BP_CD}] {M_BP_NM}</div>'
                        ]
                    }
                },
                renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                    if(Ext.data.StoreManager.lookup('WinMBpPopStore').findRecord('M_BP_CD',value) !==null)
                    {
                        return Ext.data.StoreManager.lookup('WinMBpPopStore').findRecord('M_BP_CD',value).get('M_BP_NM');
                    }
                    return value;
                },
            }, {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold; color: #3367d6',
                width: 150,
                dataIndex: 'MAKER',
                text: 'MAKER',
                editor: {
                	xtype: 'textfield',
                },
            }, {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold; color: #3367d6',
                width: 100,
                dataIndex: 'ORIGIN',
                text: '원산지',
                editor: {
                	xtype: 'textfield',
                },
            }, {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold; color: #3367d6',
                width: 120,
                dataIndex: 'REGION_FT',
                text: '생산공장지역',
                editor: {
                	xtype: 'textfield',
                },
            }, {
    			xtype : 'gridcolumn',
    			dataIndex : 'CAPA_MT_YR',
    			style : 'text-align: center; font-weight: bold; color: #3367d6',
    			align : 'end',
    			text : 'CAPA(MT/년)',
    			width : 130,
    			format : '0,000.00',
    			renderer: function(value) {
                	return Ext.util.Format.number(value, '0,000.00');
                },
                editor : {
        			xtype : 'numberfield',
        			format : '0,000.00',
        			decimalPrecision : 2,
        			align : 'right'
        		},
//                summaryType : 'sum',
//        		summaryRenderer : function(value, summaryData, dataIndex) {
//        			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
//        		},
            }, {
    			xtype : 'gridcolumn',
    			dataIndex : 'MNTH_USE',
    			style : 'text-align: center; font-weight: bold; color: #3367d6',
    			align : 'end',
    			text : '월소요량',
    			width : 110,
    			format : '0,000.00',
    			renderer: function(value) {
                	return Ext.util.Format.number(value, '0,000.00');
                },
                editor : {
        			xtype : 'numberfield',
        			format : '0,000.00',
        			decimalPrecision : 2,
        			align : 'right'
        		},
//                summaryType : 'sum',
//        		summaryRenderer : function(value, summaryData, dataIndex) {
//        			return "<font color='green'>" + Ext.util.Format.number(value, '0,000.00') + "<font>";
//        		},
            }, ]
        },
        {
        	text : '소재구매팀',
    		style : 'text-align: center; font-weight: bold;',
    		columns : [ {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold; color: #3367d6',
                width: 100,
                dataIndex: 'SL_PER',
                text: 'SL',
                format : '0,000.00',
                align : 'end',
    			renderer: function(value) {
    				var result = value;
    				if(!!!result){
    					result =  '-';
    				} else {
    					result = Ext.util.Format.number(value, '0,000.00') + '%';
    				}
    				return result;
                },
                editor : {
        			xtype : 'numberfield',
        			format : '0,000.00',
        			decimalPrecision : 2,
        			align : 'right'
        		},
            }, {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold; color: #3367d6',
                width: 100,
                dataIndex: 'FL_PER',
                text: 'FL',
                format : '0,000.00',
                align : 'end',
                renderer: function(value) {
    				var result = value;
    				if(!!!result){
    					result =  '-';
    				} else {
    					result = Ext.util.Format.number(value, '0,000.00') + '%';
    				}
    				return result;
                },
                editor : {
        			xtype : 'numberfield',
        			format : '0,000.00',
        			decimalPrecision : 2,
        			align : 'right'
        		},
            }, {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold; color: #3367d6',
                width: 100,
                dataIndex: 'MAT_DEV_PER',
                text: '재료개발',
                format : '0,000.00',
                align : 'end',
                renderer: function(value) {
    				var result = value;
    				if(!!!result){
    					result =  '-';
    				} else {
    					result = Ext.util.Format.number(value, '0,000.00') + '%';
    				}
    				return result;
                },
                editor : {
        			xtype : 'numberfield',
        			format : '0,000.00',
        			decimalPrecision : 2,
        			align : 'right'
        		},
            }, {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold; color: #3367d6',
                width: 100,
                dataIndex: 'TPE_PER',
                text: 'TPE',
                format : '0,000.00',
                align : 'end',
                renderer: function(value) {
    				var result = value;
    				if(!!!result){
    					result =  '-';
    				} else {
    					result = Ext.util.Format.number(value, '0,000.00') + '%';
    				}
    				return result;
                },
                editor : {
        			xtype : 'numberfield',
        			format : '0,000.00',
        			decimalPrecision : 2,
        			align : 'right'
        		},
            }, {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold; color: #3367d6',
                width: 100,
                dataIndex: 'EXWILL_PER',
                text: '엑스윌',
                format : '0,000.00',
                align : 'end',
                renderer: function(value) {
    				var result = value;
    				if(!!!result){
    					result =  '-';
    				} else {
    					result = Ext.util.Format.number(value, '0,000.00') + '%';
    				}
    				return result;
                },
                editor : {
        			xtype : 'numberfield',
        			format : '0,000.00',
        			decimalPrecision : 2,
        			align : 'right'
        		},
            }, {
                xtype: 'gridcolumn',
                style: 'text-align: center; font-weight: bold;',
                dataIndex: 'BS_YEAR',
                text: 'BS_YEAR',
                hidden: true
            }, ]
    	},
    ],
    selModel: {
        selType: 'checkboxmodel',
        mode: 'SINGLE',
        listeners: {}
    },
//    features : [ {
//		ftype: 'summary',
//        dock: 'bottom'
//	} ],
    plugins: [
        {
            ptype: 'gridexporter'
        }, {
    		ptype : 'cellediting',
    	    clicksToEdit: 1,
    	    listeners : {
    	    	beforeedit: function (e, editor) {
					var rec = editor.record.data;
					var field = editor.field;
					var userId = parent.Ext.getCmp('GUSER_ID').getValue();
					
					if("/ADMIN/HDH/SMDSM1".indexOf(userId) < 0){
				    	return false;
					}
					
					if((field == 'ITEM_CD' || field == 'ITEM_NM') && rec.V_TYPE != 'I'){
						return false;
					}
			    	
			        return true;
			    },
			    
			    afteredit: function(editor, context, eOpts) {
			    	if(context.column.dataIndex == 'ITEM_CD') {
	            		Ext.Ajax.request({
							url:'/HSPF01/common/popup/sql/common_item.jsp',
							method: 'post',
							params: {
				    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
				    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
				    			V_ITEM_CD: context.record.get('ITEM_CD')
							},
						    success : function(response) {
						    	var jsonResult = Ext.JSON.decode(response.responseText);
						    	
						    	if (jsonResult.resultList.length > 0) {
						    		var ITEM_CD = jsonResult.resultList[0].ITEM_CD;
									var ITEM_NM = jsonResult.resultList[0].ITEM_NM;
									var MAKER = jsonResult.resultList[0].MAKER;
									
									context.record.set('ITEM_NM', ITEM_NM);
									context.record.set('MAKER', MAKER);
						    	} else {
						    		context.record.set('ITEM_NM', '품목정보없음');
						    	}
						    },
							scope: this
						});
            		} else if(context.column.dataIndex=='ITEM_NM') {
            			context.record.set('ITEM_CD', context.record.get('ITEM_NM'));
            			Ext.Ajax.request({
							url:'/HSPF01/common/popup/sql/common_item.jsp',
							method: 'post',
							params: {
				    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
				    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
				    			V_ITEM_CD: context.record.get('ITEM_CD')
							},
						    success : function(response) {
						    	var jsonResult = Ext.JSON.decode(response.responseText);
						    	
						    	if (jsonResult.resultList.length > 0) {
						    		var ITEM_CD = jsonResult.resultList[0].ITEM_CD;
									var ITEM_NM = jsonResult.resultList[0].ITEM_NM;
									var MAKER = jsonResult.resultList[0].MAKER;
									
									context.record.set('ITEM_CD', ITEM_CD);
									context.record.set('ITEM_NM', ITEM_NM);
									context.record.set('MAKER', MAKER);
						    	} else {
						    		context.record.set('ITEM_CD', '품목정보없음');
						    	}
						    	
						    },
							scope: this
						});
            		} else if(context.column.dataIndex == 'M_BP_CD' ) {
	            		Ext.Ajax.request({
							url:'/HSPF01/common/popup/sql/mbp_pop_select.jsp',
							method: 'post',
							params: {
				    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
				    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
				    			W_M_BP_CD: context.record.get('M_BP_CD')
							},
						    success : function(response) {
						    	var jsonResult = Ext.JSON.decode(response.responseText);
						    	
						    	if (jsonResult.resultList.length > 0) {
						    		var M_BP_CD = jsonResult.resultList[0].M_BP_CD;
									var M_BP_NM = jsonResult.resultList[0].M_BP_NM;
									
									context.record.set('M_BP_NM', M_BP_NM);
						    	} else {
						    		context.record.set('M_BP_NM', '공급처정보없음');
						    	}
						    },
							scope: this
						});
            		} else if(context.column.dataIndex == 'M_BP_NM' ) {
            			context.record.set('M_BP_CD', context.record.get('M_BP_NM'));
	            		Ext.Ajax.request({
							url:'/HSPF01/common/popup/sql/mbp_pop_select.jsp',
							method: 'post',
							params: {
				    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
				    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
				    			W_M_BP_CD: context.record.get('M_BP_CD')
							},
						    success : function(response) {
						    	var jsonResult = Ext.JSON.decode(response.responseText);
						    	
						    	if (jsonResult.resultList.length > 0) {
						    		var M_BP_CD = jsonResult.resultList[0].M_BP_CD;
									var M_BP_NM = jsonResult.resultList[0].M_BP_NM;
									
									context.record.set('M_BP_CD', M_BP_CD);
									context.record.set('M_BP_NM', M_BP_NM);
						    	} else {
						    		context.record.set('M_BP_CD', '공급처정보없음');
						    	}
						    },
							scope: this
						});
            		}
			    },
			},
    	}
    ]

});