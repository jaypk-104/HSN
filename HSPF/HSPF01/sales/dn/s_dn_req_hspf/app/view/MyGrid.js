/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('S_DN_REQ_HSPF.view.MyGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.myGrid',

    requires: [
        'S_DN_REQ_HSPF.view.MyGridViewModel',
        'S_DN_REQ_HSPF.view.MyGridViewController',
        'Ext.view.Table',
        'Ext.grid.column.RowNumberer',
        'Ext.grid.column.Number',
        'Ext.form.field.Number',
        'Ext.grid.column.Date',
        'Ext.form.field.Date',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.RowEditing'
    ],

    config: {
        tbar: [
            {
                id: 'gridAddBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf055@FontAwesome',
                iconCls: 'grid-add-btn',
                disabled: true
            },
            {
                id: 'gridDelBtn',
                text: '',
                margin: '0 3 0 0',
                glyph: 'xf056@FontAwesome',
                iconCls: 'grid-del-btn',
            	disabled: true
            },
            {
                xtype: 'container',
                flex: 1
            },
            {
                xtype: 'datefield',
                id: 'V_DR_DT',
                maxWidth: 210,
                minWidth: 210,
                width: 210,
                fieldLabel: '출고요청일',
                labelWidth: 80,
            	margin: '0 3 0 0',
                format: 'Y-m-d',
                listeners : {
                    render : function(datefield) {
                    	var nows = new Date();
                        datefield.setValue(nows);
                    }	
                },
            },
            {
                id: 'gridRequestBtn',
                text: '출고요청',
            	margin: '0 3 0 0',
                style: 'background-color: white; border: 0.5px solid #3367d6;',
                cls: 'blue-btn',
                width: 80
            },
            {
                xtype: 'button',
                glyph: 'xf1c3@FontAwesome',
                id: 'xlsxDown',
                cfg: {
                    type: 'excel07',
                    ext: 'xlsx'
                },
                iconCls: 'grid-excel-btn',
            	margin: '0 3 0 0',
            }
        ]
    },

    controller: 'myGrid',
    viewModel: {
        type: 'myGrid'
    },
    id: 'myGrid',
    bodyBorder: false,
    header: false,
    store: 'MyStore',

    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            text: 'V_TYPE'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 150,
            sortable: true,
            dataIndex: 'SO_NO',
            enableTextSelection: true,
            text: '수주번호',
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 80,
            align: 'end',
            dataIndex: 'SO_SEQ',
            enableTextSelection: true,
            exportStyle: {
                format: 'Currency',
                alignment: {
                    horizontal: 'Right'
                }
            },
            text: '수주순번',
            format: '0,000',
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 100,
            sortable: true,
            dataIndex: 'SO_TYPE',
            enableTextSelection: true,
            text: '수주구분',
        },
        {
            xtype: 'datecolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 100,
            align: 'center',
            dataIndex: 'SO_DT',
            enableTextSelection: true,
            exportStyle: {
                format: 'Short Date'
            },
            text: '수주일',
            format: 'Y-m-d',
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	width: 100,
        	sortable: true,
        	dataIndex: 'S_BP_CD',
        	enableTextSelection: true,
        	text: '고객사',
        	hidden: true
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 100,
            sortable: true,
            dataIndex: 'S_BP_NM',
            enableTextSelection: true,
            text: '고객사',
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 110,
            sortable: true,
            dataIndex: 'ITEM_CD',
            enableTextSelection: true,
            text: '품목코드',
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 200,
            sortable: true,
            dataIndex: 'ITEM_NM',
            enableTextSelection: true,
            text: '품목명',
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 100,
            align: 'end',
            dataIndex: 'SO_QTY',
            enableTextSelection: true,
            exportStyle: {
                format: 'Currency',
                alignment: {
                    horizontal: 'Right'
                }
            },
            text: '수주수량',
            renderer: function(value) {
            	return Ext.util.Format.number(value, '0,000.00');
            }
        },
		{
			xtype: 'numbercolumn',
			style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
			width: 100,
			align: 'end',
			dataIndex: 'DR_QTY',
			enableTextSelection: true,
			exportStyle: {
				format: 'Currency',
				alignment: {
					horizontal: 'Right'
				}
			},
			text: '<span style=\'color:red\'>*</span>출고요청수량',
			editor: {
				xtype: 'numberfield',
				style: 'text-align:right',
				allowBlank: false,
				allowExponential: false,
				listeners: {
					change : function(field, newValue, oldValue, eOpts) {
						field.setMaxValue(vv);
					}
				}
			},
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
            	vv = record.get('SO_QTY');
            	
        		metaData.style = 'background-color: #D8F6CE';
        		return Ext.util.Format.number(value, '0,000.00');
            }	
		},
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
        	text: '<span style=\'color:red\'>*</span>요청창고(TO)',
        	dataIndex: 'TO_SL_CD',
        	width: 130,
        	align: 'left',
        	editor: {
        		xtype: 'combobox',
        		editable: false,
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'sl_combo',
        			proxy: {
        		           type: 'ajax',
        		           extraParams: {
        		            	V_MAST_CD: 'SL_G',
        		            	V_GRID: 'Y'
        		           },	
        		           api: {
        		               read: '/HSPF01/common/sql/Combobox.jsp'
        		           },
        		           reader: {
        		               type: 'json',
        		               rootProperty: 'resultList'
        		           }
        		       }
        		})
        	},
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
            	metaData.style = 'background-color: #D8F6CE';
                if(Ext.data.StoreManager.lookup('sl_combo').findRecord('DTL_CD',value) !==null)
                {
                    return Ext.data.StoreManager.lookup('sl_combo').findRecord('DTL_CD',value).get('DTL_NM');
                }
                return value;
            },
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            width: 100,
            align: 'end',
            dataIndex: 'SO_REMAIN',
            enableTextSelection: true,
            exportStyle: {
                format: 'Currency',
                alignment: {
                    horizontal: 'Right'
                }
            },
            text: '미납품잔량',
            format: '0,000',
            editor: {
                xtype: 'numberfield',
                style: 'text-align:right',
                allowBlank: false,
                allowExponential: false,
                minValue: 0
            },
            renderer: function(value) {
            	return Ext.util.Format.number(value, '0,000.00');
            }
        }
    ],
    selModel: {
        selType: 'checkboxmodel',
        checkOnly: true,
        listeners: {
        	select: function(rowmodel, record, index, eOpts) {
            	record.set('V_TYPE', 'V');
            },
            deselect: function(rowmodel, record, index, eOpts) {
            	record.set('V_TYPE', '');
            }
        }
    },
    viewConfig: {
    	enableTextSelection: true,
      	columnLines: true,
    },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        {
            ptype: 'cellediting',
            clicksToEdit: 1,
            listeners: {
            	edit: function(editor, context, eOpts) {
            		var selModel= Ext.getCmp('myGrid').getSelectionModel();
            		selModel.select(context.record, true);
            		
            		if(context.column.dataIndex=='TO_SL_CD' ){
                    	var store = Ext.getStore('MyStore');
            			store.each(function(rec,idx) {
            				rec.set('TO_SL_CD', context.record.get('TO_SL_CD'));
            				
            			});
                    }
            		
            	}
            }
        }
    ]

});