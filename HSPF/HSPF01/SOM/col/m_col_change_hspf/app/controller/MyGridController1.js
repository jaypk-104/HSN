/*
 * File: app/controller/MyGridController1.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_COL_CHANGE_HSPF.controller.MyGridController1', {
    extend: 'Ext.app.Controller',
    stores : [ 'PopStore', 'PopStore1' ],
    
    control: {
    	"#gridAddBtn" : {
			click : 'gridAddBtnClick'
		},
		"#gridDelBtn" : {
			click : 'gridDelBtnClick'
		},
    	"#w_regBtn" : {
			click : 'w_regBtnClick'
		},
		"#w_regBtn1" : {
			click : 'w_regBtn1Click'
		},
        "#xlsxDown1": {
            click: 'xlsxDown1Click'
        },
    },
    
    gridAddBtnClick : function(button, e, eOpts) {
		var popup = Ext.create("M_COL_CHANGE_HSPF.view.WinAddRow");
		popup.show();
		Ext.getCmp('rowCount').setValue(1);
	},
	
	gridDelBtnClick : function(button, e, eOpts) {
		var popStore = Ext.getStore('PopStore');
		var popGrid = Ext.getCmp('popGrid').getSelection();
		
		for(var i=0; i<popGrid.length; i++) {
			if(popGrid[i].get('V_TYPE') == 'I') {
				popStore.remove(popGrid[i]);
			} else {
//				popGrid[i].set('V_TYPE', 'D');
			}
		}
		
	},
	
    w_regBtnClick : function(button, e, eOpts) {
		var popStore = Ext.getStore('PopStore');
		var popGrid = Ext.getCmp('popGrid').getSelection();
		var myGrid = Ext.getCmp('myGrid').getSelection()[0];
    	
		popStore.sync({
			params : {
				V_TYPE : 'IA',
				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				V_MAST_DB_NO : myGrid.get('MAST_DB_NO'),
				V_COL_NO : myGrid.get('COL_NO'),
				V_COL_SEQ : myGrid.get('COL_SEQ'),
				V_PROC_TYPE : 'A',
				V_BP_CD : myGrid.get('BP_CD'),
				V_DEPT_CD : myGrid.get('DEPT_CD'),
			},
			callback : function(records, operation, success) {
				var tbController = M_COL_CHANGE_HSPF.app.getController("TbButtonController");
				tbController.selBtnClick();
			},
		});

		popStore.removeAll();

		var popWin = button.up().up();
		popWin.destroy();
	},
	
	w_regBtn1Click : function(button, e, eOpts) {
		var popStore = Ext.getStore('PopStore1');
		var popGrid = Ext.getCmp('popGrid1').getSelection()[0];
		var myGrid = Ext.getCmp('myGrid').getSelection()[0];
		
		if(!!!popGrid){
			Ext.Msg.alert('확인', '선택된 행이 없습니다.');
			return;
		}
		
		Ext.Ajax.request({
			url : 'sql/M_COL_CHANGE_HSPF.jsp',
			method : 'post',
			params : {
				V_TYPE : 'IB',
				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				V_MAST_DB_NO : myGrid.get('MAST_DB_NO'),
				V_COL_NO : myGrid.get('COL_NO'),
				V_COL_SEQ : myGrid.get('COL_SEQ'),
				V_PROC_TYPE : 'B',
				V_PROC_AMT : myGrid.get('JAN_AMT'),
				V_BP_CD : myGrid.get('BP_CD'),
				V_DEPT_CD : myGrid.get('DEPT_CD'),
				V_BF_BL_NO : myGrid.get('BL_DOC_NO'),
				V_AF_BL_NO : popGrid.get('BL_DOC_NO'),
			},
			success : function(response) {
				var tbController = M_COL_CHANGE_HSPF.app.getController("TbButtonController");
				tbController.selBtnClick();
			}
		});
		
		popStore.removeAll();

		var popWin = button.up().up();
		popWin.destroy();
	},
    
    xlsxDown1Click: function(button, e, eOpts) {
    	var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('myGrid1');
    	grid.saveDocumentAs({
    		type: 'xlsx',
    		title: '담보미정리처리', //엑셀내타이틀
    		fileName: currentDate+'.xlsx' //엑셀파일이름
    	});
    },
	
});
