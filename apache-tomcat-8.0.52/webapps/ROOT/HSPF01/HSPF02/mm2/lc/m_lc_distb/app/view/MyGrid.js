/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_LC_DISTB.view.MyGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.myGrid',

    requires: [
        'M_LC_DISTB.view.MyGridViewModel',
        'Ext.view.Table',
        'Ext.grid.column.RowNumberer',
        'Ext.grid.column.Number',
        'Ext.form.field.Number',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.CellEditing'
    ],

    config: {
    },

    viewModel: {
        type: 'mygrid'
    },
    id: 'myGrid',
    style: 'border: 1px solid #659DDC; padding: 5px;',
    bodyBorder: false,
    header: false,
    store: 'MyStore',
    viewConfig: {
    	enableTextSelection: true,
      	getRowClass: function(record, index) {
            var LC_NO = record.get('LC_NO');
            if(LC_NO != undefined) {
            	return 'bg-green'
            }
        },
    },
    config: {
        tbar: [
            {
                xtype: 'container',
                flex: 1
            },
            {
                xtype: 'button',
                glyph: 'xf1c3@FontAwesome',
                id: 'xlsxDown',
                cfg: {
                    type: 'excel07',
                    ext: 'xlsx'
                },
                iconCls: 'grid-excel-btn',
                margin: '0 3 0 0',
//                hidden: true
            }
        ]
    },
    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            text: 'V_TYPE',
            dataIndex: 'V_TYPE'
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'CONT_REMARK',
        	enableTextSelection: true,
        	text: '컨테이너분류',
        	width: 130,
        },
       
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'PO_NO',
            enableTextSelection: true,
            text: '발주번호',
            width: 140
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'PO_SEQ',
            enableTextSelection: true,
            text: '발주순번',
            format: '0,000',
            align: 'right',
            width: 100,
        },
        {
        	xtype: 'datecolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'PO_DT',
        	enableTextSelection: true,
        	text: '발주일자',
        	format: 'Y-m-d',
        	align: 'center'
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'APPROV_NO',
            enableTextSelection: true,
            text: '품의번호',
            width: 140
        
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	width: 300,
        	sortable: true,
        	dataIndex: 'APPROV_NM',
        	enableTextSelection: true,
        	text: '품의명',
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'BP_CD',
            enableTextSelection: true,
            text: '공급사코드(h)',
            align: 'center',
            hidden: true
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            width: 170,
            sortable: true,
            dataIndex: 'BP_NM',
            enableTextSelection: true,
            text: '매입처',
        },
        
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'IN_TERMS_NM',
        	enableTextSelection: true,
        	text: '가격조건',
        	width: 250
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'PAY_METH_NM',
        	enableTextSelection: true,
        	text: '결제방법',
        	width: 250
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'PAY_METH',
        	enableTextSelection: true,
        	text: 'PAY_METH',
        	width: 150,
        	hidden: true
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'COL_TYPE_NM',
        	enableTextSelection: true,
        	text: '담보유형',
        	width: 100
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'ITEM_CD',
            enableTextSelection: true,
            text: '품목코드',
            width: 120
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'ITEM_NM',
            enableTextSelection: true,
            text: '품목명',
            width: 200
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'UNIT',
        	enableTextSelection: true,
        	text: '단위',
        	width: 80,
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'SPEC',
        	enableTextSelection: true,
        	text: '규격',
        	width: 150,
        	hidden: true
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'CUR',
        	enableTextSelection: true,
        	text: '화폐단위',
        	width: 85,
        },
        {
        	xtype: 'numbercolumn',
        	style: 'text-align: center; font-weight: bold;',
        	dataIndex: 'XCH_RATE',
        	text: '환율',
        	format: '0,000.00',
        	align: 'right',
        	width: 100
        },
        {
        	xtype: 'numbercolumn',
        	style: 'text-align: center; font-weight: bold;',
        	dataIndex: 'LC_REMAIN_QTY',
        	text: 'L/C미개설수량',
        	format: '0,000.00',
        	align: 'right',
        	summaryType: 'sum',
        	summaryRenderer: function (value, summaryData, dataIndex) {
        		return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
        	},
        	width: 130
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'PO_QTY',
            text: '발주수량',
            format: '0,000.00',
            align: 'right',
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
	        }
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'PO_PRC',
            text: '단가',
            format: '0,000.00',
            align: 'right',
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'PO_AMT',
            text: '금액',
            format: '0,000.00',
            align: 'right',
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
	        },
	        width: 130
        },
        {
        	xtype: 'numbercolumn',
        	style: 'text-align: center; font-weight: bold;',
        	dataIndex: 'PO_LOC_AMT',
        	text: '자국금액',
        	format: '0,000',
        	align: 'right',
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
	        },
	        width: 130
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'HS_CD',
        	enableTextSelection: true,
        	text: 'HS CODE',
        	width: 120,
        	hidden: true
        },
        {
            xtype: 'gridcolumn',
            text: '브랜드',
//            editor: {
//                xtype: 'textfield'
//            },
            dataIndex: 'BRAND',
            style: 'text-align: center; font-weight: bold;',
            width: 130
//            editor: {
//                xtype: 'textfield'
//            },
        },
        {
            xtype: 'gridcolumn',
            text: '원산지',
            dataIndex: 'ORIGIN',
            style: 'text-align: center; font-weight: bold;',
            hidden: true
//            editor: {
//                xtype: 'textfield'
//            },
        },
        {
        	xtype: 'gridcolumn',
        	text: '원산지',
        	dataIndex: 'ORIGIN_NM',
        	style: 'text-align: center; font-weight: bold;',
//            editor: {
//                xtype: 'textfield'
//            },
        },
        {
        	xtype: 'gridcolumn',
        	text: '공장번호',
        	dataIndex: 'PLANT_NO',
        	style: 'text-align: center; font-weight: bold; ',
//        	editor: {
//        		xtype: 'textfield'
//        	},
        	hidden: true
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'COL_NO',
        	enableTextSelection: true,
        	text: 'COL_NO',
        	width: 150,
        	hidden: true
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'COL_SEQ',
        	enableTextSelection: true,
        	text: 'COL_SEQ',
        	width: 100,
        	hidden: true
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'CONT_MGM_NO',
        	enableTextSelection: true,
        	text: 'CONT_MGM_NO',
        	width: 200,
        	hidden: true
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'PO_USR_NM',
            enableTextSelection: true,
            text: '발주자',
        	filter: { 			//필터
        		type : 'list',
            },
            width: 80,
            align: 'center'
        },
       
    ],
    selModel: {
        selType: 'checkboxmodel',
        listeners: {
        	select: function(rowmodel, record, index, eOpts) {
        		var M_BP_CD = record.get('BP_CD');
        		var LC_NO = record.get('LC_NO');
        		var LC_SEQ = record.get('LC_SEQ');
        		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
        		var flag = '';
        		var msg = '';
        		var selModel= Ext.getCmp('myGrid1').getSelectionModel();
        		var store = Ext.getStore('MyStore');
        		var store1 = Ext.getStore('MyStore1');
    			var store1Cnt = store1.getCount();

    			record.set('V_TYPE', 'V');

    				var flag = '';
    				var M_BP_CD2 = Ext.getCmp('V_M_BP_CD2').getValue();
    				var PAY_METH = Ext.getCmp('V_PAY_METH').getValue();
    				
    				if( M_BP_CD2 == '' ) {
    					flag = 'T';
    					Ext.getCmp('V_M_BP_CD2').setValue(record.get('BP_CD'));
            			Ext.getCmp('V_M_BP_NM2').setValue(record.get('BP_NM')); 
            			Ext.getCmp('V_PAY_METH').setValue(record.get('PAY_METH')); 
            			Ext.getCmp('V_IN_TERMS').setValue(record.get('IN_TERMS')); 
            			Ext.getCmp('V_CUR').setValue(record.get('CUR')); 
            			Ext.getCmp('V_XCH_RATE').setValue(record.get('XCH_RATE')); 
    				} else if (M_BP_CD2 != record.get('BP_CD')) {
    					flag = 'F';
    					msg = '동일한 공급사를 선택하세요.';
    				} else if (PAY_METH != record.get('PAY_METH')) {
    					flag = 'F';
    					msg = '결제방법이 일치하지 않습니다.';
    				} else {
    					flag = 'T';
    				}
    				
    				
    				if(flag == 'T') {
    					if(Ext.getCmp('V_LC_NO').getValue() == '') {
    						var flag = 'GO';
    						
    						store1.each(function(rec, idx){
//    							console.log((rec.get('PO_NO') == record.get('PO_NO')));
//    							console.log((rec.get('PO_SEQ') == record.get('PO_SEQ')));
//    							console.log((rec.get('CONT_MGM_NO') == record.get('CONT_MGM_NO')));

    							if(((rec.get('PO_NO') == record.get('PO_NO')) && ((rec.get('PO_SEQ') == record.get('PO_SEQ')) && ((rec.get('CONT_MGM_NO') == record.get('CONT_MGM_NO')))))) {
    								rec.set('PO_QTY', rec.get('PO_QTY') + record.get('LC_REMAIN_QTY'));
    								rec.set('PO_AMT', rec.get('PO_QTY')  * rec.get('PO_PRC')  );
    								rec.set('PO_LOC_AMT', rec.get('PO_QTY')  * rec.get('PO_PRC') * record.get('XCH_RATE') );
    								flag = 'STOP';
    							} 
    						});
    						
    						if(flag != 'STOP') {
								store1.insert(store1Cnt, [ ({
	        						V_TYPE: 'V',
	    							ITEM_CD : record.get('ITEM_CD'),
	    							ITEM_NM : record.get('ITEM_NM'),
	    							SPEC : record.get('SPEC'),
	    							UNIT : record.get('UNIT'),
	    							PRICE : record.get('PRICE'),
	    							PO_QTY : record.get('LC_REMAIN_QTY'),
	    							PO_PRC : record.get('PO_PRC'),
	    							PO_AMT : record.get('PO_AMT'),
	    							PO_LOC_AMT : record.get('PO_LOC_AMT'), 
	    							BRAND : record.get('BRAND'),
	    							ORIGIN : record.get('ORIGIN'),
	    							COL_TYPE_NM : record.get('COL_TYPE_NM'),
	    							APPROV_NM : record.get('APPROV_NM'),
	    							APPROV_NO : record.get('APPROV_NO'),
	    							PO_NO : record.get('PO_NO'),
	    							PO_SEQ : record.get('PO_SEQ'),
	    							CONT_MGM_NO : record.get('CONT_MGM_NO'),
	    							COL_NO : record.get('COL_NO'),
	    							COL_SEQ : record.get('COL_SEQ'),
	    						}) ]);
							}
    						
    					} else {
    						var flag = 'GO';
    						store1.each(function(rec, idx){
    							
    							if(((rec.get('PO_NO') == record.get('PO_NO')) && ((rec.get('PO_SEQ') == record.get('PO_SEQ')) && ((rec.get('CONT_MGM_NO') == record.get('CONT_MGM_NO')))))) {
    								rec.set('PO_QTY', rec.get('PO_QTY') + record.get('LC_REMAIN_QTY'));
    								rec.set('PO_AMT', rec.get('PO_QTY')  * rec.get('PO_PRC') );
    								rec.set('PO_LOC_AMT', rec.get('PO_QTY')  * rec.get('PO_PRC') * record.get('XCH_RATE')  );
    								flag = 'STOP';
    							}
    						});
    						
    						if(flag != 'STOP') {
								store1.insert(store1Cnt, [ ({
	        						V_TYPE: 'V',
	    							ITEM_CD : record.get('ITEM_CD'),
	    							ITEM_NM : record.get('ITEM_NM'),
	    							SPEC : record.get('SPEC'),
	    							UNIT : record.get('UNIT'),
	    							PRICE : record.get('PRICE'),
	    							PO_QTY : record.get('LC_REMAIN_QTY'),
	    							PO_PRC : record.get('PO_PRC'),
	    							PO_AMT : record.get('PO_AMT'),
	    							PO_LOC_AMT : record.get('PO_LOC_AMT'),
	    							BRAND : record.get('BRAND'),
	    							ORIGIN : record.get('ORIGIN'),
	    							COL_TYPE_NM : record.get('COL_TYPE_NM'),
	    							APPROV_NM : record.get('APPROV_NM'),
	    							APPROV_NO : record.get('APPROV_NO'),
	    							PO_NO : record.get('PO_NO'),
	    							PO_SEQ : record.get('PO_SEQ'),
	    							CONT_MGM_NO : record.get('CONT_MGM_NO'),
	    							COL_NO : record.get('COL_NO'),
	    							COL_SEQ : record.get('COL_SEQ'),
	    						}) ]);
							}
    						
    					}
    					
    					
    					//공급사
    					Ext.getCmp('V_M_BP_CD2').setValue(record.get('BP_CD'));
            			Ext.getCmp('V_M_BP_NM2').setValue(record.get('BP_NM')); 
            			
            			//개설금액 변화
            			var AMT = 0;
            			var BEFORE_AMT = Number(Ext.getCmp('V_DOC_AMT').getValue());
            			AMT = BEFORE_AMT + Number(record.get('PO_AMT'));
            			
            			Ext.getCmp('V_DOC_AMT').setValue(AMT);
            			Ext.getCmp('V_COL_NO').setValue(record.get('COL_NO'));
            			Ext.getCmp('V_PO_NO2').setValue(record.get('PO_NO'));
            			
    				} else {
    					Ext.Msg.alert('확인', msg);
    					selModel.deselect(record, true);
    				}
        		
            },
            deselect: function(rowmodel, record, index, eOpts) {
            	var LC_NO = record.get('LC_NO');
            	var store = Ext.getStore('MyStore');
            	var store1 = Ext.getStore('MyStore1');
            	var selModel= Ext.getCmp('myGrid').getSelectionModel();
            	var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
            	
            	store1.each(function(rec, idx) {
            		
            		if(((rec.get('PO_NO') == record.get('PO_NO')) && ((rec.get('PO_SEQ') == record.get('PO_SEQ')) && ((rec.get('CONT_MGM_NO') == record.get('CONT_MGM_NO'))
            				&&  ((record.get('LC_REMAIN_QTY') == rec.get('PO_QTY'))))))) {
						store1.remove(rec);
					} else if (((rec.get('PO_NO') == record.get('PO_NO')) && ((rec.get('PO_SEQ') == record.get('PO_SEQ')) && ((rec.get('CONT_MGM_NO') == record.get('CONT_MGM_NO'))
            				&&  ((record.get('LC_REMAIN_QTY') != rec.get('PO_QTY'))))))) {
						rec.set('PO_QTY', rec.get('PO_QTY') - record.get('LC_REMAIN_QTY'));
						rec.set('PO_AMT', rec.get('PO_QTY')  * rec.get('PO_PRC')  );
						rec.set('PO_LOC_AMT', rec.get('PO_QTY')  * rec.get('PO_PRC') * record.get('XCH_RATE') );
					}
            		
            	});
            	
        		//선택된 정보가 없으면 하단 L/C 정보 BLANK 
				if(store1.getCount() == 0) {
					Ext.getCmp('V_LC_NO').setValue('');
					
        			var nows = new Date();
        			Ext.getCmp('V_OPEN_DT').setValue(nows);
        			Ext.getCmp('V_M_BP_NM2').setValue('');
        			Ext.getCmp('V_M_BP_CD2').setValue('');
					Ext.getCmp('V_LC_DOC_NO').setValue('');
					Ext.getCmp('V_BANK_CD').setValue(null);
					Ext.getCmp('V_DOC_AMT').setValue('0');
        			Ext.getCmp('V_CUR').setValue('USD');
        			Ext.getCmp('V_XCH_RATE').setValue(1);
        			Ext.getCmp('V_IN_TERMS').setValue(null);
        			Ext.getCmp('V_PAY_METH').setValue(null);
        			

        			Ext.getCmp('V_COL_NO').setValue('');
        			Ext.getCmp('V_PO_NO2').setValue('');
        			
        			
        			store1.removeAll();
				}
            }
        }
    },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        {
            ptype: 'cellediting'
        },
        {
    		ptype: 'gridfilters' ///이부분
      }
    ],
    features: [
               {
                   ftype: 'summary'
               }
            ],
    viewConfig: {
    	enableTextSelection: true,
    },

});