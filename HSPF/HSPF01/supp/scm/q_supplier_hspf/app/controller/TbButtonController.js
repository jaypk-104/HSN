/*
 * File: app/controller/TbButtonController.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Q_SUPPLIER_HSPF.controller.TbButtonController', {
    extend: 'Ext.app.Controller',
    stores: [
        'MyStore'
    ],

    control: {
        "#selBtn": {
            click: 'selBtnClick'
        },
        "#saveBtn": {
            click: 'saveBtnClick'
        },
        "#saveBtn1": {
        	click: 'saveBtn1Click'
        },
        "#delBtn": {
            click: 'delBtnClick'
        },
        "#clsBtn": {
            click: 'clsBtnClick'
        },
        "#clsBtn1": {
        	click: 'clsBtn1Click'
        },
        "mysearchform textfield[name=search_field]": {
            specialkey: 'tfEnter'
        }
    },

    selBtnClick: function(button, e, eOpts) {
    	var store = this.getMyStoreStore();
    	store.removeAll();
    	store.load({
    		params: {
    			V_TYPE: 'HS',
    			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
                V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
                V_SL_CD : Ext.getCmp('V_SL_CD').getValue(),
                V_ASN_NO : Ext.getCmp('V_ASN_NO').getValue(),
                V_DL_FR_DT : Ext.getCmp('V_DL_FR_DT').getValue(),
                V_DL_TO_DT : Ext.getCmp('V_DL_TO_DT').getValue(),
                V_ITEM_CD : Ext.getCmp('V_ITEM_CD').getValue(),
                V_INSP_DT : Ext.getCmp('V_INSP_DT').getValue(),
                V_STS_ALL : Ext.getCmp('V_STS_ALL').getValue(),
                V_STS_DLVY : Ext.getCmp('V_STS_DLVY').getValue(),
                V_STS_WAIT : Ext.getCmp('V_STS_WAIT').getValue(),
                V_STS_APPROVERWAIT : Ext.getCmp('V_STS_APPROVERWAIT').getValue(),
                V_STS_RESULT : Ext.getCmp('V_STS_RESULT').getValue(),
    		},
    		callback: function(records,operations,success){
    		}
    	})
    },

    saveBtn1Click: function(button, e, eOpts) {
    	var store = Ext.getCmp('myGrid').getStore();
    	var store1 = Ext.getCmp('myGrid1').getStore();
    	
    	var LOT_QTY = Number(Ext.getCmp('W_LOT_QTY').getValue());
    	var OK_QTY = (Ext.getCmp('W_OK_QTY').getValue() == "" ? "0" : Ext.getCmp('W_OK_QTY').getValue());
		var BAD_QTY = (Ext.getCmp('W_BAD_QTY').getValue() == "" ? "0" : Ext.getCmp('W_BAD_QTY').getValue());

    	if(LOT_QTY < Number(OK_QTY) + Number(BAD_QTY)){
    		Ext.Msg.alert('확인','검사수량이 많습니다.');//검사 수량이 많습니다
    	}else if(LOT_QTY > Number(OK_QTY) + Number(BAD_QTY)){
    		Ext.Msg.alert('확인','검사수량이 작습니다.');//검사 수량이 작습니다
    	}else{
    		//저장하시겠습니까
    		Ext.Msg.confirm('화인','저장하시겠습니까?', function(button){
    			if(button == 'yes') {
    				Ext.Ajax.request({
    					url: 'sql/Q_SUPPLIER_HSPF_hspf.jsp',
    					method: 'post',
    					params: {
    						V_TYPE: 'U',
    						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
    						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
    						V_SL_CD : Ext.getCmp('W_SL_CD').getValue(),
    						V_ASN_NO : Ext.getCmp('W_ASN_NO').getValue(),
    						V_LOT_NO : Ext.getCmp('W_LOT_NO').getValue(),
    						V_ITEM_CD : Ext.getCmp('W_ITEM_CD').getValue(),
    						V_HSTN_ITEM_CD : Ext.getCmp('W_HSTN_ITEM_CD').getValue(),
    						V_DLVY_AVL_DT : Ext.getCmp('W_DLVY_AVL_DT').getValue(),
    						V_OK_QTY : OK_QTY,
    						V_BAD_QTY : BAD_QTY,
    						V_INSP_DT : Ext.getCmp('W_INSP_DT').getValue(),
    						V_INSPECTOR : Ext.getCmp('W_INSPECTOR').getValue(),
    						V_WRITER : Ext.getCmp('W_WRITER').getValue(),
    						V_WRITERYN : Ext.getCmp('W_WRITERYN').getValue(),
    						V_APPROVER : Ext.getCmp('W_APPROVER').getValue(),
    						V_APPROVERYN : Ext.getCmp('W_APPROVERYN').getValue()
    					},
    					callback : function(records, operation, success) {
    						store1.sync({
    				    		params: {
    				    			V_TYPE : 'WU',
    				    			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
    				    			V_SL_CD : Ext.getCmp('W_SL_CD').getValue(),
    			                    V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
    			                    V_DLVY_AVL_DT : Ext.getCmp('W_DLVY_AVL_DT').getValue(),
    				    		},
    				    		callback: function(records, operation, success) {
    				    			store1.reload();
    							}
    				    	});
    						store.reload();
    						store1.reload();
    					}
    				});
    				
    			}
        	});
    	}
    },

    delBtnClick: function(button, e, eOpts) {
        alert('delete');
    },

    clsBtnClick: function(button, e, eOpts) {
    	var tab=parent.Ext.getCmp('myTab');
        var activeTab=tab.getActiveTab();
        var tabIndex=tab.items.indexOf(activeTab);
        tab.remove(tabIndex,true);
    },

    tfEnter: function(field, e, eOpts) {
        	if (e.getKey() == e.ENTER) {
        		this.selBtnClick();
        	}
    },
    
    clsBtn1Click: function(button, e, eOpts) {
    	Ext.getCmp('popup').destroy();
    }
    
});
