/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_IMP_TOT_HSPF.view.MyGrid', {
	extend : 'Ext.grid.Panel',
	alias : 'widget.myGrid',

	requires: [
        'M_IMP_TOT_HSPF.view.MyGridViewModel',
        'M_IMP_TOT_HSPF.view.MyGridViewController',
        'Ext.view.Table',
        'Ext.grid.column.RowNumberer',
        'Ext.grid.column.Number',
        'Ext.form.field.Number',
        'Ext.grid.column.Date',
        'Ext.form.field.Date',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.RowEditing'
    ],

	config : {
		tbar : [ {
			xtype : 'textfield',
			fieldLabel : '',
			margin : '0 3 0 10',
			width : 150,
			id : 'V_SEARCH_VALUE',
			name : 'search_field2',
			labelWidth : 0,
		}, {
			xtype : 'button',
			id : 'gridSearchBtn',
			margin : '0 3 0 0',
			text : '검색',
			style : 'background-color: white; border: 0.5px solid #3367d6;',
			cls : 'blue-btn',
		}, {
			xtype : 'textfield',
			fieldLabel : '선택합계금액',
			margin : '0 0 0 10',
			width : 200,
			editable : false,
			id : 'V_SELECTED_AMT',
			labelWidth : 80,
			fieldStyle : 'text-align: right',
		}, {
			xtype : 'container',
			flex : 1
		},
		{
			xtype : 'button',
			id : 'regTtBtn',
			margin : '0 3 0 0',
			text : '외화신청서',
			style : 'background-color: white; border: 0.5px solid #3367d6;',
			cls : 'blue-btn',
		}, {
			xtype : 'button',
			id : 'regLgBtn',
			margin : '0 3 0 0',
			text : 'LG신청서',
			style : 'background-color: white; border: 0.5px solid #3367d6;',
			cls : 'blue-btn',
		}, {
			xtype : 'button',
			glyph : 'xf1c3@FontAwesome',
			id : 'xlsxDown',
			cfg : {
				type : 'excel07',
				ext : 'xlsx'
			},
			iconCls : 'grid-excel-btn',
		} ]
	},

	controller : 'mygrid',
	viewModel : {
		type : 'mygrid'
	},
	id : 'myGrid',
	style : 'border: 1px solid #659DDC; padding: 5px;',
	bodyBorder : false,
	header : false,
	store : 'MyStore',

	viewConfig : {
		enableTextSelection : true,
	},

	columns : [ {
		xtype : 'rownumberer',
		width : 40
	}, {
		xtype : 'gridcolumn',
		hidden : true,
		text : 'V_TYPE'
	},
	//        {
	//            xtype: 'gridcolumn',
	//            dataIndex: 'ROWNUM',
	//            text: 'ROWNUM',
	//            hidden: true,
	//        },
	{
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 150,
		dataIndex : 'AFFILIATE',
		text : '고객사구분',
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 170,
		dataIndex : 'MAKER',
		text : 'MAKER',
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 120,
		dataIndex : 'AGENT',
		text : 'AGENT',
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 120,
		dataIndex : 'OFFER_NO',
		text : 'OFFER NO',
		editor : {
			xtype : 'textfield',
		},
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 170,
		dataIndex : 'PO_NO',
		text : '발주번호',
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 80,
		align : 'end',
		dataIndex : 'PO_SEQ',
		text : '발주순번',
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 80,
		align : 'end',
		dataIndex : 'DTL_SEQ',
		text : '상세순번',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		dataIndex : 'PO_USR_NM',
		text : '발주자',
		align : 'center',
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 200,
		dataIndex : 'BP_NM',
		text : '공급사',
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 120,
		dataIndex : 'ITEM_CD',
		text : '품목코드',
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 150,
		dataIndex : 'ITEM_NM',
		text : '품명',
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 150,
		dataIndex : 'ITEM_GROUP_NM',
		text : '종류',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		align : 'center',
		dataIndex : 'IN_TERMS',
		text : '조건',
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		align : 'center',
		dataIndex : 'CUR',
		text : '화폐단위',
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		align : 'end',
		dataIndex : 'PRC',
		text : '단가',
		format : '0,000.00000',
		renderer : function(value) {
			return Ext.util.Format.number(value, '0,000.00000');
		},
		exportStyle : {
			format : 'Price',
			alignment : {
				horizontal : 'Right'
			},
		},
	},
	//        {
	//            xtype: 'numbercolumn',
	//            style: 'text-align: center; font-weight: bold;',
	//            width: 100,
	//            align: 'end',
	//            dataIndex: 'QTY',
	//            text: '발주수량',
	//            renderer: function(value) {
	//            	return Ext.util.Format.number(value, '0,000.00');
	//            },
	//            exportStyle: {
	//				 format : 'Qty',
	//				 alignment: {
	//					 horizontal: 'Right'
	//				 },
	//			},
	//            hidden: true
	//        },
	{
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 120,
		align : 'end',
		dataIndex : 'QTY',
		text : '세부수량(KG)',
		format : '0,000.00',
		renderer : function(value) {
			return Ext.util.Format.number(value, '0,000.00');
		},
		exportStyle : {
			format : 'Qty',
			alignment : {
				horizontal : 'Right'
			},
		},
	}, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 120,
		align : 'end',
		dataIndex : 'DOC_AMT',
		text : '금액',
		format : '0,000.0000',
		renderer : function(value) {
			return Ext.util.Format.number(value, '0,000.0000');
		},
		exportStyle : {
			format : 'Fixed',
			alignment : {
				horizontal : 'Right'
			},
		},
	}, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		align : 'end',
		dataIndex : 'BL_REMAIN_QTY',
		text : '발주잔량',
		format : '0,000.00',
		renderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			if (!!!record.get('BL_NO')) {
			} else if (value > 0 || value < 0) {
				metaData.style = "background-color:yellow; font-weight:bold;";
			}

			return Ext.util.Format.number(value, '0,000.00');
		},
		exportStyle : {
			format : 'Qty',
			alignment : {
				horizontal : 'Right'
			},
		},
		editor : {
			xtype : 'textfield',
			editable : false,
			listeners : {
				afterrender : function(c) {
					this.mon(this.getEl(), 'dblclick', function() {
						//							let BL_DOC_NO = Ext.getCmp('myGrid').getSelection()[0].get('BL_DOC_NO');
						//							if(!!BL_DOC_NO){
						var selectedRecord = Ext.getCmp('myGrid').getSelection()[0];

						var popup = Ext.create("M_IMP_TOT_HSPF.view.MyWindow1");
						popup.center();
						popup.show();

						var store = Ext.getStore('BlQtyStore');
						store.removeAll();

						Ext.getCmp('W_PO_NO').setValue(selectedRecord.get('PO_NO'));
						Ext.getCmp('W_PO_SEQ').setValue(selectedRecord.get('PO_SEQ'));
						Ext.getCmp('W_PO_USR_NM').setValue(selectedRecord.get('PO_USR_NM'));
						Ext.getCmp('W_BL_REMAIN_QTY').setValue(Ext.util.Format.number(selectedRecord.get('BL_REMAIN_QTY'), '0,000.00'));
						M_IMP_TOT_HSPF.app.getController("TbButtonController").w_selBtnClick();
						//							}
					});
				}
			}
		}
	}, {
		xtype : 'datecolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		format : 'Y-m-d',
		dataIndex : 'DLVY_HOPE_DT',
		text : 'RTA',
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 200,
		dataIndex : 'LC_DOC_NO',
		text : 'LC NO / TT',
		//            editor : {
		//    			xtype : 'textfield',
		//    			editable: false,
		//    			listeners : {
		//    				afterrender : function(c) {
		//    					this.mon(this.getEl(), 'dblclick', function() {
		//    						let LC_DOC_NO = Ext.getCmp('myGrid').getSelection()[0].get('LC_DOC_NO');
		//    						if(!!!LC_DOC_NO){
		//    							var dynamicTab={
		//        								xtype:'panel',
		//        								title : 'L/C등록',
		//        								autoScroll: true,
		//        								html : '<iframe name="xxx" border =0 src="/HSPF01/TOT/lc/m_lc_tot_hspf/M_LC_TOT_HSPF.jsp" width="100%" height="100%"></iframe>',
		//        								closable : true,
		//        						};
		//        						
		//        						parent.Ext.getCmp('myTab').add(dynamicTab).show();
		//    						}
		//    					});
		//    				}
		//    			}
		//    		},
		renderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			var result = value;
			if (!!value && record.get('CLS_YN') == 'Y') {
				result = value + "<font style='color:red;'> (취소)</font>";
			}
			return result;
		},
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'datecolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		align : 'center',
		dataIndex : 'LC_OPEN_DT',
		text : 'L/C OPEN DATE',
		format : 'Y-m-d',
		hidden : true
	}, {
		xtype : 'datecolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 100,
		dataIndex : 'ETD',
		text : 'ETD',
		format : 'Y-m-d',
		align : 'center',
		editor : {
			xtype : 'datefield',
			format : 'Y-m-d'
		},
		filter : {
			type : 'date',
		},
		exportRenderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			return Ext.util.Format.date(value, 'Y-m-d')
		},
	}, {
		xtype : 'datecolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 100,
		dataIndex : 'ETA',
		text : 'ETA',
		format : 'Y-m-d',
		align : 'center',
		editor : {
			xtype : 'datefield',
			format : 'Y-m-d'
		},
		filter : {
			type : 'date',
		},
		exportRenderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			return Ext.util.Format.date(value, 'Y-m-d')
		},
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		align : 'center',
		dataIndex : 'BL_TYPE',
		text : '선적구분',
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'datecolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		align : 'center',
		dataIndex : 'LOADING_DT',
		text : 'B/L DATE',
		format : 'Y-m-d',
		filter : {
			type : 'date',
		},
		exportRenderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			return Ext.util.Format.date(value, 'Y-m-d')
		},
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 150,
		dataIndex : 'BL_DOC_NO',
		text : 'B/L NO',
		editor : {
			xtype : 'textfield',
		//    			listeners : {
		//    				afterrender : function(c) {
		//    					this.mon(this.getEl(), 'dblclick', function() {
		//    						let BL_DOC_NO = Ext.getCmp('myGrid').getSelection()[0].get('BL_DOC_NO');
		//    						if(BL_DOC_NO == undefined || BL_DOC_NO == ''){
		//    							var dynamicTab={
		//        								xtype:'panel',
		//        								title : 'B/L등록',
		//        								autoScroll: true,
		//        								html : '<iframe name="xxx" border =0 src="/HSPF01/TOT/bl/m_bl_tot_hspf/M_BL_TOT_HSPF.jsp" width="100%" height="100%"></iframe>',
		//        								closable : true,
		//        						};
		//        						
		//        						parent.Ext.getCmp('myTab').add(dynamicTab).show();
		//    						}
		//    					});
		//    				}
		//    			}
		},
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		align : 'end',
		dataIndex : 'ORDER_SEQ',
		text : '우선순위',
		format : '0,000',
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 100,
		//            align: 'center',
		dataIndex : 'DOC_YN',
		text : '선적서류',
		filter : {
			type : 'list',
		},
		renderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			if (Ext.data.StoreManager.lookup('sc04Store').findRecord('DTL_CD', value) !== null) {
				return Ext.data.StoreManager.lookup('sc04Store').findRecord('DTL_CD', value).get('DTL_NM');
			}
			return value;
		},
		exportRenderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			if (Ext.data.StoreManager.lookup('sc04Store').findRecord('DTL_CD', value) != null) {
				return Ext.data.StoreManager.lookup('sc04Store').findRecord('DTL_CD', value).get('DTL_NM');
			}

			return value;
		},
		editor : {
			xtype : 'combobox',
			displayField : 'DTL_NM',
			autoLoadOnValue : true,
			valueField : 'DTL_CD',
			editable : false,
			store : Ext.create('Ext.data.Store', {
				autoLoad : true,
				storeId : 'sc04Store',
				proxy : {
					type : 'ajax',
					extraParams : {
						V_MAST_CD : 'SC04',
						V_GRID : 'Y'
					},
					api : {
						read : '/HSPF01/common/sql/Combobox.jsp'
					},
					reader : {
						type : 'json',
						rootProperty : 'resultList'
					}
				}
			}),
		}
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 100,
		//            align: 'center',
		dataIndex : 'O_BL_YN',
		text : 'O/BL 송부',
		filter : {
			type : 'list',
		},
		renderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			if (Ext.data.StoreManager.lookup('sc05Store').findRecord('DTL_CD', value) !== null) {
				return Ext.data.StoreManager.lookup('sc05Store').findRecord('DTL_CD', value).get('DTL_NM');
			}
			return value;
		},
		exportRenderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			if (Ext.data.StoreManager.lookup('sc05Store').findRecord('DTL_CD', value) != null) {
				return Ext.data.StoreManager.lookup('sc05Store').findRecord('DTL_CD', value).get('DTL_NM');
			}

			return value;
		},
		editor : {
			xtype : 'combobox',
			displayField : 'DTL_NM',
			autoLoadOnValue : true,
			valueField : 'DTL_CD',
			editable : false,
			store : Ext.create('Ext.data.Store', {
				autoLoad : true,
				storeId : 'sc05Store',
				proxy : {
					type : 'ajax',
					extraParams : {
						V_MAST_CD : 'SC05',
						V_GRID : 'Y'
					},
					api : {
						read : '/HSPF01/common/sql/Combobox.jsp'
					},
					reader : {
						type : 'json',
						rootProperty : 'resultList'
					}
				}
			}),
		}
	}, {
		xtype : 'datecolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 100,
		align : 'center',
		dataIndex : 'INBOARD_DT',
		text : '입항일',
		format : 'Y-m-d',
		editor : {
			xtype : 'datefield',
			format : 'Y-m-d'
		},
		filter : {
			type : 'date',
		},
		exportRenderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			return Ext.util.Format.date(value, 'Y-m-d')
		},
	}, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 100,
		align : 'end',
		dataIndex : 'FR_TIME',
		text : 'FREE TIME',
		maxLength : 3,
		format : '0,000',
		editor : {
			xtype : 'numberfield',
			format : '0,000',
			align : 'right'
		},
		filter : {
			type : 'list',
		},
		renderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			let result = value;
			if (value == 0 && !!!record.get('MVMT_DT') && (record.get('BL_TYPE') == 'LCL' || record.get('BL_TYPE') == 'AIR')) {
				metaData.style = "background-color:red; font-weight:bold;";
				result = "<font style='color:white;'>" + value + "</font>";
			}
			return result;
		},
	}, {
		xtype : 'datecolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		align : 'center',
		dataIndex : 'FR_DT',
		text : 'F/T만료일',
		format : 'Y-m-d',
		filter : {
			type : 'date',
		},
		exportRenderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			return Ext.util.Format.date(value, 'Y-m-d')
		},
	}, 
	{
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		dataIndex : 'OVER_DT',
		align : 'end',
		format : '0,000',
		text : '초과기간',
		renderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			let result = value;
			if (record.get('INBOARD_DT')) {
				result = '-';
			} else if (!!!record.get('INBOARD_DT')) {
				result = '';
			} else if (value >= -5) {
				metaData.style = "background-color:red; font-weight:bold;";
				result = "<font style='color:white;'>" + value + "</font>";
			} else if (value < -5 && value >= -10) {
				metaData.style = "background-color:yellow; font-weight:bold;";
			}
			return result;
		},
	}, 
	{
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		dataIndex : 'IMPORT_REPORT_ADD_TAX_DT',
		align : 'end',
		format : '0,000',
		text : '미신고가산세',
		renderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			let result = value;
			
			if (record.get('ID_DT')) {
				result = '-';
			} 
			else if (value == null){
				
			}
			/*
			else if (!!!record.get('INBOARD_DT')) {
				result = '';
			} 
			*/
			else if (value >= -5) {
				metaData.style = "background-color:red; font-weight:bold;";
				result = "<font style='color:white;'>" + value + "일</font>";
				
			} else if (value < -5 && value >= -10) {
				metaData.style = "background-color:yellow; font-weight:bold;";
				result = value + '일';
			}
			else if (record.get('INBOARD_DT')){
				result = value + '일';
			}
			
			return result;
		},
	}, 
	
	{
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 130,
		dataIndex : 'ID_NO',
		text : '신고번호',
		filter : {
			type : 'list',
		},
	//            editor : {
	//    			xtype : 'textfield',
	//    			editable: false,
	//    			listeners : {
	//    				afterrender : function(c) {
	//    					this.mon(this.getEl(), 'dblclick', function() {
	//    						let ID_NO = Ext.getCmp('myGrid').getSelection()[0].get('ID_NO');
	//    						if(ID_NO == undefined || ID_NO == ''){
	//    							var dynamicTab={
	//        								xtype:'panel',
	//        								title : '통관등록',
	//        								autoScroll: true,
	//        								html : '<iframe name="xxx" border=0 src="/HSPF01/TOT/cc/m_cc_tot_hspf/M_CC_TOT_HSPF.jsp" width="100%" height="100%"></iframe>',
	//        								closable : true,
	//        						};
	//        						
	//        						parent.Ext.getCmp('myTab').add(dynamicTab).show();
	//    						}
	//    					});
	//    				}
	//    			}
	//    		},
	}, {
		xtype : 'datecolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 100,
		dataIndex : 'ID_DT',
		align : 'center',
		text : '수입신고',
		format : 'Y-m-d',
		editor : {
			xtype : 'datefield',
			format : 'Y-m-d'
		},
		filter : {
			type : 'date',
		},
		exportRenderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			return Ext.util.Format.date(value, 'Y-m-d')
		},
	}, 
	{
		xtype : 'datecolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 100,
		dataIndex : 'NO_OV',
		align : 'center',
		text : '미반출과태료',
		format : 'Y-m-d',
		editor : {
			xtype : 'datefield',
			format : 'Y-m-d'
		},
		filter : {
			type : 'date',
		},
		exportRenderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			return Ext.util.Format.date(value, 'Y-m-d')
		},
	}, 
	{
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		dataIndex : 'NO_OV_DT',
		align : 'end',
		format : '0,000',
		text : '미반출과태료',
		renderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			let result = value;
			
			if (record.get('MVMT_DT')) {
				result = '-';
			} 
			else if (value == null){
				
			}
			else if (value >= -5) {
				metaData.style = "background-color:red; font-weight:bold;";
				result = "<font style='color:white;'>" + value + "일</font>";
				
			} else if (value < -5 && value >= -10) {
				metaData.style = "background-color:yellow; font-weight:bold;";
				result = value + '일';
			}
			else if (record.get('NO_OV')){
				result = value + '일';
			}
			
			
			return result;
		},
	}, 
	{
		xtype : 'datecolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 100,
		align : 'center',
		dataIndex : 'GR_REQ_DT',
		text : '입고요청일',
		format : 'Y-m-d',
		editor : {
			xtype : 'datefield',
			format : 'Y-m-d'
		},
		filter : {
			type : 'date',
		},
		exportRenderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			return Ext.util.Format.date(value, 'Y-m-d')
		},
	}, {
		xtype : 'datecolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		align : 'center',
		dataIndex : 'MVMT_DT',
		text : '입고일',
		format : 'Y-m-d',
		filter : {
			type : 'date',
		},
		exportRenderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			return Ext.util.Format.date(value, 'Y-m-d')
		},
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		dataIndex : 'SL_CD',
		text : '창고코드',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 150,
		dataIndex : 'SL_NM',
		text : '창고명',
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 200,
		dataIndex : 'FOR_BP_CD',
		text : '포워딩',
		editor : {
			xtype : 'textfield',
		},
		filter : {
			type : 'list',
		},
	},
	//        {
	//            xtype: 'gridcolumn',
	//            style: 'text-align: center; font-weight: bold; color: #3367d6',
	//            width: 200,
	//            dataIndex: 'S_BP_CD',
	//            text: '포워딩',
	//            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
	//                if(Ext.data.StoreManager.lookup('WinBpPopStore').findRecord('BP_CD',value) !== null)
	//                {
	//                    return Ext.data.StoreManager.lookup('WinBpPopStore').findRecord('BP_CD',value).get('BP_NM');
	//                }
	//                return value;
	//            },
	//            exportRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
	//                if(Ext.data.StoreManager.lookup('WinBpPopStore').findRecord('BP_CD', value) != null)
	//                {
	//                	return Ext.data.StoreManager.lookup('WinBpPopStore').findRecord('BP_CD',value).get('BP_NM');
	//                }
	//                
	//                return value;
	//            },
	//            editor: {
	//        		xtype: 'combobox',
	//        		displayField: 'BP_NM',
	//                valueField: 'BP_CD',
	//                enableRegEx: true,
	//                minChars: 2,
	//                queryMode: 'local',
	//                store: 'WinBpPopStore',
	//                listeners: {
	//                    beforequery: function(record){  
	//                        record.query = new RegExp(record.query, 'i');
	//                        record.forceAll = true;
	//                    }
	//                }
	//        	}
	//        },
	{
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		dataIndex : 'PAY_METH',
		text : 'PAY_METH(H)',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 200,
		dataIndex : 'PAY_METH_NM',
		text : '결제조건',
		filter : {
			type : 'list',
		},
	}, {
		xtype : 'datecolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 100,
		align : 'center',
		dataIndex : 'IV_DT',
		text : 'I/V DATE',
		format : 'Y-m-d',
		editor : {
			xtype : 'datefield',
			format : 'Y-m-d'
		},
		filter : {
			type : 'date',
		},
		exportRenderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			return Ext.util.Format.date(value, 'Y-m-d')
		},
	}, {
		xtype : 'datecolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		align : 'center',
		dataIndex : 'DUE_DT',
		text : 'DUE DATE',
		format : 'Y-m-d',
		filter : {
			type : 'date',
		},
		exportRenderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			return Ext.util.Format.date(value, 'Y-m-d')
		},
	}, {
		xtype : 'datecolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 100,
		align : 'center',
		dataIndex : 'SEND_DT',
		text : '송금일자',
		format : 'Y-m-d',
		editor : {
			xtype : 'datefield',
			format : 'Y-m-d'
		},
		filter : {
			type : 'date',
		},
		exportRenderer : function(value, metaData, record, rowIndex, colIndex, store, view) {
			return Ext.util.Format.date(value, 'Y-m-d')
		},
	}, {
		xtype : 'numbercolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		align : 'end',
		dataIndex : 'DISTB_AMT',
		text : '부대경비',
		format : '0,000.0000',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold; color: #3367d6',
		width : 150,
		dataIndex : 'REMARK',
		text : '비고',
		editor : {
			xtype : 'textfield'
		}
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		dataIndex : 'LC_NO',
		text : 'LC_NO',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		dataIndex : 'LC_SEQ',
		text : 'LC_SEQ',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		dataIndex : 'BL_NO',
		text : 'BL_NO',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		dataIndex : 'BL_SEQ',
		text : 'BL_SEQ',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		dataIndex : 'CC_NO',
		text : '통관번호',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		dataIndex : 'CC_SEQ',
		text : '통관순번',
		hidden : true
	}, {
		xtype : 'gridcolumn',
		style : 'text-align: center; font-weight: bold;',
		width : 100,
		dataIndex : 'MVMT_NO',
		text : '입고번호',
		hidden : true
	}, ],
	selModel : {
		selType : 'checkboxmodel',
		listeners : {
			select : function(rowmodel, record, index, eOpts) {
				var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		    	var selectedAmt = 0;
		    	
		    	for(var i in gridRecord){
		    		selectedAmt += gridRecord[i].get('DOC_AMT');
		    	}
		    	
		    	Ext.getCmp('V_SELECTED_AMT').setValue(Ext.util.Format.number(selectedAmt, '0,000.0000'));
			},
			deselect : function(rowmodel, record, index, eOpts) {
				var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		    	var selectedAmt = 0;
		    	
		    	for(var i in gridRecord){
		    		selectedAmt += gridRecord[i].get('DOC_AMT');
		    	}
		    	
		    	Ext.getCmp('V_SELECTED_AMT').setValue(Ext.util.Format.number(selectedAmt, '0,000.0000'));
			}
		}
	},
	plugins : [ {
		ptype : 'gridexporter'
	}, {
		ptype : 'gridfilters'
	}, {
		ptype : 'clipboard',
	}, {
		ptype : 'cellediting',
		clicksToEdit : 1,
		listeners : {
			//				afteredit : function(e) {
			//					var record = e.grid.getSelection()[0];
			//					var field = e.context.field;
			//					var val = e.context.value;
			//					
			//					if(field != 'LC_DOC_NO' && field != 'BL_DOC_NO' && field != 'ID_NO' && field != 'BL_REMAIN_QTY'){
			//						var store = Ext.getStore('MyStore');
			//						store.each(function(rec, idx) {
			//		            		if(rec.get('PO_NO') == record.get('PO_NO') && (rec.get(field) == null || rec.get(field) == '' || field == 'DOC_YN' || field == 'O_BL_YN')) {
			//								rec.set(field, val);
			//							}
			//		            	});
			//					}
			//				},
			beforeedit : function(e, editor) {
				var rec = editor.record.data;
				var field = editor.field;
				var userId = parent.Ext.getCmp('GUSER_ID').getValue();

				if ("/ADMIN/HDH_HSPF".indexOf(userId) > 0 || field == 'BL_REMAIN_QTY') {
				}
				// 발주자가 아래 직원이면 특정 계정만 에디팅 가능
				else if ("/강명진/박세웅/박정흠/이재욱".indexOf(rec.PO_USR_NM) > 0 && userId != 'LHR4558') {
					return false;
				}

				if (field == 'BL_DOC_NO' && rec.DOC_YN != 'AN') {
					return false;
				}

				return true;
			},
		},
	} ]

});