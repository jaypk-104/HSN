/*
 * File: app/view/MyGrid1.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_CC_STEEL.view.MyGrid1', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.mygrid1',

    requires: [
        'M_CC_STEEL.view.MyGrid1ViewModel',
        'Ext.view.Table',
        'Ext.grid.column.RowNumberer',
        'Ext.form.field.Text',
        'Ext.grid.column.Number',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.CellEditing'
    ],

    config: {
        tbar: [
{
    id: 'gridAddBtn',
    text: '',
    margin: '0 3 0 0',
    glyph: 'xf055@FontAwesome',
    iconCls: 'grid-add-btn',
    disabled: true
},
{
    id: 'gridDelBtn',
    text: '',
    margin: '0 3 0 0',
    glyph: 'xf056@FontAwesome',
    iconCls: 'grid-del-btn',
//    disabled: true
},
               {
                 id: 'ccRegBtn',
                 text: '',
                 margin: '0 3 0 0',
 	           	style: 'background-color: white; border: 0.5px solid #3367d6;',
	           	cls: 'blue-btn',
	           	text: '통관등록'
        	 },
            {
                xtype: 'container',
                flex: 1
            },
            {
                xtype: 'button',
                glyph: 'xf1c3@FontAwesome',
                id: 'xlsxDown1',
                cfg: {
                    type: 'excel07',
                    ext: 'xlsx'
                },
                iconCls: 'grid-excel-btn',
                margin: '0 3 0 0',
                
            }
        ]
    },
    viewConfig: {
        enableTextSelection: true
    },
    viewModel: {
        type: 'mygrid1'
    },
    id: 'myGrid1',
    style: 'border: 1px solid #659DDC; padding: 5px;',
    bodyBorder: false,
    header: false,
    store: 'MyStore1',

    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            text: 'V_TYPE'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'ITEM_CD',
            enableTextSelection: true,
            text: '품목코드'
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'ITEM_NM',
            enableTextSelection: true,
            text: '품목명',
            width: 170
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'SPEC',
            enableTextSelection: true,
            text: '규격',
            hidden: true
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'UNIT',
            enableTextSelection: true,
            text: '단위'
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold; color: #3367d6',
            text: 'BON수량',
            format: '0,000.00',
            dataIndex: 'BON_QTY',//GR BOX_QTY
            align: 'right',
            editor: {
            	xtype: 'numberfield',
            	align: 'right'
            },
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
	        }
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;  color: #3367d6',
            text: '총 중량',
            format: '0,000.00',
            align: 'right', 
            dataIndex: 'QTY',
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
	        },
            editor: {
            	xtype: 'numberfield',
            	format: '0,000.00',
            	align: 'right'
            },
            width: 130
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            text: '단위중량',
            format: '0,000.00',
            align: 'right',
            dataIndex: 'BON_WGT_UNIT',//GR BOX_WGT_UNIT
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            text: '단가',
            format: '0,000.00',
            dataIndex: 'PRICE',
            align: 'right'
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
            text: '금액',
            format: '0,000.00',
            dataIndex: 'DOC_AMT',
            align: 'right',
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000.00')+"<font>"; 
	        },
            editor: {
            	xtype: 'numberfield',
            	decimalPrecision: 6,
            	align: 'right'
            },
            width: 130,
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px;  text-align: center; font-weight: bold;  color: #3367d6',
            text: '선적자국금액',
            format: '0,000',
            dataIndex: 'LOC_AMT',
            align: 'right',
            width: 130,
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
	        },
            editor: {
            	xtype: 'numberfield',
            	align: 'right'
            },
        },
        {
            xtype: 'numbercolumn',
            style: 'font-size: 12px;  text-align: center; font-weight: bold;  color: #3367d6',
            text: '선물환율자국금액',
            format: '0,000',
            dataIndex: 'FORWARD_XCH_AMT',
            align: 'right',
            width: 130,
            summaryType: 'sum',
            summaryRenderer: function (value, summaryData, dataIndex) {
	            return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
	        },
        	editor: {
        		xtype: 'numberfield'
        	}
        },
        {
        	xtype: 'numbercolumn',
        	style: 'font-size: 12px;  text-align: center; font-weight: bold;  color: #3367d6',
        	text: '현물환율자국금액',
        	format: '0,000',
        	dataIndex: 'SPOT_XCH_AMT',
        	align: 'right',
        	width: 130,
        	summaryType: 'sum',
        	summaryRenderer: function (value, summaryData, dataIndex) {
        		return "<font color='green'>"+Ext.util.Format.number(value, '0,000')+"<font>"; 
        	},
        	editor: {
        		xtype: 'numberfield'
        	}
        },
        {
        	xtype: 'numbercolumn',
        	style: ' font-size: 12px;  text-align: center; font-weight: bold;  color: #3367d6',
        	width: 110,
        	text: '관세율',
        	format: '0,000.00',
        	dataIndex: 'TAX_RT',
        	align: 'right',
        	editor: {
        		xtype: 'numberfield'
        	}
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold; color: #3367d6',
        	sortable: true,
        	dataIndex: 'SL_NM',
        	enableTextSelection: true,
        	text: '창고',
        	hidden : true
        
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'SL_CD',
        	enableTextSelection: true,
        	text: '창고',
        	//hidden: true,
        	editor: { //GR20191111
        		xtype: 'combobox',
        		displayField: 'DTL_NM',
        		autoLoadOnValue: true,
        		valueField: 'DTL_CD',
        		editable: false,
        		store: Ext.create('Ext.data.Store',{
        			autoLoad: true,
        			storeId: 'store1',
        			proxy: {
        		           type: 'ajax',
        		           extraParams: {
        		            	V_MAST_CD: 'BA31-1',
        		            	V_GRID: 'Y'
        		           },	
        		           api: {
        		               read: '/HSPF01/common/sql/Combobox.jsp'
        		           },
        		           reader: {
        		               type: 'json',
        		               rootProperty: 'resultList'
        		           }
        		       }
        		}),
        	},
        	 renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                 if(Ext.data.StoreManager.lookup('store1').findRecord('DTL_CD',value) !==null)
                 {
                     return Ext.data.StoreManager.lookup('store1').findRecord('DTL_CD',value).get('DTL_NM');
                 }
                 return value;
             },
             
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'BL_NO',
            enableTextSelection: true,
            text: 'BL_NO',
            width: 170,
//            hidden: true
        },
        {
            xtype: 'gridcolumn',
            style: 'font-size: 12px; text-align: center; font-weight: bold;',
            dataIndex: 'BL_SEQ',
            enableTextSelection: true,
            text: 'BL_SEQ',
//            hidden: true
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'PO_NO',
        	enableTextSelection: true,
//        	hidden: true
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'PO_SEQ',
        	enableTextSelection: true,
//        	hidden: true
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'CHARGE_YN',
        	enableTextSelection: true,
        	text: '부대경비 유무',
        	align: 'center',
//        	hidden: true
        },
        {
        	xtype: 'gridcolumn',
        	style: 'font-size: 12px; text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'GR_YN',
        	enableTextSelection: true,
        	text: '입고유무',
        	align: 'center',
//        	hidden: true
        },
    ],
    selModel: {
        selType: 'checkboxmodel',
        checkOnly: true,
        listeners: {
        	select: function(rowmodel, record, index, eOpts) {
        		record.set('V_TYPE', 'V');
        	},
        	deselect: function(rowmodel, record, index, eOpts) {
        		record.set('V_TYPE', '');
        	}
        }
    },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        { 
            ptype: 'cellediting',
            listeners: {
            	edit: function(editor, context, eOpts) {
            		var BON_QTY = Number(context.record.data.BON_QTY); //BOX_QTY
            		var BON_WGR_QTY = Number(context.record.data.BON_WGR_QTY);  //BOX_WGR_UNIT
            		var PRICE = Number(context.record.data.PRICE);
            		var QTY = Number(context.record.data.QTY);
            		var DOC_AMT = Number(context.record.data.DOC_AMT);
            		var XCH_RATE = Ext.getCmp('V_XCH_RATE').getValue();
            		var FORWARD_XCH = Ext.getCmp('V_FORWARD_XCH').getValue();
            		var SPOT_XCH = Ext.getCmp('V_SPOT_XCH').getValue();
            		var store1 = Ext.getStore('MyStore1');
            		
//            		console.log('DOC_AMT' + DOC_AMT);
//            		console.log('XCH_RATE' + XCH_RATE);
//            		console.log('XCH_RATE*' + (DOC_AMT * XCH_RATE).toFixed(0));
//            		
//            		console.log('FORWARD_XCH' + FORWARD_XCH);
//            		console.log('FORWARD_XCH*' + (DOC_AMT * FORWARD_XCH).toFixed(0));
            		
            		if(context.column.dataIndex == 'DOC_AMT') {
            			context.record.set('LOC_AMT',  (DOC_AMT * XCH_RATE).toFixed(0));
            			context.record.set('FORWARD_XCH_AMT',  (DOC_AMT * FORWARD_XCH).toFixed(0));
            			context.record.set('SPOT_XCH_AMT',  (DOC_AMT * SPOT_XCH).toFixed(0));
            		}
            	}
            }
        }
    ],
    features : [ {
		ftype : 'summary',
		dock: 'bottom'
	} ],

});