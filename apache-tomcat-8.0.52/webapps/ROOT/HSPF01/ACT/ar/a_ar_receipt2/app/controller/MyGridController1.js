/*
 * File: app/controller/MyGridController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('A_AR_RECEIPT2.controller.MyGridController1', {
	extend : 'Ext.app.Controller',
	stores : [ 'MyStore1', 'MyStore5', 'PopStore', 'CalcStore'],
	control : {
		"#findTargetBtn" : {
			click : 'findTargetBtnClick'
		},
		"#gridDelBtn1" : {
			click : 'gridDelBtn1Click'
		},
		"#gridDelBtn5" : {
			click : 'gridDelBtn5Click'
		},
		"#applyBtn" : {
			click : 'applyBtnClick'
		},
		"#arCfmBtn" : {
			click : 'arCfmBtnClick'
		},
		"#arCancelBtn" : {
			click : 'arCancelBtnClick'
		},
		"#xlsxDown1" : {
			click : 'xlsxDown1Click'
		},
		"#xlsxDown5" : {
			click : 'xlsxDown5Click'
		}
	},
	
	findTargetBtnClick: function(button, e, eOpts) {
		var popup = Ext.create("A_AR_RECEIPT2.view.MyWindow");
		var store1 = Ext.getStore('MyStore1');
		var store5 = Ext.getStore('MyStore5');
		var totArAmt = 0;
		var totBcAmt = 0;
        
        popup.center();
        popup.show();

        Ext.getCmp('W_BP_NM').setValue(Ext.getCmp('V_BP_NM').getValue());
        Ext.getCmp('W_BP_CD').setValue(Ext.getCmp('V_BP_CD').getValue());
        
        if(!!Ext.getCmp('V_CLS_DT').getValue()){
        	Ext.getCmp('W_AR_DT_FR').setValue(Ext.getCmp('V_CLS_DT').getValue());
        	Ext.getCmp('W_AR_DT_TO').setValue(Ext.getCmp('V_CLS_DT').getValue());
        }
        
        store1.each(function(rec, idx) {
        	totArAmt += rec.get('REMAIN_AMT');
		});
        
        store5.each(function(rec, idx) {
        	totBcAmt += rec.get('BAL_AMT');
		});
        
        Ext.getCmp('W_TOT_AMT').setValue(totBcAmt);
        Ext.getCmp('W_REMAIN_AMT').setValue(totBcAmt-totArAmt);

        var popStore = Ext.getStore('PopStore');
        popStore.removeAll();   
    },
    
    gridDelBtn1Click : function(button, e, eOpts) {
		var store1 = Ext.getStore('MyStore1');
		var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		var flag = 'F';
		
		for(var i=0; i<gridRecord1.length; i++) {
			if(gridRecord1[i].get('V_TYPE') == 'I') {
				store1.remove(gridRecord1[i]);
			} else {
				gridRecord1[i].set('V_TYPE', 'D');
				flag = 'T';
			}
		}
		
		if(flag == 'T') {
			Ext.Msg.confirm('확인', '삭제하시겠습니까?', function(button) {
				if (button == 'yes') {
					
					store1.sync({
						params : {
							V_TYPE : 'T2ID',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_CLS_AR_NO : Ext.getCmp('V_CLS_AR_NO').getValue(),
						},
						callback : function(records, operation, success) {
//							store1.reload();
							var tbController = A_AR_RECEIPT2.app.getController("TbButtonController");
							tbController.selBtnClick();
						}, 
						success: function() {
						}
					});
				}
			});
		} else {
			this.initCalc();
		}
		
	},
	
	gridDelBtn5Click : function(button, e, eOpts) {
		var store5 = Ext.getStore('MyStore5');
		var gridRecord5 = Ext.getCmp('myGrid5').getSelectionModel().getSelection();
		var flag = 'F';
		
		for(var i=0; i<gridRecord5.length; i++) {
			if(gridRecord5[i].get('V_TYPE') == 'I') {
				store5.remove(gridRecord5[i]);
			} else {
				gridRecord5[i].set('V_TYPE', 'D');
				flag = 'T';
			}
		}
		
		if(flag == 'T') {
			Ext.Msg.confirm('확인', '삭제하시겠습니까?', function(button) {
				if (button == 'yes') {
					
					store5.sync({
						params : {
							V_TYPE : 'T2ID2',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_CLS_AR_NO : Ext.getCmp('V_CLS_AR_NO').getValue(),
						},
						callback : function(records, operation, success) {
//							store5.reload();
							var tbController = A_AR_RECEIPT2.app.getController("TbButtonController");
							tbController.selBtnClick();
						}, 
						success: function() {
						}
					});
				}
			});
		} else {
			this.initCalc();
		}
		
	},
	
	applyBtnClick: function(button, e, eOpts) {
		var myGrid1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		var myGrid5 = Ext.getCmp('myGrid5').getSelectionModel().getSelection();
		var store1 = Ext.getStore('MyStore1');
		var calcStore = Ext.getStore('CalcStore');
		
		if(myGrid1.length < 1 || myGrid5.length < 1){
			Ext.Msg.alert('확인', '선택된 행이 없습니다.');
			return;
		}
		
		var calcCnt = calcStore.getData().length;
		for(var i=0; i<myGrid5.length; i++){
			var record5 = myGrid5[i];
			var LOC_AMT = record5.get('LOC_AMT'); //금액
			var BAL_AMT = record5.get('BAL_AMT'); //잔액
			
			if(BAL_AMT > 0){
				for(var j=0; j<myGrid1.length; j++){
					var record1 = myGrid1[j];
					var REMAIN_AMT = record1.get('REMAIN_AMT'); //잔액
					var RECV_AMT = record1.get('RECV_AMT'); //수금금액
					var RECV_LOC_AMT = record1.get('RECV_LOC_AMT'); //수금자국금액
					
					if(REMAIN_AMT > 0){
						var diffAmt = BAL_AMT-REMAIN_AMT;
						var clsAmt = 0;
						calcCnt++;
						
						if(diffAmt < 0){
							record1.set('REMAIN_AMT', diffAmt*-1);
							record1.set('REMAIN_DOC_AMT', diffAmt*-1);
							record1.set('RECV_AMT', RECV_AMT+BAL_AMT);
							record1.set('RECV_LOC_AMT', RECV_LOC_AMT+BAL_AMT);
							record5.set('BAL_AMT', 0);
							clsAmt = BAL_AMT;
						} else {
							BAL_AMT -= REMAIN_AMT;
							record1.set('REMAIN_AMT', 0);
							record1.set('REMAIN_DOC_AMT', 0);
							record1.set('RECV_AMT', RECV_AMT+REMAIN_AMT);
							record1.set('RECV_LOC_AMT', RECV_LOC_AMT+REMAIN_AMT);
							record5.set('BAL_AMT', diffAmt);
							clsAmt = REMAIN_AMT;
						}
						
						var rec = Ext.create('A_AR_RECEIPT2.model.MyModel', {
							V_TYPE: 'I',
							SEQ: calcCnt,
							BC_NO: record5.get('REF_NO'),
							BC_TYPE: record5.get('REF_TYPE'),
							AR_NO: record1.get('AR_NO'),
							BAL_IN_AMT: record5.get('BAL_AMT'),
							CLS_IN_AMT: clsAmt,
						});
						
						calcStore.insert(calcCnt-1, rec);
						if(record5.get('BAL_AMT') === 0) break;
						
					} else {
						continue;
					}
					
				}
			}
		}
		
		for(var i=0; i<myGrid1.length; i++){
			if(myGrid1[i].get('V_TYPE') == 'I') {
				if(myGrid1[i].get('REMAIN_AMT') > 0 && myGrid1[i].get('REMAIN_AMT') === myGrid1[i].get('REMAIN_LOC_AMT')){
					myGrid1[i].set('V_TYPE', 'D');
					store1.remove(myGrid1[i]);
				}
			}
		}
    },
	
	initCalc : function() {
		var store1 = Ext.getStore('MyStore1');
		var store5 = Ext.getStore('MyStore5');
		var calcStore = Ext.getStore('CalcStore');
		
		store1.each(function(rec,idx) {
			if(rec.get('V_TYPE') == 'I'){
				rec.set('REMAIN_AMT', rec.get('LOC_AMT'));
				rec.set('REMAIN_DOC_AMT', rec.get('LOC_AMT'));
				rec.set('REMAIN_LOC_AMT', rec.get('LOC_AMT'));
				rec.set('RECV_AMT', 0);
				rec.set('RECV_LOC_AMT', 0);
			}
		});
		
		store5.each(function(rec,idx) {
			if(rec.get('V_TYPE') == 'I'){
				rec.set('BAL_AMT', rec.get('REMAIN_AMT'));
			}
		});
		
		calcStore.removeAll();
	},
	
	arCfmBtnClick : function(button, e, eOpts) {
		var flag = '';
		var msg = '';
		
		if (Ext.getCmp('V_CLS_YN').getValue() == 'Y' || !!Ext.getCmp('V_TEMP_GL_NO').getValue()) {
			flag = 'F';
			msg = '전표가 이미 생성되었습니다.';
		} else {
			flag = 'T';
		}
		
		if (flag == 'T') {
			Ext.Msg.confirm('확인', '전표를 생성하시겠습니까?', function(button) {
				if (button == 'yes') {
					Ext.Ajax.request({
						url : 'sql/A_AR_RECEIPT2.jsp',
						method : 'post',
						params: {
							V_TYPE: 'ERP',
							U_TYPE: 'I',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
							V_CLS_AR_NO : Ext.getCmp('V_CLS_AR_NO').getValue(),
						},
						success: function(response) {
					    	var jsonResult = Ext.JSON.decode(response.responseText);
//					    	var tryCnt = jsonResult.tryCnt;
//    						var finCnt = jsonResult.finCnt;
//    						var resMSG = jsonResult.resMSG;
//    						var resDATE = jsonResult.resDATE;
    						var resString = jsonResult.resString;
							
    						if(resString == 'SUCCESS') {
    							var tbController = A_AR_RECEIPT2.app.getController("TbButtonController");
    							tbController.selBtnClick();
    							
    							Ext.toast({
									title : ' ',
									timeout : 1000,
									html : '전표생성완료',
									style : 'text-align: center',
									align : 't',
									width : 130,
								});
    						}else {
    							Ext.Msg.alert('확인', '전표생성실패<br>' + resString);
    						}
    						
						}
					})
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}
	},
	
	arCancelBtnClick : function(button, e, eOpts) {
		var flag = '';
		var msg = '';
		
		if (Ext.getCmp('V_CLS_YN').getValue() == 'N' || !!!Ext.getCmp('V_TEMP_GL_NO').getValue()) {
			flag = 'F';
			msg = '전표가 존재하지 않습니다.';
		} else {
			flag = 'T';
		}
		
		if (flag == 'T') {
			Ext.Msg.confirm('확인', '전표를 취소하시겠습니까?', function(button) {
				if (button == 'yes') {
					Ext.Ajax.request({
						url : 'sql/A_AR_RECEIPT2.jsp',
						method : 'post',
						params: {
							V_TYPE: 'ERP',
							U_TYPE: 'D',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GEMP_NO').getValue(),
							V_CLS_AR_NO : Ext.getCmp('V_CLS_AR_NO').getValue(),
						},
						success: function(response) {
					    	var jsonResult = Ext.JSON.decode(response.responseText);
//					    	var tryCnt = jsonResult.tryCnt;
//    						var finCnt = jsonResult.finCnt;
//    						var resMSG = jsonResult.resMSG;
//    						var resDATE = jsonResult.resDATE;
    						var resString = jsonResult.resString;
					    
    						if(resString == 'SUCCESS') {
    							var tbController = A_AR_RECEIPT2.app.getController("TbButtonController");
    							tbController.selBtnClick();
    							
    							Ext.toast({
									title : ' ',
									timeout : 1000,
									html : '전표취소완료',
									style : 'text-align: center',
									align : 't',
									width : 130,
								});
    						}else {
    							Ext.Msg.alert('확인', '전표취소실패<br>' + resString);
    						}
    						
						}
					})
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}
	},
	
	xlsxDown1Click: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('myGrid1');
    	grid.saveDocumentAs({
            type: 'xlsx',
            title: '수금대상', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
		});
    },
    
    xlsxDown5Click: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('myGrid5');
    	grid.saveDocumentAs({
            type: 'xlsx',
            title: '수금대상참조', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
		});
    }
    
});
