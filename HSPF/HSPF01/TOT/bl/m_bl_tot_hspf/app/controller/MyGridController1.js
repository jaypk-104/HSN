/*
 * File: app/controller/MyGridController1.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_BL_TOT_HSPF.controller.MyGridController1', {
	extend : 'Ext.app.Controller',
	stores : [ 'MyStore', 'MyStore1', 'FileStore'],
	control : {
		"#blRegBtn" : {
			click : 'blRegBtnClick'
		},
		"#blDocRegBtn" : {/*파일첨부*/
			click : 'blDocRegBtnClick'
		},
		'#fileGrid' : { /*파일다운더블클릭*/
			celldblclick : 'fileGridDblClick',
		},
		"#fileDownBtn" : { /*파일전체내려받기*/
        	click : 'fileDownBtnClick'
        },
		"#fileDelBtn" : { /*파일삭제*/
        	click : 'fileDelBtnClick'
        },
		"#blCfmBtn" : {
			click : 'blCfmBtnClick'
		},
		"#blCancelBtn" : {
			click : 'blCancelBtnClick'
		},
		"#gridDelBtn" : {
			click : 'gridDelBtnClick'
		},
		"#xlsxDown1" : {
			click : 'xlsxDownClick'
		},
//		"#V_FIRST_YN" : {
//			change: 'V_FIRST_YN_change',
//		}
	},

	blRegBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';
		
		if (Ext.getCmp('V_BL_DOC_NO').getValue() == '' || Ext.getCmp('V_BL_DOC_NO').getValue() == null) {
			flag = 'F';
			msg = 'B/L번호를 입력하세요.';
		} else if (Ext.getCmp('V_LOADING_DT').getValue() == null) {
			flag = 'F';
			msg = '선적일 입력하세요.';
		} else if (Ext.getCmp('V_M_BP_CD2').getValue() == '') {
			flag = 'F';
			msg = '공급사를 선택하세요.';
		} else if (Ext.getCmp('V_IN_TERMS').getValue() == null) {
			flag = 'F';
			msg = '가격조건을 입력하세요.';
		} else if (Ext.getCmp('V_PAY_METH').getValue() == null) {
			flag = 'F';
			msg = '결제방법을 입력하세요.';
		} else if (Ext.getCmp('V_CUR').getValue() == null) {
			flag = 'F';
			msg = '통화를 선택하세요.';
		} else if (Ext.getCmp('V_PAY_METH').getValue().substring(0,2) == 'TI' && Ext.getCmp('V_IV_DT').getValue() == null) {
			flag = 'F';
			msg = 'I/V DATE를 입력하세요.';
		} else {
			flag = 'T';
			
			store1.each(function(rec,idx) {
				if (rec.get('CHARGE_YN') == 'Y') {
					flag = 'F';
					msg = '경비가 존재합니다. 변경할 수 없습니다.';
					return false;
				} else {
					flag = 'T';
				}
			});
			
		}
		
		if (flag == 'T') {
			var selModel1 = Ext.getCmp('myGrid1').getSelectionModel();
			selModel1.selectAll();
			
			Ext.Msg.confirm('확인', '저장하시겠습니까?', function(button) {
			if (button == 'yes') {

				var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
				var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
				
	    		Ext.Ajax.request({
	    			url : 'sql/M_BL_TOT_HSPF_H.jsp',
	    			method : 'post',
	    			params: {
	    				V_TYPE: 'I',
	        			V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
	    				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
	    				V_LOADING_DT : Ext.getCmp('V_LOADING_DT').getValue(),
	    				V_M_BP_CD2 : Ext.getCmp('V_M_BP_CD2').getValue(),
	    				V_BL_NO : Ext.getCmp('V_BL_NO').getValue(),
	    				V_BL_DOC_NO : Ext.getCmp('V_BL_DOC_NO').getValue(),
	    				V_TRANS_TYPE : Ext.getCmp('V_TRANS_TYPE').getValue(),
	    				V_VESSEL_NM : Ext.getCmp('V_VESSEL_NM').getValue(),
	    				V_VESSEL_NO : Ext.getCmp('V_VESSEL_NO').getValue(),
	    				V_IN_TERMS : Ext.getCmp('V_IN_TERMS').getValue(),
	    				V_PAY_METH : Ext.getCmp('V_PAY_METH').getValue(),
	    				V_CUR : Ext.getCmp('V_CUR').getValue(),
	    				V_XCH_RATE : Ext.getCmp('V_XCH_RATE').getValue(),
	    				V_IV_TYPE : Ext.getCmp('V_IV_TYPE').getValue(),
	    				V_FIRST_YN : Ext.getCmp('V_FIRST_YN').getValue(),
	    				V_BL_TYPE : Ext.getCmp('V_BL_TYPE').getValue(),
	    				V_IV_DT : Ext.getCmp('V_IV_DT').getValue(),
	    			},
	    			success: function(response) {
	    				var res = response.responseText;
	    				store1.each(function(record, idx) {
	    					if(record.phantom == true) {
	    						record.set('V_TYPE', 'I');
	    					} else {
	    						record.set('V_TYPE', 'U');
	    					}
	    				});
	    				//BL 정상등록
	    				if(res.match('VB')) {
	    					Ext.getCmp('V_BL_NO').setValue(res);
	    					
	    					store1.sync({ 
	    						params : {
	    							V_TYPE : 'SYNC',
	    							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
	    							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
	    							V_BL_NO : Ext.getCmp('V_BL_NO').getValue(),
	    							V_BL_DOC_NO : Ext.getCmp('V_BL_DOC_NO').getValue(),
	    							V_CUR : Ext.getCmp('V_CUR').getValue(),
	    						},
	    						callback : function(records, operation, success) {
						    		var tbController = M_BL_TOT_HSPF.app.getController("TbButtonController");
						    		tbController.selBtnClick();
	    						}, 
	    						success: function() {
	    							
	    						}
	    					});
	    				} else if(res.match('UPDATE')) {
	    					store1.sync({ 
	    						params : {
	    							V_TYPE : 'SYNC',
	    							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
	    							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
	    							V_BL_NO : Ext.getCmp('V_BL_NO').getValue(),
	    							V_BL_DOC_NO : Ext.getCmp('V_BL_DOC_NO').getValue(),
	    							V_CUR : Ext.getCmp('V_CUR').getValue(),
	    						},
	    						callback : function(records, operation, success) {
						    		var tbController = M_BL_TOT_HSPF.app.getController("TbButtonController");
						    		tbController.selBtnClick();
	    						}, 
	    						success: function() {
	    							
	    						}
	    					});
	    				} else if(res.match('DUPLICATE')) {
	    					Ext.Msg.alert('확인', 'BL번호가 이미 존재합니다. (' + Ext.getCmp('V_BL_DOC_NO').getValue() +')');
	    				} else {
	    					Ext.Msg.alert('확인', res);
	    				}
	    				
	    			}
	        	})
			}
		});
		} else {
			Ext.Msg.alert('확인', msg);
		}
	},
	
	blCfmBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';
		
		if (Ext.getCmp('V_BL_DOC_NO').getValue() == '' || Ext.getCmp('V_BL_DOC_NO').getValue() == null) {
			flag = 'F';
			msg = 'B/L번호를 입력하세요.';
		} else {
			flag = 'T';
		}
		
		if (flag == 'T') {
			var selModel1 = Ext.getCmp('myGrid1').getSelectionModel();
			selModel1.selectAll();
			
			Ext.Msg.confirm('확인', '전표를 생성하시겠습니까?', function(button) {
				if (button == 'yes') {
					var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
					var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
					
					Ext.Ajax.request({
						url : 'sql/M_BL_TOT_HSPF_D.jsp',
						method : 'post',
						params: {
							V_TYPE: 'I',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GEMP_NO').getValue(),
							V_BL_NO : Ext.getCmp('V_BL_NO').getValue(),
							V_BL_DOC_NO : Ext.getCmp('V_BL_DOC_NO').getValue(),
						},
						success: function(response) {
							try{
	
						    	var jsonResult = Ext.JSON.decode(response.responseText);
						    	var tryCnt = jsonResult.tryCnt;
	    						var finCnt = jsonResult.finCnt;
	    						var resMSG = jsonResult.resMSG;
	    						var resDATE = jsonResult.resDATE;
	    						var resString = jsonResult.resString;
						    
	    						if(resMSG == 'SUCCESS') {
	    							var tbController = M_BL_TOT_HSPF.app.getController("TbButtonController");
	    							tbController.selBtnClick();
	    							
	    							Ext.toast({
										title : ' ',
										timeout : 1000,
										html : '전표생성완료',
										style : 'text-align: center',
										align : 't',
										width : 130,
									});
	    						}else if(resString == 'M_BL'){
	    							Ext.Msg.alert('확인', '선적서류미등록<br>전표생성실패<br>');
	    						}else {
	    							Ext.Msg.alert('확인', '전표생성실패<br>' + resString);
	    						}
							}
							catch (e){
								Ext.Msg.alert('확인', '전표생성실패<br>' + response.responseText);
							}
						}
					})
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}
	},
	
	blCancelBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';
		
		if (Ext.getCmp('V_BL_DOC_NO').getValue() == '' || Ext.getCmp('V_BL_DOC_NO').getValue() == null) {
			flag = 'F';
			msg = 'B/L번호를 입력하세요.';
		} else {
			flag = 'T';
			
			store1.each(function(rec,idx) {
				if (rec.get('CHARGE_YN') == 'Y') {
					flag = 'F';
					msg = '경비가 존재합니다. 취소할 수 없습니다.';
					return false;
				} else {
					flag = 'T';
				}
			});
		}
		
		if (flag == 'T') {
			var selModel1 = Ext.getCmp('myGrid1').getSelectionModel();
			selModel1.selectAll();
			
			Ext.Msg.confirm('확인', '전표를 취소하시겠습니까?', function(button) {
				if (button == 'yes') {
					
					var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
					var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
					
					Ext.Ajax.request({
						url : 'sql/M_BL_TOT_HSPF_D.jsp',
						method : 'post',
						params: {
							V_TYPE: 'D',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GEMP_NO').getValue(),
							V_BL_NO : Ext.getCmp('V_BL_NO').getValue(),
							V_BL_DOC_NO : Ext.getCmp('V_BL_DOC_NO').getValue(),
						},
						success: function(response) {
							
							var jsonResult = Ext.JSON.decode(response.responseText);
					    	var tryCnt = jsonResult.tryCnt;
    						var finCnt = jsonResult.finCnt;
    						var resMSG = jsonResult.resMSG;
    						var resDATE = jsonResult.resDATE;
    						var resString = jsonResult.resString;
    						
    						if(resMSG == 'SUCCESS') {
    							var tbController = M_BL_TOT_HSPF.app.getController("TbButtonController");
    							tbController.selBtnClick();
    							
    							Ext.toast({
									title : ' ',
									timeout : 1000,
									html : '전표취소완료',
									style : 'text-align: center',
									align : 't',
									width : 130,
								});
    						} else {
    							Ext.Msg.alert('확인', '전표취소실패<br>' + resString);
    						}
						}
					})
				}
			});
		} else {
			Ext.Msg.alert('확인', msg);
		}
		
	},

	gridDelBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');
		var flag = '';
		var msg = '';
		
		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();

		for(var i=0; i<gridRecord1.length; i++) {
			if(gridRecord1[i].get('CHARGE_YN') == 'Y') {
				flag = 'F';
				msg = '경비가 존재합니다. 변경할 수 없습니다.';
				break;
			}
			else if(gridRecord1[i].get('V_TYPE') == 'V') {
				gridRecord1[i].set('V_TYPE', 'D');
				flag = 'T';
			}
		}
		
		if(flag == 'T') {
			Ext.Msg.confirm('확인', '삭제하시겠습니까?', function(button) {
				if (button == 'yes') {
					
					store1.sync({
						params : {
							V_TYPE : 'SYNC',
							V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
							V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
						},
						callback : function(records, operation, success) {
							store.reload();
							store1.reload();
							
							if(store1.getCount() == gridRecord1.length) {
								
								Ext.getCmp('V_BL_NO').setValue('');
								var nows = new Date();
								
								Ext.getCmp('V_LOADING_DT').setValue(nows);
								Ext.getCmp('V_M_BP_NM2').setValue('');
								Ext.getCmp('V_M_BP_CD2').setValue('');
								Ext.getCmp('V_BL_DOC_NO').setValue('');
								Ext.getCmp('V_TRANS_TYPE').setValue('');
								Ext.getCmp('V_VESSEL_NO').setValue('');
								Ext.getCmp('V_VESSEL_NM').setValue('');
								Ext.getCmp('V_IN_TERMS').setValue(null);
								Ext.getCmp('V_PAY_METH').setValue(null);
								Ext.getCmp('V_CUR').setValue('USD');
								Ext.getCmp('V_XCH_RATE').setValue(1);
								Ext.getCmp('V_IV_TYPE').setValue('');
								Ext.getCmp('V_FIRST_YN').setValue(false);
								Ext.getCmp('V_IV_DT').setValue(null);
							}
						}, 
						success: function() {
						}
					});
				}
			});
			
		} else {
			Ext.Msg.alert('확인',  msg);
		}
	},
	/* [파일첨부] */
	blDocRegBtnClick : function(button, e, eOpts) {
		var store = Ext.getStore('MyStore');
		var store1 = Ext.getStore('MyStore1');

		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
		var flag = '';
		var msg = '';

		if (Ext.getCmp('V_BL_NO').getValue() == '' || Ext.getCmp('V_BL_NO').getValue() == null) {
			flag = 'F';
			msg = 'B/L번호를 입력하세요.';
		} else {
			flag = 'T';
		}
		if (flag == 'T') {
			
			console.log("test");
			var popup = Ext.create("M_BL_TOT_HSPF.view.MyWindow");
			popup.show();
			
			var width = Ext.getBody().getViewSize().width - 200;
		    var height = Ext.getBody().getViewSize().height - 200;
		    popup.setSize(width, height);
		    popup.center();
			
			var fileStore = Ext.getStore('FileStore');
			fileStore.removeAll();
		   	fileStore.load({
					params : {
						V_TYPE : 'S',
						V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
						V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
						V_BL_NO: Ext.getCmp('V_BL_NO').getValue(),
					},
					callback : function(records, operations, success) {
					}
				});
		}else {
			Ext.Msg.alert('확인', msg);
		}
		
	},
	 /* [파일다운] */
    fileGridDblClick:  function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
		var gridObj = Ext.getCmp('fileGrid');
		var gridRecord = gridObj.getSelectionModel().getSelection();
		var V_FILE_NM = gridRecord[0].data['FILE_NM'];
		var V_FILE_IN_SYSTEM_NM = gridRecord[0].data['FILE_IN_SYSTEM_NM'];
		V_FILE_NM = encodeURI(V_FILE_NM);
		V_FILE_IN_SYSTEM_NM = encodeURI(V_FILE_IN_SYSTEM_NM);

		V_FILE_NM = V_FILE_NM.replaceAll('#','%23');
		V_FILE_NM = V_FILE_NM.replaceAll('+','%2B');
		V_FILE_NM = V_FILE_NM.replaceAll('&','%26'); // &기호 인코딩 안되서.. 일단 추가해줌
		
		var myWin=new Ext.Window(
				{
					title : '파일다운로드',
					html : '<iframe name="xxx" border =0 src="sql/M_BL_TOT_HSPF_FILE.jsp?V_TYPE=D&V_FILE_NM='+V_FILE_NM+'&V_FILE_IN_SYSTEM_NM='+V_FILE_IN_SYSTEM_NM+'" width="1%" height="1%"></iframe>',
					width :500,
					height:500
				});
		myWin.show();
		myWin.hide();
	},
	
	fileDownBtnClick: function() {
		var gridObj = Ext.getCmp('fileGrid');
		var gridRecord = gridObj.getSelectionModel().getSelection();
		
		for(var i=0; i<gridRecord.length; i++){
			var V_FILE_NM = gridRecord[i].data['FILE_NM'];
			var V_FILE_IN_SYSTEM_NM = gridRecord[i].data['FILE_IN_SYSTEM_NM'];
			V_FILE_NM = encodeURI(V_FILE_NM);
			V_FILE_IN_SYSTEM_NM = encodeURI(V_FILE_IN_SYSTEM_NM);

			V_FILE_NM = V_FILE_NM.replaceAll('#','%23');
			V_FILE_NM = V_FILE_NM.replaceAll('+','%2B');
			V_FILE_NM = V_FILE_NM.replaceAll('&','%26'); // &기호 인코딩 안되서.. 일단 추가해줌
			
			var myWin=new Ext.Window(
					{
						title : '파일다운로드',
						html : '<iframe name="xxx" border =0 src="sql/M_BL_TOT_HSPF_FILE.jsp?V_TYPE=D&V_FILE_NM='+V_FILE_NM+'&V_FILE_IN_SYSTEM_NM='+V_FILE_IN_SYSTEM_NM+'" width="1%" height="1%"></iframe>',
						width :500,
						height:500
					});
			myWin.show();
			myWin.hide();
		}
	},
	
	/* [파일삭제] */
	fileDelBtnClick: function() {
    	var fileStore = Ext.getStore('FileStore');
    	var gridRecord = Ext.getCmp('fileGrid').getSelectionModel().getSelection();
    	    	
    	if(gridRecord.length > 0) {
    		Ext.MessageBox.confirm('확인', '삭제하시겠습니까?', function(btn) {
    			console.log("btn" + btn);
    			if(btn == 'yes') {
    				fileStore.sync({
    					params: {
    						V_TYPE: 'SYNC',
    						V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    						V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    					},
    					callback: function(records,operations,success){
    						
    						fileStore.load({
    							params : {
    								V_TYPE : 'S',
    								V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    								V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    								V_BL_NO: Ext.getCmp('V_BL_NO').getValue(),
    							},
    							callback : function(records, operations, success) {
    								var filePreview = '';
    			   					for(var i=0; i<records.length; i++) {
    			   						filePreview += records[i].get('FILE_NM') + '<br>';
    			   					}
    			   					
    			   					var qText = '';
    			   					if(filePreview.length == 0) {
    			   						qText = '없음';
    			   					} else {
    			   						qText = filePreview;
    			   					}
    			   					
				                	Ext.tip.QuickTipManager.register({
				                          target: 'blDocRegBtn', // Target button's ID
				                          title : '<span style=\'color:#9CFFFA\'>첨부파일현황</span>',  // QuickTip Header
				                          text  : qText,
				                          dismissDelay: 10000 // Hide after 10 seconds hover
				                    });
				                	
				                	Ext.getCmp('blDocRegBtn').setText('[ ' + records.length + ' ]');
    							}
    						});
    						
							
						}
    				});
    			}
    		})
    	}
    	
    },
//	V_FIRST_YN_change: function(field, newValue, oldValue, eOpts) {
//		var store1 = Ext.getStore('MyStore1');
//		if(Ext.getCmp('V_BL_NO').getValue() == "" || store1.data.length == 0){
//			return;
//		}
//			
//		Ext.Ajax.request({
//			url : 'sql/M_BL_TOT_HSPF_H.jsp',
//			method : 'post',
//			params: {
//				V_TYPE: 'BL',
//				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
//				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
//				V_BL_NO : Ext.getCmp('V_BL_NO').getValue(),
//				V_FIRST_YN : newValue,
//			},
//			success: function(response) {
//
//				var tbController = M_BL_TOT_HSPF.app.getController("TbButtonController");
//				tbController.selBtnClick();
//			}
//		})
//	},
	
	xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
        var grid = Ext.getCmp('myGrid1');
        grid.saveDocumentAs({
            type: 'xlsx',
            title: 'B/L등록(하단)', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
        });
    },
});
