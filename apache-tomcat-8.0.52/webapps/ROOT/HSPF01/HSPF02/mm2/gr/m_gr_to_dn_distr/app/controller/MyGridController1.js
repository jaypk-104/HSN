/*
 * File: app/controller/MyGridController1.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_GR_TO_DN_DISTR.controller.MyGridController1', {
    extend: 'Ext.app.Controller',
    stores: ['MyStore', 'MyStore1'],
    control: {
        "#gridDelBtn1": {
            click: 'gridDelBtn1Click'
        },
        "#xlsxDown1": {
            click: 'xlsxDownClick'
        },
        "#custDnCfmBtn": {
        	click: 'custDnCfmBtnClick'
        },
        "#myGrid": {
        	celldblclick: 'myGridDblClick1'
        },
    	"#myGrid1": {
    		celldblclick: 'myGridDblClick2'
    	},
		"#chargeUpdateBtn" : {
			click : 'chargeUpdateBtnClick'
		},
		"#issueDtSaveBtn" : {
			click : 'issueDtSaveBtnClick'
		},
		"#w_selBtn" : {
			click : 'w_selBtnClick'
		},
		"#w_saveBtn" : {
			click : 'w_saveBtnClick'
		},
        "#xlsxDownW": {
        	click: 'xlsxDownWClick'
        },
    },

    gridDelBtn1Click: function(button, e, eOpts) {
        var store = Ext.getStore('MyStore');
        var store1 = Ext.getStore('MyStore1');
    	var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
    	var flag = '';
    	var msg = '';
    	
    	for(var i=0; i<gridRecord1.length; i++) {
    		if(gridRecord1[i].get('DN_REAL_QTY') > 0) {
    			flag = 'F';
    			msg = '계근확정데이터가 존재합니다. <br>출하증작성에서 출고확정취소 후 삭제하세요.';
    			break;
    		} else {
    			flag = 'T';
    		}
    	}

    	if(gridRecord1.length > 0) {
    		if(flag == 'T') {
    			Ext.Msg.confirm('확인','삭제하시겠습니까?', function(button){
        			if(button == 'yes') {
        				for(var i=0; i<gridRecord1.length; i++) {
        		    		if(gridRecord1[i].data['V_TYPE']=='V') {
        		    			gridRecord1[i].set('V_TYPE', 'D');
        		    		}
        		    	}
        		    	store1.sync({
        					params: {
        						V_TYPE: 'SYNC',
        						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
        						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
        					},
        		    		callback: function(records, operation, success) {
        		    			store.reload();
        		    			store1.reload();
        					}
        		    	});
        			}
        		});
    		} else {
    			Ext.Msg.alert('확인', msg);
    		}
    		
    	}
    },

    xlsxDownClick: function(button, e, eOpts) {
        var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('myGrid1');
    	grid.saveDocumentAs({
            type: 'xlsx',
            title: '입고기준출고등록(상세)', //엑셀내타이틀
            fileName: currentDate+'.xlsx' //엑셀파일이름
		});
    },
    xlsxDownWClick: function(button, e, eOpts) {
    	var currentDate = Ext.util.Format.date(new Date(), 'Y-m-d His');
    	var grid = Ext.getCmp('chargeGrid');
    	grid.saveDocumentAs({
    		type: 'xlsx',
    		title: '경비수정', //엑셀내타이틀
    		fileName: currentDate+'.xlsx' //엑셀파일이름
    	});
    },
    myGridDblClick1: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {

    	if((cellIndex != 31)) {
    		
    		var REQ_QTY = 0;	
    		REQ_QTY = record.get('REQ_QTY').toFixed(2);
    		
    		if(REQ_QTY > 0) {
    			var popup = Ext.create("M_GR_TO_DN_DISTR.view.MyWindow1");

        		var width = 1100;
        		var height = Ext.getBody().getViewSize().height;
        		popup.setSize(width, height);
        		popup.center();
        		
        		popup.show();
        		
    			Ext.Ajax.request({
    				url : 'sql/M_GR_TO_DN_DISTR.jsp',
    				method : 'post',
    				params : {
    					V_TYPE : 'CALC_POP',
    					V_BS_DT: Ext.getCmp('V_DN_DT').getValue(),
    					V_BS_BOX_QTY: record.get('REQ_BOX_QTY'),
    					V_BS_QTY: REQ_QTY,
    					V_BAS_STEP : 'DP1',
    					V_BAS_NO : record.get('MVMT_NO'),
    					V_MVMT_NO: record.get('MVMT_NO'),
    					V_ITEM_CD: record.get('ITEM_CD'),
    					V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
    					V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
    				},
    				success : function(response) {
    				 	var jsonResult = Ext.JSON.decode(response.responseText);
    				 	Ext.getCmp('W_IV_BOX_QTY').setValue(Ext.util.Format.number(jsonResult.resultList[0].IV_BOX_QTY, '0,000'));
    				 	Ext.getCmp('W_IV_QTY').setValue(Ext.util.Format.number(jsonResult.resultList[0].IV_QTY, '0,000'));
    				 	Ext.getCmp('W_IV_E_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].IV_E_AMT, '0,000'));
    				 	Ext.getCmp('W_DISTR_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].DISTR_AMT, '0,000'));
    				 	Ext.getCmp('W_LC_OPEN_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].LC_OPEN_AMT, '0,000'));
    				 	Ext.getCmp('W_LC_AMEND_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].LC_AMEND_AMT, '0,000'));
    					Ext.getCmp('W_ETC_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].ETC_AMT, '0,000'));
    					Ext.getCmp('W_INSUR_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].INSUR_AMT, '0,000'));
    					Ext.getCmp('W_DISTR_CC_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].DISTR_CC_AMT, '0,000'));
    					Ext.getCmp('W_TAX_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].TAX_AMT, '0,000'));
    					Ext.getCmp('W_REC_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].REC_AMT, '0,000'));
    					Ext.getCmp('W_IV_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].IV_AMT, '0,000'));
    					Ext.getCmp('W_IV_PRC').setValue(Ext.util.Format.number(jsonResult.resultList[0].IV_PRC, '0,000.00'));
    					

    					Ext.getCmp('W_DN_BOX_QTY').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_BOX_QTY, '0,000'));
    					Ext.getCmp('W_DN_QTY').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_QTY, '0,000.00'));
    					
    					Ext.getCmp('W_DN_COG_AMT2').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_COG_AMT, '0,000'));
    					Ext.getCmp('W_DN_ETC_COG_SUM_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_ETC_COG_SUM_AMT, '0,000'));
    					
    					Ext.getCmp('W_DN_COG_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_COG_AMT, '0,000'));
    					Ext.getCmp('W_DN_CALC_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_CALC_AMT, '0,000'));
    					Ext.getCmp('W_ST_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].ST_AMT, '0,000'));
    					Ext.getCmp('W_IO_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].IO_AMT, '0,000'));
    					Ext.getCmp('W_JOB_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].JOB_AMT, '0,000'));
    					Ext.getCmp('W_WT_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].WT_AMT, '0,000'));
    					Ext.getCmp('W_CK_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].CK_AMT, '0,000'));
    					Ext.getCmp('W_AP_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].AP_AMT, '0,000'));
    					Ext.getCmp('W_MV_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].MV_AMT, '0,000'));
    					Ext.getCmp('W_BK_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].BK_AMT, '0,000'));
    					Ext.getCmp('W_MG').setValue(Ext.util.Format.number(jsonResult.resultList[0].MG_RT, '0,000.00') + ' / ' + Ext.util.Format.number(jsonResult.resultList[0].MG_AMT, '0,000') );
    					Ext.getCmp('W_PER_OV_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].PER_AMT, '0,000') + ' / ' + Ext.util.Format.number(jsonResult.resultList[0].OV_AMT, '0,000') );
    					Ext.getCmp('W_DN_CALC_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_CALC_AMT, '0,000'));
    					Ext.getCmp('W_DN_PRC').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_PRC, '0,000.00'));
    					Ext.getCmp('W_DN_COG_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_COG_AMT, '0,000'));

    					
    					Ext.getCmp('W_DN_BOX_QTY2').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_BOX_QTY, '0,000'));
    					Ext.getCmp('W_REAL_QTY').setValue(Ext.util.Format.number(jsonResult.resultList[0].REAL_QTY, '0,000.00'));
    					Ext.getCmp('W_LAST_DN_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].LAST_DN_AMT, '0,000'));
    					Ext.getCmp('W_LAST_DN_PRC').setValue(Ext.util.Format.number(jsonResult.resultList[0].LAST_DN_PRC, '0,000.00'));
    					
    					
    					Ext.getCmp('W_LAST_DN_AMT2').setValue(Ext.util.Format.number(jsonResult.resultList[0].LAST_DN_AMT, '0,000'));
    					Ext.getCmp('W_LAST_COG_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].LAST_COG_AMT, '0,000'));
    					Ext.getCmp('W_PROF_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].PROF_AMT, '0,000'));
    					Ext.getCmp('W_PROF_RT').setValue(Ext.util.Format.number(jsonResult.resultList[0].PROF_RT, '0,000.00'));
    				}
    			});
    		} else {
    			Ext.Msg.alert('확인', '출고요청 BOX수량을 입력하세요.');
    		}
    		
    	}
    },
    myGridDblClick2: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
    	
    	if((cellIndex >= 10 && cellIndex <= 15) || (cellIndex >= 20 && cellIndex <= 23)) {
    		var popup = Ext.create("M_GR_TO_DN_DISTR.view.MyWindow1");

    		var width = 1100;
    		var height = Ext.getBody().getViewSize().height;
    		popup.setSize(width, height);
    		popup.center();
    		
    		popup.show();
    		
    		var DN_QTY = 0;	
        	DN_QTY = record.get('DN_QTY').toFixed(2);
    		
    		Ext.Ajax.request({
				url : 'sql/M_GR_TO_DN_DISTR.jsp',
				method : 'post',
				params : {
					V_TYPE : 'CALC_POP',
					V_BS_DT: record.get('DN_DT'),
					V_BS_BOX_QTY: record.get('DN_BOX_QTY'),
					V_BS_QTY: DN_QTY,
					V_BAS_STEP : 'DP2',
					V_BAS_NO : record.get('DN_NO') + record.get('DN_SEQ'),
					V_MVMT_NO: record.get('MVMT_NO'),
					V_ITEM_CD: record.get('ITEM_CD'),
					V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
					V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				},
				success : function(response) {
				 	var jsonResult = Ext.JSON.decode(response.responseText);
				 	Ext.getCmp('W_IV_BOX_QTY').setValue(Ext.util.Format.number(jsonResult.resultList[0].IV_BOX_QTY, '0,000'));
				 	Ext.getCmp('W_IV_QTY').setValue(Ext.util.Format.number(jsonResult.resultList[0].IV_QTY, '0,000'));
				 	Ext.getCmp('W_IV_E_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].IV_E_AMT, '0,000'));
				 	Ext.getCmp('W_DISTR_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].DISTR_AMT, '0,000'));
				 	Ext.getCmp('W_LC_OPEN_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].LC_OPEN_AMT, '0,000'));
				 	Ext.getCmp('W_LC_AMEND_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].LC_AMEND_AMT, '0,000'));
					Ext.getCmp('W_ETC_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].ETC_AMT, '0,000'));
					Ext.getCmp('W_INSUR_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].INSUR_AMT, '0,000'));
					Ext.getCmp('W_DISTR_CC_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].DISTR_CC_AMT, '0,000'));
					Ext.getCmp('W_TAX_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].TAX_AMT, '0,000'));
					Ext.getCmp('W_REC_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].REC_AMT, '0,000'));
					Ext.getCmp('W_IV_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].IV_AMT, '0,000'));
					Ext.getCmp('W_IV_PRC').setValue(Ext.util.Format.number(jsonResult.resultList[0].IV_PRC, '0,000.00'));

					Ext.getCmp('W_DN_BOX_QTY').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_BOX_QTY, '0,000'));
					Ext.getCmp('W_DN_QTY').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_QTY, '0,000.00'));
					
					Ext.getCmp('W_DN_COG_AMT2').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_COG_AMT, '0,000'));
					Ext.getCmp('W_DN_ETC_COG_SUM_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_ETC_COG_SUM_AMT, '0,000'));
					
					Ext.getCmp('W_DN_COG_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_COG_AMT, '0,000'));
					Ext.getCmp('W_DN_CALC_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_CALC_AMT, '0,000'));
					Ext.getCmp('W_ST_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].ST_AMT, '0,000'));
					Ext.getCmp('W_IO_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].IO_AMT, '0,000'));
					Ext.getCmp('W_JOB_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].JOB_AMT, '0,000'));
					Ext.getCmp('W_WT_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].WT_AMT, '0,000'));
					Ext.getCmp('W_CK_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].CK_AMT, '0,000'));
					Ext.getCmp('W_AP_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].AP_AMT, '0,000'));
					Ext.getCmp('W_MV_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].MV_AMT, '0,000'));
					Ext.getCmp('W_BK_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].BK_AMT, '0,000'));
					Ext.getCmp('W_MG').setValue(Ext.util.Format.number(jsonResult.resultList[0].MG_RT, '0,000.00') + ' / ' + Ext.util.Format.number(jsonResult.resultList[0].MG_AMT, '0,000') );
					Ext.getCmp('W_PER_OV_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].PER_AMT, '0,000') + ' / ' + Ext.util.Format.number(jsonResult.resultList[0].OV_AMT, '0,000') );
					Ext.getCmp('W_DN_CALC_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_CALC_AMT, '0,000'));
					Ext.getCmp('W_DN_PRC').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_PRC, '0,000.00'));
					Ext.getCmp('W_DN_COG_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_COG_AMT, '0,000'));

					
					Ext.getCmp('W_DN_BOX_QTY2').setValue(Ext.util.Format.number(jsonResult.resultList[0].DN_BOX_QTY, '0,000'));
					Ext.getCmp('W_REAL_QTY').setValue(Ext.util.Format.number(jsonResult.resultList[0].REAL_QTY, '0,000.00'));
					Ext.getCmp('W_LAST_DN_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].LAST_DN_AMT, '0,000'));
					Ext.getCmp('W_LAST_DN_PRC').setValue(Ext.util.Format.number(jsonResult.resultList[0].LAST_DN_PRC, '0,000.00'));
					
					
					Ext.getCmp('W_LAST_DN_AMT2').setValue(Ext.util.Format.number(jsonResult.resultList[0].LAST_DN_AMT, '0,000'));
					Ext.getCmp('W_LAST_COG_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].LAST_COG_AMT, '0,000'));
					Ext.getCmp('W_PROF_AMT').setValue(Ext.util.Format.number(jsonResult.resultList[0].PROF_AMT, '0,000'));
					Ext.getCmp('W_PROF_RT').setValue(Ext.util.Format.number(jsonResult.resultList[0].PROF_RT, '0,000.00'));
					
					Ext.getCmp('W_OWN_DT').setValue(record.get('OWN_DT'));
				}
			});
    		
    	}
    },
    

    custDnCfmBtnClick: function(button, e, eOpts) {
        var store = Ext.getStore('MyStore');
        var store1 = Ext.getStore('MyStore1');
    	var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
    	var flag = '';

    	for(var i=0; i<gridRecord1.length; i++) {
    		if(gridRecord1[i].get('V_TYPE') == 'V' && gridRecord1[i].get('CUSTOM_REQ_FLAG') == 'Y') {
    			flag = 'T';
    		} else if (gridRecord1[i].get('V_TYPE') == 'V' && gridRecord1[i].get('CUSTOM_REQ_FLAG') == 'YY') {
    			flag = 'F';
    			msg = '이미 확정된 출고입니다.';
    		} else {
    			flag = 'F';
    			msg = '고객사에서 요청한 출고만 확정할 수 있습니다.';
    		}
    	}
    	
    	if(gridRecord1.length > 0 ) {
    		if(flag == 'T') {
    			Ext.Msg.confirm('확인', '고객사에서 요청한 출고를 확정하시겠습니까?', function(button){
        			if(button == 'yes') {
        				for(var i=0; i<gridRecord1.length; i++) {
        		    		if(gridRecord1[i].data['V_TYPE']=='V') {
        		    			gridRecord1[i].set('V_TYPE', 'DN_CFM');
        		    		}
        		    	}
        		    	store1.sync({
        					params: {
        						V_TYPE: 'SYNC',
        						V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
        						V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
        					},
        		    		callback: function(records, operation, success) {
//        		    			store.reload();
        		    			store1.reload();
        					}
        		    	});
        			}
        		});
    		} else {
    			Ext.Msg.alert('확인', msg);
    		}
    	}
    }
    ,
	chargeUpdateBtnClick : function(button, e, eOpts) {
		var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		if(gridRecord1.length == 1) {
			var chargeStore = Ext.getStore('ChargeStore');
			 
			var popup = Ext.create("M_GR_TO_DN_DISTR.view.MyWindow2");
			popup.setSize(Ext.getBody().getViewSize());
	        popup.show();
	        
	//        console.log(gridRecord1[0].get('TEMP_GL_NO'));
	        
	        if(gridRecord1[0].get('TEMP_GL_NO') == undefined) {
	    		Ext.getCmp('w_saveBtn').setDisabled(false);
	        } else {
	        	Ext.getCmp('w_saveBtn').setDisabled(true);
	        }
		 
	        Ext.Ajax.request({
				url:'sql/M_GR_TO_DN_DISTR.jsp',
				method: 'post',
				params: {
					V_TYPE: 'CHARGE',
	    			U_TYPE: 'H',
	    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
	    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
	    			V_MVMT_NO: gridRecord1[0].get('MVMT_NO')
				},
				callback : function(records,operations,success){
				},
			    success : function(response) {
			    	
			    	var jsonResult = Ext.JSON.decode(response.responseText);
					
		 			Ext.getCmp('W_LC_DOC_NO').setValue(jsonResult.resultList[0].LC_DOC_NO);
		 			Ext.getCmp('W_BL_DOC_NO').setValue(jsonResult.resultList[0].BL_DOC_NO);
		 			Ext.getCmp('W_BOX_QTY').setValue(jsonResult.resultList[0].BOX_QTY);
		 			Ext.getCmp('W_ITEM_CD').setValue(jsonResult.resultList[0].ITEM_CD);
		 			Ext.getCmp('W_ITEM_NM').setValue(jsonResult.resultList[0].ITEM_NM);
		 			Ext.getCmp('W_BL_QTY').setValue(Ext.util.Format.number(jsonResult.resultList[0].QTY, '0,000.00'));
			    	
			    	chargeStore.load({
			    		params: {
			    			V_TYPE: 'CHARGE',
			    			U_TYPE: 'S',
			    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
			    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
			    			V_MVMT_NO: gridRecord1[0].get('MVMT_NO')
			    		},
			    		callback: function(records,operations,success){
			    			
			    		}
			    	});
			    	
			    	
			    },
				scope: this
			});
			
		 } else {
			 Ext.Msg.alert('확인', '1개의 입고를 선택하세요.');
		 }
		 
	},
	issueDtSaveBtnClick : function(button, e, eOpts) {
		var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		
		for(var i = 0 ; i < gridRecord1.length ; i ++){
			gridRecord1[i].set('V_TYPE', 'ISSUE_DT');
		}
		
		if(gridRecord1.length >= 1) {
			Ext.MessageBox.confirm('확인', '저장 하시겠습니까?', function(btn) {
				if (btn == 'yes') {
			        var store = Ext.getStore('MyStore1');
			        store.sync({
			        	params:{
			        		V_TYPE: 'DT_SYNC',
			    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
			    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
			        	},
			        	callback : function(records,operations,success){
			        		store.reload();
						},
			        });
				}
			});
			
			
		 } 
		else {
			 Ext.Msg.alert('확인', '데이터를 선택하세요.');
		 }
		 
	},
	w_selBtnClick : function(button, e, eOpts) {

		var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		var chargeStore = Ext.getStore('ChargeStore');
		
		Ext.Ajax.request({
			url:'sql/M_GR_TO_DN_DISTR.jsp',
			method: 'post',
			params: {
				V_TYPE: 'CHARGE',
    			U_TYPE: 'H',
    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
    			V_MVMT_NO: gridRecord1[0].get('MVMT_NO')
			},
			callback : function(records,operations,success){
			},
		    success : function(response) {
		    	
		    	var jsonResult = Ext.JSON.decode(response.responseText);
//		    	console.log(jsonResult);
				
	 			Ext.getCmp('W_LC_DOC_NO').setValue(jsonResult.resultList[0].LC_DOC_NO);
	 			Ext.getCmp('W_BL_DOC_NO').setValue(jsonResult.resultList[0].BL_DOC_NO);
	 			Ext.getCmp('W_BOX_QTY').setValue(jsonResult.resultList[0].BOX_QTY);
	 			Ext.getCmp('W_ITEM_CD').setValue(jsonResult.resultList[0].ITEM_CD);
	 			Ext.getCmp('W_ITEM_NM').setValue(jsonResult.resultList[0].ITEM_NM);
	 			Ext.getCmp('W_BL_QTY').setValue(Ext.util.Format.number(jsonResult.resultList[0].QTY, '0,000.00'));
		    	
		    	chargeStore.load({
		    		params: {
		    			V_TYPE: 'CHARGE',
		    			U_TYPE: 'S',
		    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
		    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
		    			V_MVMT_NO: gridRecord1[0].get('MVMT_NO')
		    		},
		    		callback: function(records,operations,success){
		    			
		    		}
		    	});
		    	
		    	
		    },
			scope: this
		});
	},
	w_saveBtnClick : function(button, e, eOpts) {
		
		var gridRecord1 = Ext.getCmp('myGrid1').getSelectionModel().getSelection();
		var chargeRecord = Ext.getCmp('chargeGrid').getSelectionModel().getSelection();
		var chargeStore = Ext.getStore('ChargeStore');

		for(var i=0; i<chargeRecord.length; i++) {
			if(chargeRecord[i].get('V_TYPE') == 'V') {
				chargeRecord[i].set('V_TYPE', 'U');
			}
		}
		
		chargeStore.sync({
			params: {
				V_TYPE: 'CHARGE',
    			U_TYPE: 'SYNC',
				V_COMP_ID : parent.Ext.getCmp('GCOMP_ID').getValue(),
				V_USR_ID : parent.Ext.getCmp('GUSER_ID').getValue(),
				V_MVMT_NO: gridRecord1[0].get('MVMT_NO')
			},
			callback: function(records, operation, success) {
				chargeStore.reload();
			}
		});
		
	}
    


});
