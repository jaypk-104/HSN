/*
 * File: app/view/MyGrid.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('M_LOCAL_LC_MGM.view.MyGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.myGrid',

    requires: [
        'M_LOCAL_LC_MGM.view.MyGridViewModel',
        'Ext.view.Table',
        'Ext.grid.column.RowNumberer',
        'Ext.grid.column.Number',
        'Ext.form.field.Number',
        'Ext.selection.CheckboxModel',
        'Ext.grid.plugin.Exporter',
        'Ext.grid.plugin.CellEditing'
    ],

    config: {
//        tbar: [
//            {
//                id: 'gridAddBtn',
//                text: '',
//                margin: '0 3 0 0',
//                glyph: 'xf055@FontAwesome',
//                iconCls: 'grid-add-btn',
//                hidden: true
//            },
//            {
//                id: 'gridDelBtn',
//                text: '',
//                margin: '0 3 0 0',
//                glyph: 'xf056@FontAwesome',
//                iconCls: 'grid-del-btn',
//            	hidden: true
//            },
//            {
//                xtype: 'container',
//                flex: 1
//            },
//            {
//                xtype: 'button',
//                glyph: 'xf1c3@FontAwesome',
//                id: 'xlsxDown',
//                cfg: {
//                    type: 'excel07',
//                    ext: 'xlsx'
//                },
//                iconCls: 'grid-excel-btn',
//                margin: '0 3 0 0',
//                
//            }
//        ]
    },

    viewModel: {
        type: 'mygrid'
    },
    id: 'myGrid',
    style: 'border: 1px solid #659DDC; padding: 5px;',
    bodyBorder: false,
    header: false,
    store: 'MyStore',
    viewConfig: {
    	enableTextSelection: true,
      	getRowClass: function(record, index) {
            var LC_NO = record.get('LC_NO');
            if(LC_NO != undefined) {
            	return 'bg-green'
            }
        },
    },

    columns: [
        {
            xtype: 'rownumberer',
            width: 40
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            text: 'V_TYPE',
            dataIndex: 'V_TYPE'
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'LC_NO',
        	enableTextSelection: true,
        	text: 'L/C번호',
        	width: 150
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'LC_SEQ',
        	enableTextSelection: true,
        	text: 'L/C순번',
        	width: 90,
        	align : 'end'
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'PO_USR_NM',
            enableTextSelection: true,
            text: '발주자',
        	filter: { 			//필터
        		type : 'list',
            },
            width: 80,
            align: 'center'
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'PO_NO',
            enableTextSelection: true,
            text: '발주번호',
            width: 140
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'PO_SEQ',
            enableTextSelection: true,
            text: '발주순번',
            format: '0,000',
            align: 'right',
            width: 85
        },
        {
        	xtype: 'datecolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'PO_DT',
        	enableTextSelection: true,
        	text: '발주일자',
        	format: 'Y-m-d',
        	align: 'center'
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'PAY_METH_NM',
        	enableTextSelection: true,
        	text: '결제방법',
        	width: 150
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'IN_TERMS_NM',
        	enableTextSelection: true,
        	text: '가격조건',
        	align: 'center',
        	width: 90
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'BP_CD',
            enableTextSelection: true,
            text: '공급처코드',
            align: 'center'
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            width: 200,
            sortable: true,
            dataIndex: 'BP_NM',
            enableTextSelection: true,
            text: '공급처명',
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'ITEM_CD',
            enableTextSelection: true,
            text: '품목코드',
            width: 120
        },
        {
            xtype: 'gridcolumn',
            style: 'text-align: center; font-weight: bold;',
            sortable: true,
            dataIndex: 'ITEM_NM',
            enableTextSelection: true,
            text: '품목명',
            width: 200
        },
        {
        	xtype: 'gridcolumn',
        	style: 'text-align: center; font-weight: bold;',
        	sortable: true,
        	dataIndex: 'SPEC',
        	enableTextSelection: true,
        	text: '규격',
        	width: 150
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'PO_QTY',
            text: '수량',
            format: '0,000.00',
            align: 'right'
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'PO_PRC',
            text: '단가',
            format: '0,000.00',
            align: 'right',
        },
        {
            xtype: 'numbercolumn',
            style: 'text-align: center; font-weight: bold;',
            dataIndex: 'PO_AMT',
            text: '금액',
            format: '0,000.00',
            align: 'right',
        },
        {
        	xtype: 'numbercolumn',
        	style: 'text-align: center; font-weight: bold;',
        	dataIndex: 'OVER_TOL',
        	text: 'OVER_TOL',
        	format: '0,000.00',
        	align: 'right',
        	hidden: true
        },
        {
        	xtype: 'numbercolumn',
        	style: 'text-align: center; font-weight: bold;',
        	dataIndex: 'UNDER_TOL',
        	text: 'UNDER_TOL',
        	format: '0,000.00',
        	align: 'right',
        	hidden: true
        },
       
    ],
    selModel: {
        selType: 'checkboxmodel',
        checkOnly: true,
        listeners: {
        	select: function(rowmodel, record, index, eOpts) {
        		var M_BP_CD = record.get('BP_CD');
        		var PAY_METH_NM = record.get('PAY_METH_NM');
        		var IN_TERMS_NM = record.get('IN_TERMS_NM');
        		var LC_NO = record.get('LC_NO');
        		var gridRecord = Ext.getCmp('myGrid').getSelectionModel().getSelection();
        		var flag = '';
        		var msg = '';
        		var selModel= Ext.getCmp('myGrid').getSelectionModel();
        		var store = Ext.getStore('MyStore');
        		var store1 = Ext.getStore('MyStore1');
    			var store1Cnt = store1.getCount();
    			
    			//LC등록안됨
        		if(LC_NO == undefined) {
        			for(var i=0; i<gridRecord.length; i++) {
            			if(M_BP_CD != gridRecord[i].get('BP_CD')) {
            				flag = 'F';
            				msg = '동일 공급사를 선택하세요.';
            				break;
            			} 
            			else if(PAY_METH_NM != gridRecord[i].get('PAY_METH_NM')) {
            				flag = 'F';
            				msg = '결제방법이 일치하지 않습니다.';
            				break;
            			} 
            			else if(IN_TERMS_NM != gridRecord[i].get('IN_TERMS_NM')) {
            				flag = 'F';
            				msg = '가격조건이 일치하지 않습니다.';
            				break;
            			}
            			else {
            				flag = 'T';
            			}
            		}
            		
            		if(flag == 'T') {
            			record.set('V_TYPE', 'V');
            			store1.insert(store1Cnt, record);
            		} else {
            			selModel.deselect(record, true);
            			Ext.Msg.alert('확인', msg);
            		}
            		
            		
            		
            	//LC등록 됨
        		} else {
        			store.each(function(record, idx){
        				if(LC_NO == record.get('LC_NO')) {
        					selModel.select(record, true);
        					record.set('V_TYPE', 'V');
        				} else {
        					selModel.deselect(record, true);
                			store1.remove(record);
        					record.set('V_TYPE', '');
        				}
        			});
        			
        			Ext.Ajax.request({
        				url:'sql/m_local_lc_mgm.jsp',
        				method: 'post',
        				params: {
        					V_TYPE: 'SH',
        	    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
        	    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
        	    			V_LC_NO: record.get('LC_NO')
    	    			},
        				callback : function(records,operations,success){
        					
        			    },
        			    success : function(response) {
        			    	var jsonResult = Ext.JSON.decode(response.responseText);
        					Ext.getCmp('V_LC_DOC_NO').setValue(jsonResult.resultList['0'].LC_DOC_NO);
        					Ext.getCmp('V_BANK_CD').setValue(jsonResult.resultList['0'].BANK_CD);
        					Ext.getCmp('V_OPEN_DT').setValue(jsonResult.resultList['0'].OPEN_DT);
        					Ext.getCmp('V_EXPIRY_DT').setValue(jsonResult.resultList['0'].EXPIRY_DT);
        					Ext.getCmp('V_AMEND_DT').setValue(jsonResult.resultList['0'].AMEND_DT);
        					Ext.getCmp('V_CUR').setValue(jsonResult.resultList['0'].CUR);
        					Ext.getCmp('V_XCH_RATE').setValue(jsonResult.resultList['0'].XCH_RATE);
        					
        					var store1 = Ext.getStore('MyStore1');
                	    	store1.removeAll();
                	    	store1.load({
                	    		params: {
                	    			V_TYPE: 'DS',
                	    			V_COMP_ID: parent.Ext.getCmp('GCOMP_ID').getValue(),
                	    			V_USR_ID: parent.Ext.getCmp('GUSER_ID').getValue(),
                	    			V_LC_NO: record.get('LC_NO')
                	    		},
                	    		callback: function(records,operations,success){
                	    		}
                	    	});
        			    },
        				scope: this
        			});
        		}
        		
            },
            deselect: function(rowmodel, record, index, eOpts) {
            	var LC_NO = record.get('LC_NO');
            	var store = Ext.getStore('MyStore');
            	var store1 = Ext.getStore('MyStore1');
            	var selModel= Ext.getCmp('myGrid').getSelectionModel();
            	
            	if(LC_NO == undefined) {
            		record.set('V_TYPE', '');
            		var store1 = Ext.getStore('MyStore1');
            		store1.remove(record);
            	} else {
            		store.each(function(record, idx){
        				if(LC_NO == record.get('LC_NO')) {
        					selModel.deselect(record, true);
        				}
        			});
            		
            		var store1 = Ext.getStore('MyStore1');
            		store1.removeAll();
            		
            		var gridRecord = selModel.getSelection();
            		if(gridRecord.length == 0) {
            			var nows = new Date();
            			Ext.getCmp('V_LC_DOC_NO').setValue('');
            			Ext.getCmp('V_XCH_RATE').setValue(1);
            			Ext.getCmp('V_BANK_CD').setValue(null);
            			Ext.getCmp('V_OPEN_DT').setValue(nows);
            			nows.setMonth(nows.getMonth()+1);
            			Ext.getCmp('V_EXPIRY_DT').setValue(nows);
            			Ext.getCmp('V_AMEND_DT').setValue(new Date());
            			Ext.getCmp('V_CUR').setValue('USD');
            		}
            	}
            	
            	//상단그리드 선택내역이 없으면 초기화
            }
        }
    },
    plugins: [
        {
            ptype: 'gridexporter'
        },
        {
            ptype: 'cellediting'
        },
        {
    		ptype: 'gridfilters' ///이부분
      }
    ]

});